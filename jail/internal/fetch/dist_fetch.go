// Code generated by go-bindata.
// sources:
// dist-fetch/bundle.js
// dist-fetch/bundle.js.map
// DO NOT EDIT!

package fetch

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _distFetchBundleJs = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xec\x5a\xeb\x73\xdb\xb8\x11\xff\x6c\xfd\x15\xeb\xb4\x13\x92\x3e\x1d\xe9\x24\xf7\x1a\x33\xec\x4d\xce\xe3\x36\xb9\xcb\x25\x99\xd4\xd7\x7e\xd0\x79\x38\x30\x09\x49\x8c\x29\x92\x01\x40\x3f\x46\x51\xff\xf6\x0e\x5e\x24\x40\x52\xf4\x23\xf6\x34\xd7\x39\x7d\x11\x85\x7d\xfd\x76\x17\x58\x2c\x40\x05\x7b\xe2\x13\x80\x3b\xaf\x8b\x84\x65\x65\xe1\xae\xca\xb4\xce\x31\xf5\x60\x0d\x41\x00\x17\xf8\xb4\x42\xc9\xd9\x4f\x65\xc9\x28\x23\xa8\x9a\x34\x12\x3b\x41\x00\xc7\x4b\x0c\x92\x1f\x12\x94\x2c\xb1\x41\x3d\x47\x04\xb2\x82\x32\x94\xe7\x38\xfd\x55\xea\x84\x08\xd6\x9b\xb0\x61\xea\xeb\x22\xf8\x63\x9d\x11\x0c\x1a\x8c\xc1\xa1\x87\x20\x8e\x15\xa6\x58\x71\xc7\xb1\xc2\xfc\x2a\xf5\x60\x3d\xa4\x9d\xab\x3f\x5c\xe2\xe4\x0c\xb2\xb9\xc6\x9b\x51\xc8\x8a\x1e\xea\x9d\x6c\xee\x76\x51\xcf\xb4\xf6\x13\xcf\xe4\xdc\x21\x98\xd5\xa4\xe8\x39\xd9\xb2\xfb\xf8\xb2\x2a\x09\xa3\x83\x1e\x0b\x4c\x04\x23\x86\x01\x41\x81\x2f\x34\x2e\x17\x15\x29\x54\x35\x83\x8c\x41\x56\xb0\x12\xd8\x52\x05\xd7\xb2\xce\xc3\xab\x24\xa2\x11\x08\x3c\xe2\x16\x68\x05\xe9\x00\xd6\x9b\xa9\x45\xc8\xd2\x03\xd0\x62\x36\x25\x2f\x51\x8a\xd3\x03\x98\xa3\x9c\x5a\xb1\x1a\x4e\x25\x77\xec\xe8\x12\x27\x35\xc3\x02\xbb\x42\x39\x90\xd2\x9d\x55\x2f\x62\x09\xca\x73\x95\x4d\x1d\xbd\xa9\xd2\xa0\xbf\xdb\xf1\x81\x99\xe0\x6d\x85\xf4\xf7\x1c\x2d\x4c\x3c\x88\x82\x74\xac\x0f\xc8\x97\x04\x88\x80\x91\x1a\x6f\xd5\xf8\x5e\xe6\x9f\xeb\x54\x90\xa0\x9c\x1b\x26\x4c\x76\x35\x57\x6c\x0f\x42\x83\x63\xd3\xb7\x62\x2f\x0f\x2e\x43\xcd\x88\x52\x28\x4f\x3f\xe0\x84\x81\xdb\xc6\x41\x51\xe2\xd8\x9c\x2b\x03\x61\xf2\x57\x10\x69\x35\xdb\xd6\x63\xcf\x60\x6f\xb1\x0c\x29\x4e\x06\xa6\xe3\x36\x0b\xad\x7c\x55\x9f\xe6\x59\x12\x57\x88\x2d\xe3\xf8\x1a\x0b\x15\x44\xf0\xe8\xd1\x36\x9d\xaf\x4b\x94\x02\x2e\x18\xb9\x6a\x12\x5d\xa4\xa0\xc2\xaf\xe2\x6e\x48\x28\xc2\x50\x4d\xd9\x37\xe6\x12\x6c\x9a\x80\x7e\xfe\xc7\x40\xec\xce\x26\xc1\x1e\xec\x83\x18\xdb\xed\xb3\xee\xee\xfd\x3e\x01\xe0\x04\xf0\x83\xac\x48\xf1\xa5\xff\x81\x02\x27\x4c\x00\x7e\xdf\xa6\x3a\x80\x4e\x31\x9f\xc2\xe8\x9a\x81\xf5\x64\xb2\xe3\xd4\x14\x03\x65\x24\x4b\x98\x13\x4e\x76\x26\x43\xb1\x77\x83\xbd\x5d\x35\x2f\x7e\x9c\x63\x96\x2c\x77\xfd\x40\x7c\xc3\x5e\x00\x4f\xbc\xf0\x5a\xa1\x97\x18\xa5\x98\xd0\x5d\x3f\x58\xca\x27\x2e\xf8\xdd\x0d\x04\xdf\xe3\x8f\x35\xa6\x6c\xd7\x0f\x88\x7c\xe2\x82\xdf\xdf\x48\x90\x56\x65\x41\xb1\x90\x94\x8f\x5c\xf4\x07\x2f\x9c\xa8\x58\x89\x3a\x08\x4f\xb6\xe6\x60\xdb\xc7\xca\xcd\x7f\x02\x69\xef\x6b\x51\x3a\x88\x1d\x9d\xf1\x9c\x8d\x4f\x93\x3b\xe5\x32\xd8\x83\x7f\x1f\xfd\xf4\xee\xc5\xe1\x2f\xf0\xaf\x17\xef\xe1\xd5\x9b\x9f\x8f\x0e\x8f\x5f\xbd\x7d\x03\x7b\x41\xbb\xcf\x2f\xf2\xf2\x14\xe5\x1e\xac\xed\xa2\x04\x11\x48\xca\xec\x91\x00\xff\x88\xef\x21\xdb\x82\xfc\xf5\x2e\x77\xfd\x14\x9d\xe2\x5c\x7b\x4e\x19\x5a\xe0\x68\xdf\xf2\x3d\x80\xa7\x3c\x55\x23\xb0\x36\xb2\xf2\x37\xae\xb5\x30\x79\x1f\x42\x74\xa5\xcd\x68\x08\x1b\xd7\xf3\x3c\xcf\xce\xde\xd3\x5b\x67\xaf\x9b\xbe\x6b\x7d\xb8\x75\xfe\xee\x75\x31\xbe\x15\xa5\xde\x4f\xf1\x3c\x2b\xf0\x3b\x52\x56\x98\xb0\xab\x36\x5c\x4e\x1c\x63\x2a\xab\xad\x33\x85\xf5\x64\x07\xe0\x1c\xe5\x35\x3e\x10\x3b\xd8\x64\x67\xc3\xc3\xaf\xb8\x67\x4e\x8a\xe7\xa8\xce\x99\xc3\x33\x2b\x1c\x0c\x27\xa2\x9f\x50\x8b\x6c\x24\xdf\xd6\xf2\x7b\xe6\x35\x72\x6a\x61\x8d\x0b\xb6\xab\xef\x5b\x4f\x38\xd5\xb4\x74\x02\x84\x9b\x15\x55\xcd\xa6\x90\x15\x19\xf3\xb4\x0f\x84\xb7\x84\x10\x89\x06\x49\xc1\xb3\xf8\xc2\x96\x8d\x36\x6c\xd2\x90\x2b\x8d\x80\x9e\x3d\x9c\xf6\x8e\x94\xab\x8c\xe2\x66\x76\x81\x4b\x30\x2d\xf3\x73\x3c\x05\x82\x79\x84\x95\xe1\x46\x28\x8e\x2b\x92\x9d\x23\x86\xe3\x58\x80\x8c\xb1\xec\x6c\x5c\x82\x3f\x72\x19\x3a\x85\x56\x17\x26\xa4\x91\x07\xde\x6a\x76\x46\x1a\xad\xd2\x96\xa0\x86\x9a\xb8\x91\x60\x2d\x2e\x01\x8d\x43\xd4\x6c\x1b\xf9\x20\xbe\x84\x40\x6f\xed\xf6\x93\xdc\x29\x74\xcf\x6e\xbf\x54\x6e\xba\x58\xd4\xdc\xb8\xe3\x72\xf9\xf2\x16\x8c\x31\x43\xe3\x24\x47\x94\x1e\xa2\x3c\x17\xe7\x08\x79\x46\x28\x12\x3c\x85\xc3\xb2\xa0\x8c\xd4\x09\x2b\x79\xaa\x45\xd6\x77\x1b\x32\xe8\x87\x72\x6e\x31\x72\x4e\xb6\x24\xe5\x85\x98\x95\xc7\x57\x15\x3e\x22\xa4\x24\xae\x73\x88\x8a\xa2\x64\xc0\x8b\x21\x20\x10\x46\x79\xa7\x8a\x9a\x98\x38\x5e\x08\x1b\x39\x59\xf8\xb4\x57\x1b\xea\xe8\xca\x33\xb6\xda\x6f\xa4\x5b\xf6\x62\x6f\x9c\xb4\x16\x98\xb1\x04\x63\x82\xe7\x10\x01\x22\x8b\x7a\x85\x0b\x46\xfd\x1c\x17\x0b\xb6\x84\xe7\x11\x3c\x81\x4f\x9f\x5a\xc2\xec\xc9\x09\x44\x51\x04\x75\x21\xe3\x9e\xc2\x8f\xb0\xde\xc0\x81\xc5\xa1\x56\xa5\x38\xc0\x60\xb6\x2c\x79\x9f\xcd\x2d\xf8\xf2\x57\xb3\xa2\x97\xad\x6b\x9c\xaa\x7e\x1a\x0b\x3e\xcd\x08\x6f\x7f\x15\x5d\xff\x6e\x18\x4e\xcb\xf4\x4a\x13\xf9\xb3\xb2\xdb\xcd\x24\xdf\x54\xa6\xda\x75\x5d\x32\xf8\xa0\xdf\xa0\x73\xfe\x71\x74\xec\x84\xcd\x78\x0b\x8c\x27\x4f\x65\xc0\x5d\xab\xb5\x29\x58\x0c\x70\xce\x0a\x15\x35\xca\x0d\x79\x05\xac\xa8\xf3\x5c\x99\xe3\x93\x46\x04\xdd\x9c\x2f\x1a\x92\xae\x1f\x42\xb6\x26\xb9\x68\xb0\xab\x9a\xf1\xe7\xd0\x20\x35\x70\x25\xd5\x88\xe6\x28\x6e\xc9\xad\x68\x9e\xc9\x6f\x38\x21\x99\xac\x10\x6f\x00\xe7\x14\x6f\x03\x27\x59\x5a\xef\x24\x1a\xdb\x97\x06\xb0\x01\xd5\x10\xd1\x90\x2c\x99\x61\x1f\x2c\xf4\x86\x0a\x0d\xd8\xd6\x61\xf8\x65\x7b\xd4\x0a\xf2\x14\xd9\x42\x2a\x69\x6a\x22\x09\xe6\x8d\xc8\xde\xe0\xae\xaa\x72\x17\xde\xa5\x40\x7f\xf3\x70\x05\x5a\xc5\xe9\xc1\x0a\xf4\x83\xd6\x62\x51\x89\x12\x71\x63\x72\x28\xea\x62\x04\xc6\x3e\xce\x2b\x6a\xf3\xcb\xb2\x94\x61\xea\x32\x44\x16\x98\x4d\xa1\x22\x65\x25\x6e\xb6\xe6\x25\x01\x57\x5c\x51\x41\x04\xfb\x21\x64\xf0\x5c\x12\x55\x6d\x0b\x21\xfb\xea\x2b\xce\xc8\x79\x52\x4c\x13\x92\x55\xac\x24\x10\x49\xae\x59\x76\x12\x1a\xc3\x3e\x2e\xea\x15\x26\xe8\x54\xdc\xc6\x0c\x8f\x7f\xfa\x24\x2f\x50\x2c\xb9\xa4\x2c\xe6\xd9\xa2\xd6\x92\xe2\xba\x41\x4c\x40\x47\x44\xc0\x81\xac\x30\xd8\x3d\x53\xf4\x82\x64\xcc\x12\x1b\x8e\xb2\xf6\xdc\x90\x3c\xc3\x57\xe6\x6f\xb9\xa1\xe8\xa6\xa3\x8d\xa8\xb1\x5f\x89\xc0\xb1\x92\x2b\xa5\x53\xa0\x0c\xb1\x2c\x79\xa7\x43\xc9\xe1\xb6\x64\xaf\x1f\x7c\x43\x91\x2f\x18\xd9\x55\x85\x4d\x95\x9e\xf4\xd9\xd2\x3b\xa6\xc5\x86\x10\x6a\xe8\x06\x47\x08\x9b\x10\x36\x9e\xfb\x87\xdb\xc5\xed\x19\xcd\x97\x42\x33\xd0\x16\xec\xac\x2d\x68\x62\x51\xf0\x02\xc5\xa7\x01\x3f\x1e\xe9\x2e\x72\x78\x9b\x7b\xd9\x16\x4a\xa3\xb6\xc5\x6d\x55\x5d\x6f\x1a\x92\xdc\x94\x32\x6b\x4f\x7a\xd9\xa9\xc9\x20\xba\x70\x51\xf4\x33\xd6\xe8\xd1\xcd\xaa\xa9\x89\xe7\xbc\x9c\x2b\xf6\x28\x02\x47\x5e\x5e\x39\xf0\xf8\xb1\x1c\xdc\x8d\xe4\x96\x68\xe8\x6e\x16\xe9\x19\x5f\x07\x96\xdf\xda\xf7\x73\x65\x7b\x76\x76\x12\xb6\x14\x91\xbe\x17\x84\xa0\x2b\x3f\xa3\xe2\xdb\x3d\xf7\x2c\x59\x10\x92\xb3\x73\x53\xca\xe8\xc0\x01\xce\xfd\x79\x49\x8e\x50\xb2\x34\x32\x82\x3b\x2a\xf4\x19\x41\x04\x11\x55\x15\x2e\x52\xf7\x6c\x0a\xd8\x33\x95\x5a\x1d\x7e\xf3\xb5\xd1\xcd\x48\x5b\xcf\x5c\x15\xdc\x29\xcc\x94\x95\x33\x7c\x75\x00\x8e\x54\xec\x4c\x75\xc2\x45\x65\x6c\x40\x29\xb3\x05\x5a\xe1\xa9\x24\x1a\x20\x79\x84\x8a\x92\xac\x50\x9e\x51\x9c\xbe\x41\x2b\x5e\x2d\x94\x19\xbf\x21\xf0\x71\xa1\xa0\x9d\x16\x2a\x84\xaa\xa4\x2c\x11\x7d\x7b\x51\xe8\x92\x22\x4f\xea\xd6\xc4\x99\x76\xac\xd8\xb1\xb6\x58\x67\x36\x27\xdf\x2c\x67\x27\x43\x87\xa0\x51\x29\xbf\xaa\xe9\xd2\x95\xee\x86\x66\x58\xa7\x60\xc5\x2e\xc5\x39\x66\x78\x5b\xec\x62\x49\x96\xbe\xb7\x88\xe5\x68\x07\xc0\x48\xd4\x4e\xc6\x10\x2c\x30\xdb\x66\x7e\x81\x59\xd7\xf4\x67\x26\x6c\x34\x66\x43\x07\xd1\x51\x81\xd9\xfe\xc9\xf0\xdc\xed\xbb\xf8\x22\xcf\x47\xbc\x7c\x91\xe7\x5d\x47\x07\xed\x8f\xc5\x98\xef\x9f\xb3\xd1\x48\x2f\x11\xdd\x86\x61\x89\xe8\x3d\x46\x5a\x61\xb7\xeb\xcb\x78\xe8\xc7\x70\xd3\xed\x33\x84\xaa\x19\x72\xaf\x2b\xfb\xda\xe5\x28\x6c\xd9\xa1\x3e\xe9\x16\x25\xcb\xc4\x36\xf8\x03\x38\x7a\x33\x80\x8f\xfa\xac\x7c\x5d\x5e\x60\x72\x88\xd4\xad\x8d\x61\xb8\x73\x89\xf3\xb2\xd9\x61\x9a\xdd\x7d\xb0\x01\x6f\xf9\x6e\xdf\x80\x7f\x7b\x97\x06\xfc\xc6\x57\x24\xf2\x72\xea\xce\x2d\xf8\x17\x78\x49\xf2\x67\x63\xfe\x67\x63\xfe\x7f\xdf\x98\xdf\xfe\x7a\xad\xb9\x13\x1f\xe9\xe9\x9b\xbb\x6a\xeb\xc2\xe1\xc1\xee\xdc\x5a\xd5\x7f\xe5\x89\xaa\x9b\xcb\x35\xf9\x2b\x6c\x79\x2c\x72\xc3\xdc\x31\xf3\x74\x7f\x1f\x0e\x4c\x8e\x70\xd0\xc8\x31\xbe\x64\xb6\x21\x3e\xd2\x33\x66\xb0\x59\x82\x1d\xa3\xce\xdb\x5f\x1c\xdb\x6a\x47\x9b\xa0\x8c\x5c\x1e\x0e\xdd\x2e\xb6\xfc\x43\x91\x34\x39\xae\x39\x60\xe9\x84\x76\x4e\x58\x3c\xbd\xbf\x51\xe3\x2f\x05\xc6\xe1\xab\x7f\x1d\x78\xf3\xbb\x2e\xc5\x59\x9e\x41\xa4\x53\xf6\xb7\x48\xe4\xe5\xf1\x63\x3d\xf0\x1c\x9e\xed\xef\x9b\xdc\x4d\x6e\xad\xa4\x19\x24\x95\x89\x5e\x74\x05\x0b\xaf\x11\xea\xb0\xa9\x11\xfa\xbc\x93\x75\x92\xb2\x60\xb8\x60\x5f\x73\x06\xc7\xba\x8a\xb3\x4e\x39\x3a\x42\xdd\x8e\x82\xe1\xcb\xad\x7d\x10\xa7\xb9\x9d\xee\x67\xf0\xd4\x7b\xb3\x97\x3d\xc3\xaf\x64\xe4\xcb\x96\xb8\x4d\x8a\x71\x72\x1b\x6d\xe0\x3e\xd0\xb2\xd8\x86\x9c\xd3\xdc\x2d\x7d\xaf\xf4\xca\x67\x4b\x5c\x18\x18\xd3\x21\x74\x3f\xff\xf3\xed\x1b\xbf\x42\x84\x62\x37\xdd\x0a\xab\xdb\x2b\xe9\x48\x5f\xdb\x2c\x19\x8c\xb7\xef\x96\xbe\xbb\x8f\x6e\xc9\x7e\x79\xde\xfb\x97\xc0\xff\xa4\x5b\xba\xa7\x97\xe8\xca\x99\xbb\xbf\x46\x37\x63\xa0\xb6\x98\x87\x7b\x91\xfe\xfd\xfd\x67\xb3\xf7\xd7\x8d\x3f\x72\x36\x95\x33\x77\xcf\xa6\x19\x03\xf5\x0a\xfd\xe1\xb2\xf9\xc3\x9d\xb2\x79\x6d\x3e\x7b\xff\xa8\xb9\x7b\x46\xbf\x8c\x9c\x4a\x2f\x3e\x27\xa9\x46\x1c\xd4\xdf\x1b\x1e\x24\xab\xed\x3f\xc7\x78\xb1\x0f\x82\xbf\x00\x2d\x6b\x92\xe0\x5f\x51\x55\x65\xc5\xe2\xb7\xf7\xaf\xa3\xd3\xba\x48\x73\x8e\xc4\x5f\xa1\xea\xbf\x01\x00\x00\xff\xff\xdc\x5a\xa9\xc1\xdf\x2b\x00\x00")

func distFetchBundleJsBytes() ([]byte, error) {
	return bindataRead(
		_distFetchBundleJs,
		"dist-fetch/bundle.js",
	)
}

func distFetchBundleJs() (*asset, error) {
	bytes, err := distFetchBundleJsBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dist-fetch/bundle.js", size: 11231, mode: os.FileMode(420), modTime: time.Unix(1505683992, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _distFetchBundleJsMap = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xd4\x5a\x7d\x57\xdb\xb6\x1a\xff\x2a\xc2\x7f\x8c\xc0\xf5\xe2\xac\x69\xcb\x8a\x6f\xd6\x23\x9b\x40\x03\x65\x29\xb4\x8c\x71\x09\x27\xc7\xd8\x4a\x62\x70\xec\xd4\x52\x80\x96\xe5\x7e\xf6\x7b\xf4\x2e\x39\x4e\x4a\x37\xee\x1f\xcd\xce\x21\x8a\xf4\xbc\xfe\x9e\x17\x3d\xf6\xfa\xe8\xdc\xa1\x12\xa7\x45\xee\xec\xb6\x5d\x07\x17\xf3\x32\x46\xd8\xd9\xbd\x74\xee\xd1\xf5\x2c\x8a\x6f\x77\x3d\xcf\x13\x4b\xef\xba\x28\x08\x26\x65\x34\x03\xad\x57\xed\x17\x3b\xed\x76\x3b\x79\xfd\xe6\xe5\xab\xa4\xdd\x7a\xf5\xeb\xcb\xd7\x8e\x6b\xf2\x34\xbd\x34\x4f\xd0\x43\xf3\x06\x57\xf7\x47\x88\xc4\x93\xe6\x0d\x7e\xfb\x3a\xbe\x6e\xaf\x3a\xac\xee\x97\xe8\xf3\x1c\x61\x52\x73\x32\x41\x51\x82\x4a\x5c\xcb\x83\x67\x45\x8e\xd1\x5a\xa6\xb7\x6f\x76\x46\x2f\x57\x6b\x7b\xfb\xe2\xcd\xe8\x7a\x8d\xe0\xb7\xaf\x63\xf4\xc2\xb9\x72\x9d\x3c\x9a\x32\xdc\xae\x5c\x67\x1a\xcd\x66\x69\x3e\xc6\xce\xae\xe3\x43\x08\xa1\x0f\x61\x08\x7d\x1f\xc2\xee\xf2\xb2\xee\xb7\x3b\x0f\x20\x44\x74\x39\xaa\x27\x5a\x27\xca\x87\xf0\xe0\xa9\x1c\xc6\x07\x86\x24\x84\x6e\x11\x40\xd8\x77\x43\x08\x43\xf7\x75\x00\x21\x0e\xf8\x9a\xfe\xa1\x1c\x93\xd0\xa4\x48\x43\x08\x5b\x15\x8a\xd9\x77\x52\x4c\x43\x08\x5f\x4a\x0a\xc3\x98\x77\x65\xe8\xe2\x43\xdf\xfe\xe0\x20\x3c\xb8\x0f\xdc\x23\x08\x8f\x7c\x08\xdf\xed\xb0\xe5\xb1\xdb\xa7\xd2\x0e\x20\x3c\x70\xa7\x5a\xf0\x6d\x00\xe1\xb9\xad\xb9\x0c\x39\xfd\x09\x84\x27\x4b\xf4\x74\x79\x61\xd0\x53\x94\x1e\x02\xf7\x0c\xc2\x8f\x4c\x21\x3f\x62\xab\x2e\x84\x5d\xb7\x07\x61\x8f\xad\xa8\xe4\xaf\x21\x35\xe2\x98\x0b\x65\x7f\xd8\x71\x5f\x49\xaf\xf0\x55\xcd\xaa\x63\x66\x56\x32\x16\x65\x4f\x9b\xd9\xd3\xaf\x0a\x3f\xa3\x7f\xd8\x4f\x46\x7e\x4c\x85\x75\x39\x46\x21\x09\xdd\x0b\x7a\x72\x1f\x40\x78\x2f\x70\x66\x3a\x18\xa9\x5e\x45\x62\xd5\xa3\x4c\x5e\xe8\x9e\x53\x15\xea\x98\x6e\x7e\x70\xc7\x0c\x2d\x26\x5e\xcb\xd1\xae\x9c\xc0\x70\x16\x30\x3b\xf7\xdc\x98\x52\x6a\x0b\x2b\x94\xc7\x30\x2c\xcd\xac\xe8\xc1\xf0\xd0\xf8\xd9\x85\x61\x35\xf2\x3c\x29\x26\xc1\xde\x77\x44\xdc\x3f\x82\xdd\x49\x20\x69\xc3\x91\xfb\x11\xee\x9d\x48\xa3\xc2\x44\xc5\xe4\x3e\xf4\x8b\x2e\x84\x87\xdc\x53\xbf\x0f\x61\x1e\x72\x2f\x4f\x20\xfc\x9d\xad\xe8\x66\x97\xb3\x9e\x40\xf8\x81\xad\xf8\x1e\x8b\xd2\x09\x84\xa7\x6c\xc5\xf7\x64\xf8\x0e\xd9\xca\xf7\xbf\x04\x70\x6f\xc2\x23\x24\xd3\xaa\xaf\xb2\xe0\x58\x85\x5e\x65\x19\xab\x12\x93\x46\xbb\x5b\x89\xbc\x4a\x0f\xc5\xe7\x99\x7c\x3a\xd1\xd9\x4a\xd2\x7c\x35\x69\x7a\x2a\xd0\x2a\x33\x99\x91\x37\x82\x88\x59\x75\x41\x6b\x43\x65\x18\x95\xf1\x2a\x70\x3f\x2a\x19\x3a\x73\x75\xa5\xa8\x90\xb3\x14\x37\xa9\x6b\x3c\xd6\x49\x45\xa9\xdb\x26\xf5\x4a\xdf\x35\xb3\xde\x93\x12\x7e\x09\x0d\x09\x1a\x05\xcd\xa2\xf1\xe8\xb1\xae\xc6\x82\x0c\x61\xf8\x7e\xbd\x57\x94\x3a\x93\x39\xce\xe0\x91\xc5\xc6\x40\xf9\xa3\xd6\x4b\xed\x5b\x0f\x86\xc4\xe2\xb6\x20\xfd\xf3\x29\x5e\x57\x7c\xed\xd1\xf6\x61\x4a\x54\x5d\x83\x4a\xfc\x4f\x2d\x0a\x96\xef\xbf\x58\xf6\x58\x4d\xed\xd4\xe0\xae\xcb\x12\x8e\x45\x17\x86\xfb\xb4\x33\x43\x2f\xb8\x0d\x44\x8e\x2f\x7f\x8e\xc2\x7d\x51\x35\x10\x1e\x8c\xdc\x0b\xf8\x4e\x55\xe2\x41\x62\xa8\xf5\xfd\x17\x01\x7c\x27\x6b\xe5\x8c\xda\x67\x58\xce\x49\x20\x3c\x10\x50\x31\xbe\xe5\xdc\x6c\x07\x46\xfb\xea\xd9\x08\xc8\xfe\xa3\xe2\xf0\x51\xe1\xdb\x53\xe9\xce\x28\x7b\x4a\x03\xdb\xb3\xa0\xd9\x61\x5d\xf5\xc8\x10\xde\x5b\x82\x2f\x0b\x68\x53\x35\x73\xc9\x6e\xfd\x95\x9b\xd5\xa4\x5e\x95\xda\xba\xe8\x45\x51\x5d\x2c\x37\x57\x43\xec\x19\x0c\x3f\x09\x2f\xcf\xd4\x89\x96\x78\x4e\x69\x68\xd3\x64\x59\x7c\x64\x34\xf6\xba\xde\x72\x06\x21\xb4\x9b\x7d\xce\x80\xdc\xa7\x79\xb0\xef\xfb\xe3\x00\x66\x3a\x03\x2e\x60\x11\xcc\x02\x76\x63\x84\x1a\x16\x7d\x0d\x0a\x80\xce\xa9\xca\x18\xc2\x98\x3b\xa1\x6d\x8b\x20\x8c\x0c\x60\xed\x6b\x39\xdf\xe3\xf1\xb5\x3b\x07\x97\x53\xe1\xa9\x44\x9f\x19\xa1\xe9\xa4\x25\x6f\xf6\x0c\xf0\x55\x9a\x18\x84\xfa\x9e\x54\x37\x9d\xac\xba\xf3\xb5\x8c\x15\x23\x74\x60\x65\x1e\xb6\xe9\xd0\x73\x01\xbb\x47\x6e\x6a\x63\xc5\x3b\x42\xac\x12\xb3\xa2\xe2\xdb\x50\x29\x15\xf9\x1e\x57\xc1\x2e\xf9\xb0\x5a\xe3\xff\x2c\x04\x75\xa6\x2d\xe3\x7b\x13\x8a\xd9\x61\x3d\x79\x5d\x0e\x9f\xd0\xe1\x8a\xe7\x99\xc0\x69\xfc\xdc\x38\xe9\xf4\x94\x88\x7d\xfd\xff\x20\xc6\x8c\xac\xab\xed\x27\xc2\xc2\xe6\xa6\x15\xa6\xd9\xa5\x35\x7a\x8e\xca\x5a\x59\x08\x2b\x52\xf9\xab\x48\xe5\x69\xc0\x9e\x5f\x2a\xb8\x7d\x0d\xaa\x41\x3a\xa7\xe3\x9a\x85\x7b\x3b\xf0\x69\xd3\x7f\xb5\xa7\x6f\x12\x1c\xa8\x79\xab\x76\x24\x84\xaf\xbe\xe7\x21\x40\x8c\x84\x6c\x54\x83\xf0\x68\x42\x3b\xe8\xfb\x13\xe9\xe9\xd1\x48\x99\x3c\xde\xf3\xb1\x31\x13\xbe\x0c\x20\x6c\x8b\x29\xe1\xa3\x1c\x0a\xdd\x7f\x05\x12\x12\x7f\x1c\x52\x3f\xce\x20\x3c\xa3\xe7\x7f\xb0\x15\x7b\xb6\xe1\x28\xf8\xf4\x61\x8a\x0f\x90\xf4\x9c\x3b\xe4\x8e\x75\x91\xd0\x6b\xef\xfd\x1d\xc7\x9c\xdd\x7b\x6d\xf3\xde\x63\x22\xce\x60\x77\xc4\x51\xd7\x7b\xf4\x2e\xfc\xe3\x6f\x8c\x0d\xfc\x31\x4c\xf3\xe9\x87\x01\xe6\x58\xe5\xb6\x3f\xb6\x9f\x4e\xa4\x84\x87\xf0\x1b\xe3\x4e\x75\xf0\x63\xa0\x30\x1a\xb6\x92\x34\x3b\xc1\xfa\x41\xa3\xf6\x39\xc2\x2e\x0f\x7a\x07\xbd\x09\xd9\x25\xf4\xe7\xad\x88\xaf\x7f\x01\xa3\x3b\x7e\x05\x1d\xb0\xa7\xe2\xf0\xbd\x91\x81\x5a\x26\xed\xbb\x7d\xca\x69\xed\xb2\x1b\x51\xcf\x7d\x27\xf6\xed\x77\x0c\xc3\x99\x28\xc4\x03\xa1\xa1\x22\xbf\xa6\xb3\xd8\xa9\x1f\x0a\x95\xab\x2e\x87\x55\x7a\x77\x42\x56\x23\x79\xa0\xfc\x64\x35\x72\x2a\x7f\xa8\xca\xd8\xdf\x09\xdc\xd6\xa1\x55\x2b\x70\x79\xe3\xe5\xa1\xe3\x3a\xa3\x34\x43\xce\xae\x73\x3d\xcf\x93\x4c\xbc\x2c\x11\xef\x81\xc2\x22\x27\x28\x27\xce\xee\xa5\x03\x06\xc4\xf3\xc0\xa7\x09\x02\xd3\x22\x99\x67\x08\xc4\x51\x3c\x41\x83\x1c\x0c\xc8\x5d\x54\x82\x34\xc7\x24\xca\x32\x94\x1c\xb3\x53\x0c\x3a\xe0\x71\xe1\x0f\x72\x46\x20\x18\x4b\xf4\x79\x9e\x96\x08\x8c\xe6\x79\x4c\xd2\x82\x9f\xc9\x1f\x60\x38\x14\xef\x58\x86\x82\x6e\x38\x6c\x70\x55\xbd\x64\x0b\x3c\x0a\x51\x4c\x58\x38\x41\xf1\x2d\x48\x47\xd2\x94\x14\x83\x34\x37\x0c\x1a\x90\x74\xd4\xa8\x5a\x74\x29\x85\x5d\x6d\x09\xa2\x01\x29\x11\x99\x97\xf9\x92\xf1\x9a\xb4\x89\x1e\x66\x45\x49\xb0\x6f\xa9\x2f\x51\x44\x10\x88\x40\x8e\xee\xa5\x09\x8d\x28\x4f\xc0\x6c\x4e\x40\x4a\x40\x9a\x93\x02\x90\x89\x80\x48\x6a\xa3\x28\x09\xe2\xce\x1a\x8d\x14\x38\x65\x9f\xd0\xbe\x0b\x1e\x17\xae\xda\x4c\x93\x5d\x20\xc9\xf5\x6e\x56\x44\x09\x4a\x76\xc1\x28\xca\xb0\x44\x61\x61\x99\xdd\x7d\x40\xf1\x9c\x20\x66\x99\x30\xc4\x8a\xc4\x80\x4c\x97\xdc\x8f\xa3\x2c\x13\x51\x90\x50\xb8\x82\x59\x7e\xeb\xfd\x9a\x08\x6e\x59\x16\xec\x67\xd1\xd8\x54\x1f\x61\xc0\xcd\xb6\xf4\x37\xf9\x1e\xe8\x00\x52\xce\x91\x25\xe0\x94\xc7\x8b\x8a\x10\x5a\x41\x31\x32\x24\x0a\x4a\x11\x56\xdb\x3e\x9f\x1d\x2e\xa8\x38\x99\x94\xf4\x04\x9b\x80\x60\x50\x5c\xdf\xa0\x98\x80\x86\xf6\x45\x9c\x0c\x87\x3c\x90\x35\x4e\x36\xa7\xa0\x23\x05\xf8\x6b\xa4\x1b\x19\x5a\x27\x25\xae\xc9\x0b\x43\x9c\x66\x99\xcd\xaf\xb3\x34\x1e\xce\x22\x32\x19\x0e\x57\x8a\x9b\x81\x0e\x18\x38\x03\xc7\x10\xf1\xbe\x88\x12\x80\x72\x52\x7e\x51\x11\xc8\x13\x20\xd0\x12\x30\x31\x5a\xb1\x55\x57\x92\x2d\x1e\x52\xfa\x9f\xb7\xbd\x0d\xce\xbb\xc1\x07\x18\x1e\x81\xfd\x7e\xff\x53\xf7\x14\x6c\x6f\x0f\x72\xb0\xbd\x0d\x9e\xf6\xc6\x98\xd1\x7a\x8e\xeb\x08\xf1\x8d\x4d\x8e\xd9\x5b\xf6\x16\x78\x43\xbc\x0d\xde\xa4\x1a\xab\x14\xef\xf8\x0b\xdc\x0d\xf5\x2a\xb7\x96\xea\x94\xbf\xc7\xdd\x50\x6f\x74\x57\x50\xf1\xd7\xb9\x1b\xfa\xcd\xee\xe6\x93\xbc\xd4\xef\xb8\x95\x27\x76\xce\x81\x0e\x18\x67\xc5\x75\x94\x5d\x0e\x1c\xe6\xcb\xc0\xa1\x05\x2e\x0d\x18\x38\x3f\x6f\x78\x67\x18\x95\xd8\x8b\x8b\xbc\x8c\x12\xef\xbc\x28\x6f\xbd\x71\xe1\xe1\x32\xf6\x46\xb7\x39\x2e\x71\xf3\x3a\xfd\xea\xcd\xbc\x82\x90\x02\x3d\x10\x8e\x88\x77\x83\xbd\xbc\x48\x90\xcc\x4d\xef\x3a\xba\x46\xd9\xcf\xac\x6e\x4a\x65\xd3\x5b\x4c\xa2\x31\xea\xb4\xfe\xb6\x0a\xf9\x2e\x7e\xe0\x48\x34\xbc\xed\xea\x87\x03\x61\xe3\x23\xc1\xf9\xaf\xc7\x01\x16\x86\xd9\x51\x95\xa0\xa9\x1e\x4e\x0b\xfe\x17\x6b\x2b\x9e\xcc\xf3\x5b\x8a\x61\x4b\xc1\x1b\x17\x39\x26\x40\x84\xd5\x40\x72\xd3\x8e\xb0\x24\xe3\xc1\xac\xd2\x59\x21\xe6\x91\x02\x09\x1a\x45\xf3\x8c\xa8\x8e\x08\x98\x91\x8d\x34\x9f\xcd\x89\x0b\xd2\x3c\x25\xec\x0e\x02\x80\x8b\x2e\xd1\x67\xd0\x61\xfd\x5f\xd8\x62\x51\xfa\x26\x21\x56\x84\x5c\x6f\x43\xf4\x44\x59\x77\xf4\xec\x43\x59\x4c\x53\x8c\x1a\x8d\x12\xe1\x22\xbb\x43\x2e\x28\x11\xed\x43\x5b\xa0\xf3\x1b\x57\xab\xc8\x87\xc3\x59\x99\xde\x45\x04\x0d\x87\xcc\xc4\x21\xe2\x6d\xbd\x51\xa2\xcf\x94\x0d\xbb\x00\x95\xa5\xc1\x07\xe8\x45\xd9\x40\x65\xb9\xa5\x77\x94\x34\xae\x86\x9d\xfa\xf2\x70\xc1\xcd\xb3\xa8\x98\x55\xd4\x3a\x49\xb6\xe0\x0b\xf6\xb5\x78\x52\xa9\x58\x51\xd7\xb1\x14\x85\x6c\xc7\xc8\xac\xe9\xa5\x10\xc5\x59\x84\xb1\xca\x01\x1d\x94\x72\x1e\x93\xa2\x94\x81\x78\x9c\x22\x32\x29\x12\x17\x08\x59\x14\x9b\x24\x2d\x51\x4c\x5c\x70\x5d\x24\x5f\x16\x9d\xc7\x85\x42\x84\x4c\x52\xdc\xe4\x0c\xa0\x03\x36\x0f\xba\x9f\x36\x7d\xe3\x64\xa2\x6c\xa4\xc1\x12\x16\x37\x1e\x17\x5b\x26\x91\x14\x4f\x05\x4c\xa3\x7c\x1e\x65\x96\x0c\xaa\x93\x0a\x98\x67\x99\x2f\x01\xa6\x81\x61\xe6\xf2\xbe\x9f\xc7\xa8\x18\x49\xc7\x8c\x68\x31\xfe\x79\x99\xb1\xfb\x61\x36\x27\x74\xed\x5b\x87\xca\x74\x7e\xce\x7f\xda\x24\xf5\x3e\x70\x7a\x71\xb6\x65\x73\x18\x0e\x71\x32\xb9\x21\x53\x00\xa0\x0c\xa3\xd5\x66\x4a\x32\xd3\x5b\x6e\x59\xd5\x37\x65\xbe\x65\xb8\xc5\x28\x4d\xac\x70\xd6\x7b\x55\xf1\xc7\x12\x24\x9d\xa8\x4a\x32\xbc\xad\xfa\x69\xb2\xd3\x30\x56\x59\x45\x68\xe9\x97\x66\x61\x7f\x16\x4f\xa8\x0b\xfd\xff\x1a\x55\x65\xd4\x26\xbc\x2c\x14\xa6\x7b\xa8\x1d\x97\x63\x76\xa5\x08\x52\xed\x21\x4f\xb3\xd4\xca\xb2\x77\x4b\x78\x32\x8a\x0e\xfb\x6a\x4a\xf1\x75\x08\x90\x2f\x33\x2a\x80\x93\x77\x3a\x60\x93\x8f\x4c\x9b\xe0\xa7\x9f\xf8\xe6\x46\x87\xa7\xb9\x21\x7b\x54\x94\xa0\x41\x07\xe0\x5b\x3a\xa8\x5b\xc6\xd1\x0f\x3d\xb9\x13\xba\x2f\x6f\xaf\x7c\x7d\x42\x15\x6e\xc0\xb2\x8c\xbe\x34\x53\xcc\xbe\x1b\x77\x5b\x16\x2f\x60\x9c\x97\x77\x26\x97\xd1\xc1\x00\xb8\x6b\x8e\x8a\xb2\x1b\xc5\x93\x06\xa2\x5d\x91\x45\x2c\x9a\xcd\x50\x9e\x34\x6e\x5d\x80\xb6\xac\xc6\x67\x06\x8f\x7e\x09\xc2\x3c\x9a\x22\x17\xdc\x45\xd9\x1c\x29\xe5\xbc\x7d\xe5\x45\x39\x8d\xb2\x14\xa3\xe4\xf7\x68\x4a\x6f\x1a\x01\x6c\x53\x1d\xd0\x7d\x26\x60\xcb\xaa\xfb\x8d\x3e\x83\xad\x39\x89\x70\xff\x3e\xff\x50\x16\x33\x54\x92\x2f\x7c\xe0\x66\x36\x0e\x55\xe3\xb2\x75\x6c\x55\xd3\x4f\x12\x5e\xda\x74\x74\xd0\xb8\xbc\xaa\x46\x70\x2d\x47\x73\x36\xc7\x93\x06\x77\xd3\x37\x50\x48\x50\x86\x88\x70\x42\x2a\xe7\x7b\x15\x79\x6b\x9c\xbf\x32\x05\x8e\x11\xb1\xa5\xfd\x43\x30\xd7\x7a\x65\xe0\x55\xca\xe7\x87\x35\xe4\x97\xad\x2b\x7f\x39\x11\xc6\x88\xc0\x2c\xb3\x8d\xae\x95\xb6\x0e\x02\xf0\xd7\x5f\x32\x24\x42\xec\x24\xc2\xcf\x06\x84\x30\xc7\xae\x96\xf5\xc8\x98\xa6\x60\x11\x93\x67\xcc\xf3\x6f\xa6\x27\xd3\x64\x01\x82\x49\x44\xd2\x18\xd4\x48\xad\xa0\x4e\xf7\x9a\xa4\x78\x5f\xdc\xa3\x32\x8c\xc4\x58\x65\x36\xdd\x6f\xb4\x5d\xfd\x2f\x40\x9e\x6d\x20\x11\xd3\x26\xb3\x93\x5e\x06\x67\xb8\xf2\x14\x0b\x86\xcb\x53\x80\xd9\xb5\xe9\xa9\x0b\x1e\x29\x06\x73\xdc\x79\xd1\x6a\xb9\x80\xaf\x3f\xa1\x07\xd2\xd9\xec\x1f\x6d\xaa\x71\xa6\xf3\xb8\x58\x9e\x60\x9e\x74\x1b\x32\xca\xe2\x16\x74\x84\x6c\xf0\x5b\x07\xbc\x68\xb5\x68\xfb\x16\x1b\xff\x06\xed\x56\xcb\xa4\x16\xfb\x92\x63\xf9\x88\xda\xa7\x8e\xe9\x0f\x93\x84\x5e\x18\x14\x06\xc3\xc2\x26\x6d\x00\x9b\x31\x7f\xbb\xf4\x33\x25\xd8\xb4\x72\x91\xa0\x07\xd2\x58\x8a\xb8\x31\x28\x8b\x89\x94\x36\x74\x39\x9c\xf2\x64\x63\xf7\xb3\x25\xeb\x06\x17\xf9\x92\x2c\x6e\x18\xd3\xd2\x24\x13\x94\x37\x12\x2a\xea\xf0\x63\xff\xf7\xe6\x2c\x2a\x31\x6a\x24\x5b\xdf\x99\x4f\xc6\xbf\x09\x7a\xc2\xc3\xa0\x88\xcd\x0f\xf5\x38\x68\x54\xcc\x33\x3d\x10\x2e\x3d\xc4\xd7\x3e\x14\xbe\xfe\xd6\x43\xe1\x6a\x98\xc5\x2c\xfd\x43\xc1\x6c\xcc\x83\xcf\x04\xf3\xd2\x5b\x90\x5a\x98\x77\xfe\x09\xcc\x3c\xf7\x7f\x30\x9c\x75\xc1\x3e\x1b\xd0\x4b\x2f\x92\x6a\xa1\xfe\x75\x3d\xd4\x57\xf2\xfd\xfb\x69\x51\x10\x67\xd7\x71\x16\xff\x0b\x00\x00\xff\xff\x38\x09\x2e\x6d\xa5\x29\x00\x00")

func distFetchBundleJsMapBytes() ([]byte, error) {
	return bindataRead(
		_distFetchBundleJsMap,
		"dist-fetch/bundle.js.map",
	)
}

func distFetchBundleJsMap() (*asset, error) {
	bytes, err := distFetchBundleJsMapBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "dist-fetch/bundle.js.map", size: 10661, mode: os.FileMode(420), modTime: time.Unix(1505683992, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"dist-fetch/bundle.js":     distFetchBundleJs,
	"dist-fetch/bundle.js.map": distFetchBundleJsMap,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"dist-fetch": {nil, map[string]*bintree{
		"bundle.js":     {distFetchBundleJs, map[string]*bintree{}},
		"bundle.js.map": {distFetchBundleJsMap, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}
