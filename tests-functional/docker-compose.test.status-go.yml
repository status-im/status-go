services:
  status-go:
    user: ${FUNCTIONAL_TESTS_DOCKER_UID}
    build:
      context: ../
      dockerfile: _assets/build/Dockerfile
      args:
        build_tags: gowaku_no_rln,enable_private_api
        build_target: statusd
        build_flags: -cover
    entrypoint: [
      "statusd",
      "-c", "/static/configs/config.json",
      "--server", "0.0.0.0:8354",
      "--seed-phrase", "test test test test test test test test test test test junk",
      "--password", "Strong12345",
      "--dir", "/tmp/status-go-data", # Keep in sync with `config.json/DataDir` value. Later this arg will not be needed.
    ]
    ports:
      - 3333:3333
      # - 8354:8354 # use for local debbuging only
    healthcheck:
      test: ["CMD-SHELL", "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":1}' -H 'Content-Type: application/json' http://0.0.0.0:3333 || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 120
    environment:
      GOCOVERDIR: "/coverage/binary"
    volumes:
      - ./coverage/binary:/coverage/binary
    stop_signal: SIGINT

  status-backend:
    user: ${INTEGRATION_TESTS_DOCKER_UID}
    build:
      context: ../
      dockerfile: _assets/build/Dockerfile
      args:
        build_tags: gowaku_no_rln,enable_private_api
        build_target: status-backend
        build_flags: -cover
    entrypoint: [
      "status-backend",
      "--address", "0.0.0.0:3333",
    ]
    healthcheck:
      test: ["CMD-SHELL", "curl -X POST --data '{\"jsonrpc\":\"2.0\",\"method\":\"net_version\",\"params\":[],\"id\":1}' -H 'Content-Type: application/json' http://0.0.0.0:3333 || exit 1"]
      interval: 5s
      timeout: 2s
      retries: 120
    environment:
      GOCOVERDIR: "/coverage/binary"
    volumes:
      - ./coverage/binary:/coverage/binary
    stop_signal: SIGINT

  tests-rpc:
    user: ${FUNCTIONAL_TESTS_DOCKER_UID}
    depends_on:
      status-go:
        condition: service_healthy
      status-backend:
        condition: service_healthy
      deploy-communities-contracts:
        condition: service_completed_successfully
    build:
      context: .
      dockerfile: Dockerfile.tests-rpc
    entrypoint: [
      "pytest",
      "-m", "rpc",
      "--anvil_url=http://anvil:8545",
      "--rpc_url_statusd=http://status-go:3333",
      "--rpc_url_status_backend=http://status-backend:3333",
      "--ws_url_statusd=ws://status-go:8354",
      "--ws_url_status_backend=ws://status-backend:3333",
      "--junitxml=/tests-rpc/reports/report.xml"
    ]
    volumes:
      - .:/tests-rpc
