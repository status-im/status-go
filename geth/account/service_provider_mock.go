// Code generated by MockGen. DO NOT EDIT.
// Source: geth/account/accounts.go

// Package account_test is a generated GoMock package.
package account

import (
	reflect "reflect"

	accounts "github.com/ethereum/go-ethereum/accounts"
	keystore "github.com/ethereum/go-ethereum/accounts/keystore"
	gomock "github.com/golang/mock/gomock"
)

// MockServiceProvider is a mock of ServiceProvider interface
type MockServiceProvider struct {
	ctrl     *gomock.Controller
	recorder *MockServiceProviderMockRecorder
}

// MockServiceProviderMockRecorder is the mock recorder for MockServiceProvider
type MockServiceProviderMockRecorder struct {
	mock *MockServiceProvider
}

// NewMockServiceProvider creates a new mock instance
func NewMockServiceProvider(ctrl *gomock.Controller) *MockServiceProvider {
	mock := &MockServiceProvider{ctrl: ctrl}
	mock.recorder = &MockServiceProviderMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use
func (m *MockServiceProvider) EXPECT() *MockServiceProviderMockRecorder {
	return m.recorder
}

// Account mocks base method
func (m *MockServiceProvider) Account() (*accounts.Manager, error) {
	ret := m.ctrl.Call(m, "Account")
	ret0, _ := ret[0].(*accounts.Manager)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// Account indicates an expected call of Account
func (mr *MockServiceProviderMockRecorder) Account() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "Account", reflect.TypeOf((*MockServiceProvider)(nil).Account))
}

// AccountKeyStore mocks base method
func (m *MockServiceProvider) AccountKeyStore() (*keystore.KeyStore, error) {
	ret := m.ctrl.Call(m, "AccountKeyStore")
	ret0, _ := ret[0].(*keystore.KeyStore)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// AccountKeyStore indicates an expected call of AccountKeyStore
func (mr *MockServiceProviderMockRecorder) AccountKeyStore() *gomock.Call {
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "AccountKeyStore", reflect.TypeOf((*MockServiceProvider)(nil).AccountKeyStore))
}
