// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 1691753758_initial.up.sql (5.929kB)
// 1692701329_add_collectibles_and_collections_data_cache.up.sql (1.859kB)
// 1692701339_add_scope_to_pending.up.sql (587B)
// 1694540071_add_collectibles_ownership_update_timestamp.up.sql (356B)
// 1694692748_add_raw_balance_to_token_balances.up.sql (167B)
// 1695133989_add_community_id_to_collectibles_and_collections_data_cache.up.sql (280B)
// 1695932536_balance_history_v2.up.sql (670B)
// 1696853635_input_data.up.sql (24.129kB)
// doc.go (74B)

package migrations

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __1691753758_initialUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xb4\x58\x4f\x6f\xa4\x36\x14\xbf\x47\xca\x77\xb0\x72\x4a\x24\x0e\xdd\x6d\x55\x55\xea\x89\x4c\x48\x16\x75\xca\x6c\x19\xd2\xcd\x9e\x2c\x07\xde\x64\xac\x00\x66\x6d\x93\x9d\xd9\x4f\x5f\x99\xff\x06\x1b\x50\xd4\xbd\xda\xcf\x7e\xff\x7f\xef\x67\x6f\x42\xcf\x8d\x3c\x14\xb9\xb7\x5b\x0f\x3d\xa7\x2c\x7e\x15\xe8\xfa\xf2\x02\x21\x84\x72\x90\xdf\x19\x7f\xc5\x34\x41\x8f\xc1\xde\x7f\x08\xbc\x3b\x74\xeb\x3f\xf8\x41\x84\x82\x5d\x84\x82\xc7\xed\xd6\xa9\x25\x49\x92\x70\x10\x02\xfd\xeb\x86\x9b\x4f\x6e\x38\xde\x7e\x4e\x5f\x71\x5e\x66\xcf\xc0\x2d\xe7\x95\xc0\x91\x88\xa3\x65\x3b\x65\x24\x81\x04\xdd\xee\x76\x5b\x74\xe7\xdd\xbb\x8f\xdb\x08\xdd\xbb\xdb\xbd\xd7\xec\x6f\x76\xc1\x3e\x0a\x5d\x75\xb2\xcc\xe9\xb7\x12\x70\x46\x8a\x82\xe6\x2f\xf8\xc0\x38\x26\x71\xcc\xca\x5c\x62\xc9\x70\xe5\x1f\x2e\x80\xe3\xc6\x37\xf4\x18\xf8\xff\x3c\x7a\xe8\xba\xf1\xc0\x69\x2d\x71\x7a\xe7\x6f\x2e\x2f\x6e\xfe\xbc\xbc\xb8\xbc\x30\x84\x0a\x73\x92\xbf\xc0\xcf\x89\xd8\x81\xb3\x6c\x26\x5e\x92\xd9\x36\x49\x4a\xf2\x18\xd0\xed\x76\x77\xdb\x2c\xe5\x4c\x2d\xf8\x41\xe4\x3d\x78\xe1\x92\x33\x58\xc0\xb7\x12\x72\x49\x49\xfa\x53\xfc\x12\x92\x70\xd9\x1c\x1f\xba\x4b\xb9\x90\x33\xfe\xa6\xc4\xba\xfd\x39\xf4\xff\x76\xc3\xaf\xe8\x2f\xef\x2b\xba\xee\x6d\x75\x5a\x6b\x54\x06\xd1\x17\x3f\xfa\xb4\x7b\x8c\x50\xb8\xfb\xe2\xdf\x4d\x43\x50\x40\x9e\xa8\x8a\x91\x9c\xe4\x82\xc4\x92\xb2\xfc\x1d\x69\xad\x8a\xd8\xe2\xbb\xa4\x19\x08\x49\xb2\x62\xe9\x12\x95\x78\xbc\x10\x48\xc9\xc6\x12\xcd\x86\x38\x67\xcf\x2c\x1d\x2d\xbe\x10\x81\x0b\x4e\xf5\xa2\x50\x8b\x29\xcd\xa8\x1c\x2e\xbe\x91\xb4\xd4\xa4\x12\x22\x09\x8a\xbc\xa7\x36\x55\xf2\x5c\xc0\xe8\x76\x92\x24\x54\xc5\x8b\xa4\x78\x2c\x9d\x95\xa9\xa4\xc3\x98\xaa\x18\xf6\x79\xb7\x26\x4e\xc5\x71\x4d\xd6\xae\x04\x79\x83\xa4\x0d\x05\x88\xab\x36\x65\x0b\xe1\xcb\x49\x06\x95\x9d\x93\xd8\x93\x37\x56\x72\x2a\xa1\x42\x1b\xcf\x0d\x3a\x01\x23\xf2\x70\xc8\xd8\x5b\x03\x4d\x8b\xc2\x65\x91\x10\x09\x38\x56\xcd\x86\x86\x79\xef\xa4\x7f\x69\x24\xe3\x23\xa1\x39\x16\x47\xc6\x25\x56\xa6\xf6\x7e\xb4\x92\x57\x57\x8d\x28\xe4\xa2\x12\xb1\x4b\x50\x81\x25\xa8\xde\x69\x6c\x34\x99\x16\x73\x20\x52\x05\x52\x56\x86\x8d\xed\xd1\xf2\xd4\x42\x65\xa7\xda\x69\x55\xac\xc9\x98\x64\xaf\x90\xe3\x06\xa3\xba\x0e\x2b\x05\xf0\xe5\x92\x57\x27\x35\x5f\x8d\x12\x7a\x07\x98\x65\x56\xa9\x8a\x59\xca\xf8\x44\x64\x1a\xe0\x5a\x3a\x81\x98\x66\x24\x15\xc8\xd0\xd1\xad\x84\x88\x39\x2d\x54\x1b\xac\xbe\xb5\xe4\x53\x4f\xa6\xb2\x2d\xe4\x5b\xdc\xa9\xcb\xa9\xee\xbc\x59\xec\x1c\xa6\xc1\xe9\x8e\x39\x5a\x60\x6f\xd0\x2e\x50\x13\xf7\x7e\xeb\x6f\x22\x14\x7a\x9f\xb7\xee\xc6\x33\x8e\xc8\xea\x94\x58\xdb\x91\xab\x31\xd6\xda\xbb\xf3\x89\xef\xf2\xd3\x5d\xdf\xe3\x90\x96\xe9\xd9\x9a\xd7\x69\xc1\x52\xb1\xbf\x51\x41\x9f\x53\xc0\x7a\x24\xba\x74\x18\x2c\xb1\x45\xc9\x18\xe0\xb8\xe4\x1c\xf2\xf8\xac\x68\x4e\x46\x24\x8e\x49\x7c\x84\x56\xcb\x42\x34\xa8\x28\x52\x72\x9e\xad\x5a\x21\x39\x2d\x14\x78\xd3\x54\x4d\xc6\x1f\xc0\x19\x88\x09\xd4\x19\x2d\x9b\xe0\x7e\xe7\xfc\x9a\xe1\x56\xcb\x08\x01\x72\x5e\x22\x53\xbc\x6e\xfd\x84\x34\x49\xcc\x29\x19\x8e\xba\x77\x0f\x73\xa5\x44\xb3\x73\xe8\x81\xbd\xe8\xfb\xd3\x8b\x32\x31\x67\x42\x60\x79\x52\x12\xd6\x21\x50\xa9\x93\xa7\x86\x65\xf7\xe3\x5d\x32\x6d\xd5\x4c\x75\x6b\x74\xc1\x47\x2a\x24\xe3\x67\x7b\x19\xbf\x8b\x12\xb6\x45\x6c\xa7\x8c\x6a\x5c\x5a\x82\xdb\x65\xc1\x44\x1a\xa9\x54\xc9\x5d\x60\xc8\x46\x8f\x2b\xae\xa4\xb7\x53\xd5\xc2\xef\xf5\xa1\xe6\x5e\xa1\xe7\x6e\xe7\xdb\xc6\xbf\xaf\xf6\xbd\x27\x7f\x1f\xed\x15\x2a\xa5\x10\x4b\x85\x20\x02\xb3\xef\x39\x70\x71\xa4\x85\x6e\xd6\xda\x24\xc4\x2c\x97\x9c\xc4\x72\xdd\xe4\xa3\x49\x15\x9b\xf1\x66\x65\x83\xf5\x06\xf3\x0c\x50\x10\x70\x00\xfe\x3f\x73\xe9\x15\xcf\x8c\x59\x2a\x7e\x1a\xf6\x80\x80\x3c\x81\x31\xfc\x73\x88\x81\x16\x1a\x37\x4e\xd9\x8b\xd6\x3a\x33\xf0\xb0\xf8\xe2\x5d\x8d\x1f\xa6\xb7\xef\x87\x75\xec\xfa\x99\x08\xc0\x8a\xe5\x1f\x60\x34\x30\xa7\xf8\x20\x24\x91\xa5\x18\x1c\x6e\xfc\xc7\x95\x97\x03\x40\x9a\x42\x48\xca\x5e\x30\xcd\x13\x38\x0d\x55\x57\x0f\xed\xb1\x64\x5c\x66\x65\x4a\x24\x7d\xab\xcd\x2a\x05\x24\xda\x10\x1e\x95\xe8\xe0\x1d\x61\x10\x57\x80\x37\xd2\x2a\x4f\x63\x73\x0b\xce\x24\xc4\xb2\x67\xe8\x93\xb7\x8f\x61\x06\x77\xaf\x25\x1c\xa7\x24\x2b\x20\xf9\xfd\xb7\xd1\xae\xac\xda\xb0\xb0\xee\x1f\x00\xac\xfb\xf5\x34\xc0\x05\x49\x12\x48\x3e\x7c\xfc\xe3\x08\x27\xa4\x4a\xe8\xfa\xd7\x8f\x37\xad\x48\xf3\x63\xd1\x3d\xdb\xdb\x24\xd1\x1f\x5a\x2e\x34\x2a\xab\x81\xfa\xa0\x89\xfb\xd8\x68\xa3\x57\xdf\x1a\x0c\xcb\xc1\xc6\xfd\x2e\xf4\xfc\x87\x40\x51\xa0\xe1\xeb\x6c\xfc\x57\x72\x83\x42\xef\xde\x0b\xbd\x60\xe3\xed\x9b\xaf\x84\x79\xf1\x9d\x7a\x84\x6c\xbd\xc8\x43\x1b\x77\xbf\x71\xef\xec\xff\x38\x2d\x7c\x54\x7f\x36\xcd\x45\xc6\xff\x9b\xea\xcf\xa6\xd5\x64\xff\xbb\xf1\x83\x3b\xef\x69\x3c\xd0\xf0\x81\xa6\x12\x38\x86\x5c\x72\x0a\x42\x99\x37\x19\x79\x3d\x17\xee\xe9\x71\x03\xfa\x4e\xed\xb3\xd3\xf7\xb4\xd3\xcc\x1e\x83\x6a\x9a\x9c\x3a\xa7\x04\xae\xfe\x35\xea\x06\xdf\x05\x3d\x56\x5e\xf7\xf0\xe1\x34\x00\xa0\x5d\xd5\x38\x5d\xdf\x38\x98\x55\x98\x26\x90\x4b\x7a\x38\x57\xae\x9c\xd5\x9d\xda\x24\xab\xea\xa2\x37\xdc\x7e\xe7\x38\x40\xd3\x7b\xdf\x11\x20\xbb\x3a\x23\x8f\x35\x28\xb5\xf0\xdd\xe6\x5d\xb2\x14\xec\x3a\xcb\x97\x17\xc3\x48\xa3\x6b\x13\x86\xb6\x41\xd7\x52\x5a\x23\xe4\xf0\x05\xe0\x8c\x9b\xca\xd1\x5b\xc9\xd1\x3b\xd4\xe9\xfa\xd2\xa9\x66\x87\xc5\x60\xd3\x47\x54\x65\xb4\xf9\x87\xca\x6c\xff\xc8\xaa\x81\x49\x9a\xf9\x03\xef\xe6\x62\x38\x65\xf3\x95\x41\x26\x92\x6f\x57\xac\x5c\x76\x06\xd4\x5e\x53\xdf\x52\x71\x67\xc8\xec\x9d\x9e\x3c\x1b\x0c\x5b\xc5\x95\xa6\x9d\x3d\x4f\xaa\xfa\x2a\xd6\xb8\x8e\x52\xff\x5f\x00\x00\x00\xff\xff\xa7\x49\x66\x52\x29\x17\x00\x00")

func _1691753758_initialUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1691753758_initialUpSql,
		"1691753758_initial.up.sql",
	)
}

func _1691753758_initialUpSql() (*asset, error) {
	bytes, err := _1691753758_initialUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1691753758_initial.up.sql", size: 5929, mode: os.FileMode(0666), modTime: time.Unix(1695921811, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x85, 0x94, 0xd0, 0x1b, 0x52, 0x26, 0x26, 0x6c, 0xad, 0x5d, 0xfd, 0x96, 0x77, 0x92, 0x90, 0xbf, 0x4a, 0x80, 0xb2, 0x80, 0x15, 0xad, 0x34, 0xb2, 0x38, 0xf6, 0x85, 0xbc, 0xdb, 0xd5, 0xac, 0xfc}}
	return a, nil
}

var __1692701329_add_collectibles_and_collections_data_cacheUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xc4\x54\xcd\x8e\xda\x30\x10\xbe\x23\xf1\x0e\x73\x6c\x25\xde\xa0\xa7\x90\x0c\x34\x6a\x64\xda\x90\x54\xdb\x53\x34\x6b\xbb\xec\x08\xc7\x8e\x1c\x67\x55\xde\xbe\x02\x76\xab\x5d\x16\x43\x68\xa5\xed\x35\xf3\xf9\xb3\xf3\xfd\x4c\x5a\x62\x52\x21\x54\xc9\xbc\x40\xc8\x17\x20\x56\x15\xe0\x5d\xbe\xae\xd6\x20\x9d\x31\x5a\x06\xbe\x37\xba\x51\x14\xa8\x91\x24\x1f\x34\x7c\x98\x4e\x00\x00\xe4\x03\xb1\x6d\x58\x41\x2d\xd6\xf9\x52\x60\x06\xf3\x7c\x99\x8b\xea\xc0\x20\xea\xa2\x98\x3d\xe1\x9c\x0d\x9e\x64\x68\x48\x29\xaf\xfb\x1e\xbe\x27\x65\xfa\x39\x29\x4f\x71\xc1\x6d\xf5\x81\x6f\x5e\xac\xe6\xa7\xc3\xce\xbb\x47\x56\xda\xc7\x0e\x5b\x6a\x75\x6c\xa6\x74\x2f\x3d\x77\x81\x9d\x8d\x41\x3a\xed\x5b\x32\x6c\xb7\x31\x00\xb7\xb4\xd1\xcd\xe0\x4d\x0c\x40\x96\x5b\xda\x5f\x31\x0e\xd4\x6a\xc5\xd4\x84\x5d\x17\x7d\xf5\x3d\xc9\xed\xc6\xbb\xc1\xaa\x46\x3a\xe3\xa2\x7f\x7e\x94\x6d\xf0\xfc\x06\x30\x9d\x7c\xfc\x34\x9d\x4c\x27\x4f\x0e\xd7\x22\xff\x56\x23\xe4\x22\xc3\xbb\x6b\x46\xb3\xd2\x36\xf0\xcf\x5d\xa3\x6d\xf0\x3b\x58\x89\x68\x16\x9e\x53\x30\x7b\xe3\xf3\xec\x8f\xa3\xaf\x9e\x71\x2d\x68\xc1\x13\x87\xfe\x3f\x46\xed\xf0\x80\x8b\xd6\x1c\x11\x8f\x64\x86\x78\xe6\xb8\xef\x0c\xed\x2e\xd2\xb4\xf4\xeb\x32\xc9\x62\x55\x62\xbe\x14\xf0\x05\x7f\x8c\xd3\x19\x4a\x5c\x60\x89\x22\xc5\x58\x79\xc7\xf1\x1c\xaf\x87\xbd\xef\xf5\xd7\x6c\xef\x5a\x9a\xac\xd3\x24\xc3\x17\x83\x0c\x0b\x7c\x39\x18\x6d\xb2\xb3\xef\xb0\x4c\xfe\x65\x5f\xf4\x66\xd8\xdc\xbe\x07\x6e\x6f\xdb\xb3\x10\xf1\xb2\x9d\x48\x15\xf7\xee\x16\xf1\xdf\xa5\x60\x57\x3b\xd4\xb2\x85\x12\x93\xe2\x4c\x29\xce\x7e\x1f\xd7\x85\xb3\x0d\x78\xa5\xe2\xa5\xc3\x7f\x1b\xfb\xdf\x01\x00\x00\xff\xff\xcb\x36\xbb\x7f\x43\x07\x00\x00")

func _1692701329_add_collectibles_and_collections_data_cacheUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1692701329_add_collectibles_and_collections_data_cacheUpSql,
		"1692701329_add_collectibles_and_collections_data_cache.up.sql",
	)
}

func _1692701329_add_collectibles_and_collections_data_cacheUpSql() (*asset, error) {
	bytes, err := _1692701329_add_collectibles_and_collections_data_cacheUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1692701329_add_collectibles_and_collections_data_cache.up.sql", size: 1859, mode: os.FileMode(0666), modTime: time.Unix(1695921811, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x94, 0xd7, 0x35, 0x2b, 0x66, 0xe2, 0xb7, 0x3c, 0x8a, 0x73, 0xb2, 0x59, 0x1b, 0xef, 0x82, 0xb1, 0x4a, 0x75, 0x74, 0x2b, 0x5d, 0xa9, 0x33, 0x40, 0x77, 0xe4, 0x16, 0xe5, 0x17, 0xef, 0x39, 0x64}}
	return a, nil
}

var __1692701339_add_scope_to_pendingUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x91\x4d\x8b\xdb\x30\x18\x84\xef\x06\xff\x87\x61\x4f\x2d\xd8\x2d\x3d\xef\xc9\xbb\x56\xa1\xe0\xda\x4b\xa2\x40\x6e\x46\xb5\xde\xc4\x22\xfa\x08\xd2\xeb\xc6\xf9\xf7\xa5\x8e\x4b\x53\x1a\x68\x6f\x42\xcc\x3c\x9a\x07\x95\x25\xb6\x44\x90\xf3\x96\x15\x4f\x09\xc6\x83\xa3\xf2\x49\x0d\x6c\x82\x4f\x1f\xcf\xe4\xb5\xf1\x47\x9e\x39\xaa\xe1\x44\xf1\xc3\x31\xe4\x59\xd5\x48\xb1\x81\xac\x5e\x1a\x81\x35\xd0\xdf\xb7\x50\xd5\x35\xd2\x0d\x28\xc5\x5e\xa2\xed\x24\xda\x5d\xd3\xa0\x16\x9f\xab\x5d\x23\xf1\xf4\x76\xab\x3d\x3d\xe7\x59\x9e\x95\x25\xe4\x48\xb8\x28\x1e\x46\x8a\xb8\x18\x6b\xa1\x26\x0e\xd0\x64\x89\x09\x3c\xd2\xaf\x77\xc0\x73\x02\x8f\x8a\xa1\x22\x61\x08\xfe\x60\xa2\x23\x8d\x10\x71\x50\xc6\x92\x5e\x68\xc2\xa6\xb5\x15\x83\x9e\x06\x8a\x70\x41\x4f\x96\x6e\xe8\x51\x7d\x27\xfc\x41\x77\x70\xca\x4f\xca\xda\x2b\x82\xff\x59\x1a\x28\x25\xe3\x8f\xff\xa9\xfa\xda\x35\xbb\xaf\xed\x32\xb9\x5f\xa1\x2f\x5d\xd7\x88\xaa\xfd\xdb\xfc\xd3\x62\x5c\x6f\xba\x37\x7c\x69\x6b\xb1\x87\xd1\x73\xff\x88\xbc\xe4\x5e\x37\xa2\x92\xe2\x1f\xc9\x3c\xeb\xda\xc7\xe3\xde\xb9\xc9\xb2\xb9\xbf\xeb\x8d\x2e\x70\x88\xc1\xf5\x4a\xeb\x48\x29\x15\xe0\xf0\xfb\xec\x89\x2f\x21\x9e\x96\x14\x1b\x47\x89\x95\x3b\x17\x48\x57\xf7\x2d\xd8\x02\x7c\x3d\x53\xb1\xfe\x6c\x71\xef\xfb\xfe\x39\xcf\x7e\x04\x00\x00\xff\xff\xb1\x95\xae\x0c\x4b\x02\x00\x00")

func _1692701339_add_scope_to_pendingUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1692701339_add_scope_to_pendingUpSql,
		"1692701339_add_scope_to_pending.up.sql",
	)
}

func _1692701339_add_scope_to_pendingUpSql() (*asset, error) {
	bytes, err := _1692701339_add_scope_to_pendingUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1692701339_add_scope_to_pending.up.sql", size: 587, mode: os.FileMode(0666), modTime: time.Unix(1695921811, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaf, 0x4e, 0x75, 0x89, 0x63, 0x4b, 0xe2, 0x1c, 0xb8, 0x28, 0x51, 0x35, 0x93, 0x36, 0xaa, 0xad, 0x5b, 0xa8, 0x53, 0x7d, 0x8a, 0x91, 0x63, 0xb9, 0x3a, 0x2, 0xba, 0x72, 0xab, 0x37, 0x8e, 0xd6}}
	return a, nil
}

var __1694540071_add_collectibles_ownership_update_timestampUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\xd0\x41\x4a\xc5\x30\x10\xc6\xf1\x7d\x20\x77\x98\xa5\xc2\xbb\x81\xab\xbc\x36\xd6\x40\x99\x62\x9b\x48\x77\x21\x36\x23\x0d\xb4\x69\x69\x22\xd2\xdb\x8b\x55\x0a\x0a\x2e\x74\xff\xe7\x63\x7e\x53\xb4\x52\x68\x09\x5a\x5c\x6b\x09\xea\x1e\xb0\xd1\x20\x7b\xd5\xe9\x0e\x86\x65\x9a\x68\xc8\xe1\x79\xa2\x64\x97\xb7\x48\x5b\x1a\xc3\x6a\x5f\x57\xef\x32\xd9\x1c\x66\x4a\xd9\xcd\x6b\x82\x1b\xce\x00\x00\x8e\xc4\x3a\xef\x37\x4a\x09\x9e\x44\x5b\x3c\x88\xf6\x18\x44\x53\xd7\x97\xcf\x68\x18\x5d\x88\x36\x78\x30\xd8\xa9\x0a\x65\x09\x57\x55\x29\xd4\x3f\xbb\x73\xfe\xd7\x90\xb3\xdb\x3b\xce\x38\xfb\x12\x18\x54\x8f\x46\x82\xc2\x52\xf6\xff\x84\xd8\xe0\x29\xe6\xf0\xb2\x5b\x8a\x79\xdb\xa1\xc1\x3f\xfc\xe0\x9b\xfe\x72\x3a\x3f\x6e\x7c\x0f\x00\x00\xff\xff\xb0\x68\x02\x23\x64\x01\x00\x00")

func _1694540071_add_collectibles_ownership_update_timestampUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1694540071_add_collectibles_ownership_update_timestampUpSql,
		"1694540071_add_collectibles_ownership_update_timestamp.up.sql",
	)
}

func _1694540071_add_collectibles_ownership_update_timestampUpSql() (*asset, error) {
	bytes, err := _1694540071_add_collectibles_ownership_update_timestampUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1694540071_add_collectibles_ownership_update_timestamp.up.sql", size: 356, mode: os.FileMode(0666), modTime: time.Unix(1695921811, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0xb9, 0x96, 0x7e, 0xe2, 0x55, 0x68, 0xf8, 0xe5, 0x27, 0x6a, 0x4d, 0xf3, 0xdd, 0x4c, 0xd, 0xf2, 0xb3, 0x91, 0xd0, 0x3e, 0xb6, 0x92, 0x4a, 0xac, 0x59, 0x40, 0xdf, 0xff, 0x74, 0x73, 0xc1}}
	return a, nil
}

var __1694692748_add_raw_balance_to_token_balancesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x34\xcd\xc1\x8a\x83\x30\x10\x87\xf1\xbb\xe0\x3b\xfc\xf1\x2e\xec\x2b\xcc\xaa\xcb\x1e\x52\x05\x89\xbd\x96\x68\xa6\x12\xaa\x93\x92\x89\xb4\x8f\x5f\x0a\xed\xf5\x3b\x7c\xbf\xba\x06\x79\x8f\x25\x6e\xc7\x2e\xb8\xc6\x04\xcd\x31\x05\x59\x91\xdc\x03\xb3\xdb\x9c\x2c\x0c\x7e\xde\x13\xab\xb2\x47\x10\xcc\x4e\x19\x87\x04\xc9\x0a\xa7\x98\xc3\x8a\x20\x99\x57\x4e\xf0\xbc\x84\xdd\x6d\x65\x41\xc6\x76\x23\x2c\xfd\x9a\x0e\x39\xde\x58\x2e\x9f\x95\x82\xda\x16\xcd\x60\xa6\x53\xff\x26\xbe\x1d\x67\x1a\x9b\x7f\x1a\xd1\x0f\x16\xfd\x64\x0c\xda\xee\x8f\x26\x63\x51\xfd\x54\x65\xf1\x0a\x00\x00\xff\xff\xab\xf3\xea\x80\xa7\x00\x00\x00")

func _1694692748_add_raw_balance_to_token_balancesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1694692748_add_raw_balance_to_token_balancesUpSql,
		"1694692748_add_raw_balance_to_token_balances.up.sql",
	)
}

func _1694692748_add_raw_balance_to_token_balancesUpSql() (*asset, error) {
	bytes, err := _1694692748_add_raw_balance_to_token_balancesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1694692748_add_raw_balance_to_token_balances.up.sql", size: 167, mode: os.FileMode(0666), modTime: time.Unix(1695921811, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x28, 0x83, 0x4b, 0x8b, 0x68, 0xf9, 0x8a, 0x35, 0x7, 0x7e, 0x45, 0xaf, 0x5a, 0xa0, 0x9e, 0x2e, 0xeb, 0x9f, 0x31, 0xfe, 0x8d, 0x2, 0xdd, 0x9e, 0x93, 0xc8, 0xb7, 0xf, 0x5a, 0xa7, 0x66, 0x4b}}
	return a, nil
}

var __1695133989_add_community_id_to_collectibles_and_collections_data_cacheUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xce\xcf\xc9\x49\x4d\x2e\xc9\x4c\xca\x49\x8d\x4f\x49\x2c\x49\x8c\x4f\x4e\x4c\xce\x48\x55\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x48\xce\xcf\xcd\x2d\xcd\xcb\x2c\xa9\x8c\xcf\x4c\x51\x08\x71\x8d\x08\x51\xf0\xf3\x0f\x51\xf0\x0b\xf5\xf1\x51\x70\x71\x75\x73\x0c\xf5\x09\x51\x50\x52\xb2\xe6\xe5\x0a\x0d\x70\x71\x0c\xc1\x69\x60\xb0\x6b\x08\xaa\x49\xb6\x10\x5d\xbc\x5c\xd8\x5c\x93\x9f\x47\x5d\xc7\xa0\x9a\x87\xcb\x2d\x80\x00\x00\x00\xff\xff\x3a\x9c\xfc\xef\x18\x01\x00\x00")

func _1695133989_add_community_id_to_collectibles_and_collections_data_cacheUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1695133989_add_community_id_to_collectibles_and_collections_data_cacheUpSql,
		"1695133989_add_community_id_to_collectibles_and_collections_data_cache.up.sql",
	)
}

func _1695133989_add_community_id_to_collectibles_and_collections_data_cacheUpSql() (*asset, error) {
	bytes, err := _1695133989_add_community_id_to_collectibles_and_collections_data_cacheUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1695133989_add_community_id_to_collectibles_and_collections_data_cache.up.sql", size: 280, mode: os.FileMode(0666), modTime: time.Unix(1695921811, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x95, 0x8c, 0xc0, 0xc4, 0xdd, 0x99, 0x2a, 0xbb, 0xd7, 0x47, 0x55, 0x95, 0xa6, 0xaa, 0x73, 0x34, 0x18, 0x43, 0xd2, 0x9d, 0xa, 0x2f, 0xdd, 0x6b, 0xd4, 0x66, 0xff, 0xe2, 0x5d, 0x84, 0xae, 0xc9}}
	return a, nil
}

var __1695932536_balance_history_v2UpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x91\xcf\x6a\xf3\x30\x10\xc4\xef\x02\xbd\xc3\x1c\xbf\x0f\xec\x1e\x7a\xcd\xc9\x4e\xd4\x54\xe0\xca\xad\x22\x97\xdc\x8c\x62\x2b\x8d\xa8\xa3\x04\x49\x2d\xb8\x4f\x5f\xf2\xb7\x10\x1c\x52\x7a\x9e\x9d\xfd\xed\xcc\xa6\x29\x4a\x67\x60\x5c\xf4\x3d\xb6\xc6\xa3\x59\x69\xeb\x6a\xdb\x26\xd0\x6d\xeb\x4d\x08\x09\x9a\x0f\xef\x8d\x6b\xfa\x04\x8b\x6e\xd3\xbc\x53\x92\xa6\x58\xe8\x4e\xbb\xc6\xc0\x06\x68\x04\xe3\xad\xee\xec\x97\x69\xb1\xb0\x6f\x77\xdc\x45\x4a\xc6\x92\x65\x8a\x41\x65\x79\xc1\xc0\x1f\x20\x4a\x05\x36\xe7\x33\x35\x3b\x79\xeb\x95\x0d\x71\xe3\xfb\xfa\xf3\x1e\xff\x28\x01\x70\x86\xa3\x12\x33\x3e\x15\x6c\x82\x9c\x4f\xb9\x50\x7b\xb7\xa8\x8a\x22\x39\xcc\x1d\x4f\xc3\x6b\x26\xc7\x8f\x99\xbc\x94\x4f\x07\x5f\xd3\xf7\x31\xae\xac\x8e\x76\x6d\x42\xd4\xeb\x2d\x06\xc4\x53\xea\xbc\x28\x73\x4a\xfe\x8f\x28\x39\x07\xad\x04\x7f\xa9\x18\xb8\x98\xb0\xf9\x8d\xbc\xb6\x35\x2e\xda\x65\x5f\x1f\x5a\x2f\xc5\x60\x23\xb7\x1f\xb1\xe3\x1f\xe9\xbf\xc1\x2e\x6d\x17\x8d\xdf\x43\xad\x09\x7f\xc7\x26\x3f\x1d\x1d\x1a\x98\xc8\xf2\xf9\xf8\xe8\x8b\x8d\x23\x4a\xb2\x42\x31\x39\xac\xee\x78\x92\x89\xec\x89\x41\x95\x03\x56\x4a\xbe\x03\x00\x00\xff\xff\x44\xd6\x5b\x2f\x9e\x02\x00\x00")

func _1695932536_balance_history_v2UpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1695932536_balance_history_v2UpSql,
		"1695932536_balance_history_v2.up.sql",
	)
}

func _1695932536_balance_history_v2UpSql() (*asset, error) {
	bytes, err := _1695932536_balance_history_v2UpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1695932536_balance_history_v2.up.sql", size: 670, mode: os.FileMode(0666), modTime: time.Unix(1696852547, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x50, 0x9a, 0x8e, 0x3b, 0xb7, 0xdb, 0x22, 0x43, 0x8f, 0xef, 0xf3, 0x32, 0xeb, 0x22, 0x40, 0x10, 0x15, 0x9b, 0xb8, 0xe6, 0xa8, 0x44, 0xde, 0x3e, 0x30, 0x18, 0xca, 0x39, 0xbd, 0x85, 0x4e, 0x4}}
	return a, nil
}

var __1696853635_input_dataUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x7c\x4d\x0b\x6d\xbb\x91\xdd\xdc\xe0\xff\x70\xf1\xc4\x36\x78\x20\x55\x95\x4a\x12\x3d\x72\x9a\x4b\x30\x71\xbf\x4e\x5e\x3f\x87\xf4\x28\xd4\x27\x6d\x42\xbb\x03\x71\x20\x3f\x3f\x9c\xe7\xd7\x24\xf6\xd2\x9d\x6a\xef\x23\x69\x97\xea\x63\xd5\xaa\xd2\xf9\xfb\xef\xbf\xfe\xf6\x87\xaf\x5f\x7e\xf8\xed\x7f\xf8\xfd\xd7\x2f\xbf\xf8\xe3\x9f\xfe\xe7\xff\xfe\xf3\x7f\x4f\xfb\xb3\xfd\xe2\xcb\xaf\x7e\xfe\xb3\x2f\x5f\xbe\x7c\xf9\xc5\x1f\xf3\x17\x5f\x7e\xf7\xdd\x0f\x5f\xff\xe3\xd7\xef\x7f\xf3\xd3\xd0\xbf\xd8\xff\xfa\x97\x5f\x7c\xf9\xe1\xeb\x7f\xfb\xe1\xcb\x77\xff\xf8\xc3\x97\xef\xfe\xf0\xfb\xdf\xff\xfb\xa3\x7f\xad\x3f\xff\xcb\xbf\xe5\xfb\xe1\x1f\xbe\xfb\xdd\x7f\xf9\xc3\xd7\x5f\xfd\xe5\xe7\xbf\xf9\xf7\x57\x7f\xfd\xd3\xd3\xff\xfc\xfd\xef\xfe\xe1\xb7\xdf\xff\xf3\x97\xff\xf4\xf5\x9f\x7f\xf5\xe3\xa2\xbf\xfd\xc3\x0f\xff\xf8\xbb\xef\xfe\xfe\xfb\xaf\xff\xf0\xf5\xbb\x1f\x7e\xfd\xf3\x9f\xfd\xfa\xef\x7e\xfe\xb3\xdf\x7d\xf7\x4f\x5f\xbf\xff\xe1\xcb\x1f\xff\xf4\xe7\x7f\xfb\xf2\xff\x36\xfb\xe5\x57\x7f\x99\xeb\x37\x5f\x3e\x53\xff\xfa\xcb\xcf\x7f\xf6\x5f\x7f\xfb\xfb\x3f\x7c\xfd\xa7\x2f\x3f\xff\xd9\xaf\x7e\xf9\xaf\x7f\xfc\xd3\x9f\x7f\xf8\xb7\xff\x51\x7f\xfa\xe5\x6f\x7e\x39\xfe\xcf\xf4\x55\xa5\x56\xbf\xfc\x2c\xfb\xb7\x0f\x07\x45\xda\x38\xf7\xf9\x70\xae\x23\x67\xaa\xbe\x7f\x39\xe7\x66\xdb\xf2\x7e\x28\xc4\x4d\x32\xde\x0f\xd7\xf4\xf2\xbb\xdf\x6b\xb2\xca\x75\x7b\x4f\x3b\x49\x8f\x67\xc5\x7b\xda\xe6\x11\x59\xdf\x58\xb3\x16\xcd\x51\xfe\x7e\x18\xa7\x22\xca\x9e\x0f\x69\x0c\xe9\xce\xb7\x84\x68\x84\xf7\xea\x6f\x3c\x64\x63\x4d\x7a\xaf\x49\x5c\xab\x0e\xd1\xfb\xe1\x3e\x35\xfc\x9c\xe7\x43\xe6\x5c\xe3\xda\xfb\x54\x98\xcb\x4d\xee\xfb\x53\xd8\xce\xda\x55\xdf\xf8\x65\x0e\xca\x11\xef\x4f\x11\xb5\xe4\xcc\xf7\xa9\x88\xd5\x5a\x23\xf2\xfd\xd0\xd7\xac\xcb\xef\xef\x5c\x3c\x52\x3c\xbe\xf1\x50\x3d\x87\x14\xbf\x1f\xba\xeb\x1c\xf3\xad\x43\xab\x32\xa7\xeb\x5b\x7c\x3a\xa7\x53\xd7\x7b\xb7\x4a\xe7\xb6\xe9\x7c\x3f\xe4\xc3\x7e\xfd\xad\x60\xca\x7d\x2a\xe4\x1b\xbf\xdc\xb4\xf8\x7e\x43\x7c\x7a\x7b\xc7\xfc\xc6\xa9\xa8\xd9\x88\xce\xf7\x77\xaa\xd7\x98\xd9\x6f\x05\x53\xaf\x60\xca\xb7\x26\x68\xb6\xa5\x9d\xf7\x9a\x9b\xec\xd4\x99\xef\x4f\xd9\x8b\x78\x92\xbd\xd5\x64\xab\x8b\x59\xbc\x77\xbb\xcf\x9c\xb6\xbc\xdf\x0f\x6f\xe8\x1a\xdf\x38\xb2\x9d\x43\x67\xac\xb7\xe0\xcf\x30\xaf\xfd\x0d\xe3\x3d\xde\x7a\xf4\xbe\x7f\x79\x35\x2d\x4f\xbc\x15\xec\x5a\xcd\x90\x7e\x6f\xe8\xf6\x47\x04\xf3\x2d\x78\x9b\x32\xac\xe8\x3d\xad\xad\x39\xe2\x9c\xb7\x07\xb3\x45\xd3\x72\x7f\xe3\xa1\x2e\x3f\x32\xbe\xf1\x30\xf9\xc4\xbd\x6f\x43\xb2\xda\x31\x89\xde\x01\xc0\xca\x4f\xdf\x6f\xf8\x78\x6b\x3d\xce\xe3\x3d\xad\x8f\x9a\x4c\xfd\xfe\xa5\x73\x25\x93\xbf\x75\xc8\xc5\x4e\x8d\x6f\xe8\x90\x2f\xa3\x3d\xbf\x61\x2b\xbe\xe3\x6e\xe3\xb7\xe0\x63\x88\xf2\xa6\xb7\x84\x62\xd4\x48\xf9\x86\x65\x07\xcb\x6e\xf1\xf7\x91\x85\xf0\xd9\x7b\xbf\x85\x10\xca\x92\xe3\x1b\xee\x2d\xf6\xdc\x75\xbe\xa1\x9a\x71\xfa\x28\x7f\x23\x96\x45\x4b\x96\xae\xb7\x93\xca\xe1\x3b\x6c\xbd\xad\x2c\xcf\xfd\x84\xb3\xf7\x86\x2a\x8b\xc5\xf3\x3d\x6d\x8f\xe9\x6b\xe4\xdb\x3e\x5b\x99\xbd\xe6\x5b\x87\x7a\x6b\x1d\xff\xc6\x79\xf6\x1d\xeb\xf8\x7a\x6f\xa8\xe3\x78\xcc\xf5\xff\xff\xf2\x2f\x11\xd9\x73\x28\x89\xe2\x78\x13\x8d\x18\x8f\xf1\x7d\xc7\xc5\x79\x3e\x8a\xbf\x7c\xff\xed\xf8\xf4\x41\xcb\x04\xe6\x99\x2e\xf2\x37\x2a\xf4\x13\x4c\x32\x5a\x3e\xec\x31\x1e\x71\xc5\x61\x9c\x8f\xe7\x5d\xf8\xfe\x0d\x57\x0d\x79\xec\x73\x1f\x57\xc6\x71\x16\x9e\x07\xe4\x30\x97\x16\xdd\x7e\x8c\x1f\x55\x3f\xfd\x18\x37\xc9\x55\x38\x7e\x6d\xab\xe7\x6b\xdc\xa7\xe0\xb8\xb6\xd5\xc0\xfd\xcf\x3d\x35\x47\x4f\x1c\x17\xb5\x95\x04\xe3\x67\xcc\xf6\x5a\x28\xff\xe3\xe9\x03\xcf\x77\x1e\xb2\x39\x61\xfe\x31\x3f\x56\x82\xeb\x0e\x9a\x7e\x4f\xc2\xf7\x0e\x62\x99\xb1\xf1\xfd\xa5\x3e\x66\xe0\xfb\xeb\xa6\xac\x06\x79\x8e\xe5\x1a\x2e\x38\xae\xcb\xc8\x07\xe8\xdb\xb8\x77\x0d\x97\x87\xdc\x22\x95\xf6\xc1\xf1\x12\xf6\x02\x7d\x9e\x46\x35\xd3\xf0\x5c\x4c\x27\x91\xa0\xde\xa6\x9c\x7d\x12\xf5\x2d\x25\xe7\x9a\xa0\x6f\x93\xf3\x1c\xdd\x30\xcf\xd4\x49\xb1\x0e\x9e\xaf\x9e\xf4\x28\xdc\xbf\x9b\x74\x11\xec\x73\x8c\xb2\x33\x1f\xf6\x9b\x64\xec\x85\xf6\x38\xac\x42\x0c\xf5\x7c\xc4\xca\x3c\xb8\xee\x09\x99\x76\x70\x9e\x53\xaa\xb2\xf0\xbb\xac\x2c\xd9\xc0\x4e\x27\x8f\xf4\xfd\xd0\x7f\x9e\x32\xca\xd1\x8e\xa6\x4a\x66\xa2\x7c\x78\x8d\xc3\x0f\x39\xcf\xbd\x84\x1e\xf3\x5b\x8d\xbc\xfe\xb0\x0b\xaa\x9e\x81\xfb\x9c\x95\x4b\x03\xf5\x84\xa6\x49\x26\xfa\x01\x52\xbe\x7d\x1f\xe3\xfb\xe3\x10\x51\x6e\x24\x37\xd6\x01\xff\x36\xd9\x47\x04\xa3\xbf\x1d\x7b\x2e\x9e\x70\x2e\xc3\xe6\x99\xba\xd1\x0f\x0c\x1d\x2c\x0b\xed\xd1\x75\x08\x15\xda\x8b\x45\x79\x0d\x3c\x77\x0b\xa1\xeb\xaf\xf9\x95\xea\xe2\xfc\x5b\x2d\xdd\xd0\xde\xab\xcf\x78\xf9\x8d\x93\x71\xcf\x63\x9e\xcf\x78\x0b\xac\x3b\xce\x5d\xba\xd1\x2e\x46\xd6\xe0\x6c\xf4\xf3\x5b\xaa\x04\xe3\xdd\x94\x12\x5e\x82\x71\xa4\x44\xd6\x62\x8c\x8f\xb5\x35\x36\x9e\xe3\x48\xa3\x71\x03\xd7\x3d\x76\x72\xa3\xfe\x8f\x41\x6b\xeb\xc4\xef\x92\x38\x3b\x37\xc6\xbb\xc1\xd7\xae\x3f\xbe\x97\x38\x55\x51\x4f\x72\x54\xf7\xc1\x71\xab\xd3\x17\xfd\xea\x2c\x59\xc7\x0b\xed\xae\x67\x9e\x69\x68\x2f\xcd\xc6\xb6\xd0\xee\x5a\x3e\x7e\x00\xe5\xdc\x1f\x2f\x1c\xb8\x6e\x47\xd7\xbc\xe8\x37\xba\xf7\x9e\x04\xef\xd3\x18\xad\x35\x60\x7e\x1a\x27\x8e\x5e\x90\x27\x8d\xbb\x93\x1b\xe4\x49\x23\x97\x5c\x8c\x53\x9f\xf1\x75\xf0\xbc\x68\xe4\x76\x26\x88\x3b\x34\xe5\xcc\x7b\xc1\xcf\xd0\x34\x72\x46\xfd\xa7\x19\x77\x55\xe2\xfc\xb3\xee\xf1\x83\xe3\x34\xd8\x9f\xe3\x93\xf7\x42\xbf\x4d\xc4\x94\xe3\xc2\x79\x11\xdd\xea\x39\x71\x9f\xe4\xf7\x06\x9e\x3b\x51\x6c\x61\xd4\x43\xa2\x1e\xdb\xd0\xee\x88\xa3\x87\x11\xca\x7f\xb9\x68\x61\xfc\x25\xdd\x87\xf4\x31\xbf\xda\x66\xdd\xa0\xb7\xb4\xe7\x3a\x17\xe3\xc2\x67\xbc\x7c\xe2\xf7\x6e\xfe\x38\x7a\x3c\xaf\xbd\x68\xee\x81\xfb\xdc\xf7\x86\xa2\x7e\xd2\x8f\xf9\x45\x81\x9e\xd3\xae\x54\x42\xbf\x4d\xe7\x72\x2c\x07\xff\x40\xe7\x96\xa9\xe1\x3c\x27\xcc\x29\x1f\xf3\xf4\x27\x67\x42\xb9\x9d\x8e\x38\x17\xe7\xbf\x1c\x6a\x8c\x7a\x72\xd7\x32\x7a\x9c\xfb\xb5\x51\xf5\x38\xc7\x1b\xec\x47\x70\x9f\x96\x5d\x5d\xb8\x4f\xab\x0c\x6e\x3c\x2f\xeb\x19\x24\x28\x7f\x9f\x11\x71\x71\x9f\x6e\x61\xf2\xb0\xd3\x58\xc7\x4a\xf0\xdc\xe3\x24\xf7\x43\x9e\x61\xb5\x1b\x71\x1a\x45\x18\x13\xe3\x7e\x22\x3d\x1c\x71\xc5\x67\xbc\xd7\x6b\xbc\x93\xc7\x40\x7d\xcb\x99\xfb\x91\x37\x51\x72\xdd\x6a\xdc\x7f\xea\x1d\x82\x7e\x98\xf2\x0a\xf9\xc6\xf3\x4a\xd7\x92\xc0\xfd\x94\x68\x86\xe2\x77\xb5\xce\xab\x98\x97\x51\xfb\x1c\x84\x7a\xce\x63\x66\x4b\x80\x3f\xe1\xc1\x8b\x86\x3e\xc6\xf5\x2c\x63\x90\x33\xcf\x71\x4e\x20\x1e\xe6\x39\x5a\x22\xe1\xbb\x78\x72\x66\xa1\xdf\xe6\x29\xfb\xee\x8d\xeb\x4e\xdd\x3a\x27\xee\x7f\x5e\x16\x45\x39\xf0\x74\x95\x8d\xb8\x94\x67\x1b\x97\x83\xde\xf2\xec\x32\x27\x1c\xe7\x41\x83\x31\x5e\x33\xeb\xa0\x83\x76\xc1\x7c\xd8\x69\x81\x7d\xb1\x28\xad\x43\xa0\xb7\x2c\xd9\x51\x17\xe5\xb6\xe8\x92\x1a\xce\xa3\x37\x27\x05\xee\x67\x0b\x0d\x43\xdc\xfe\x09\x16\x4b\x0c\x71\x66\x46\x39\xe1\x7e\x66\xd6\xde\x8d\x78\x6c\xd6\x98\x91\x8a\xb8\x3a\x76\xda\x2b\xcf\x0a\xe5\x95\xf5\x78\x9f\xd7\x34\x8c\x9b\x7c\x54\xf3\x18\xca\xe1\x52\x8c\x61\xf8\xbd\x97\xb7\x2b\xe6\xa7\x7c\x57\x7a\x4e\x9c\xc7\xa6\xe8\x30\xd4\x07\xbb\x93\x9d\x70\x1e\x4b\x77\x7e\xec\xc7\x8d\xd7\xc4\xb8\xcc\x1e\x45\x19\x38\xbf\xf7\x89\xb9\xf1\xdc\x3f\x83\x86\x7e\x80\xe3\xd8\xce\x83\xf2\x09\x5b\x8b\x1e\xeb\x86\x0f\x15\x7f\x8c\xb7\x37\x63\xdc\xe4\x5c\x39\xef\xc0\x7d\x66\x44\xf1\xc0\xfd\x64\xde\x21\x0c\xfe\x8d\x6b\x85\x05\xe2\x6d\xae\xd5\x54\x8e\xf3\x97\x96\xd9\x78\xbc\x9f\x9d\x77\xa1\x9c\xab\x62\x8f\x85\xf6\xd5\x74\x4e\x20\x1e\xe6\xbe\x76\x19\xf3\x14\xee\xcc\xb5\xd0\x0f\xc8\x18\xa5\x03\xe3\x85\x8c\x7d\xf4\xaf\x0b\x61\x3f\x8d\xdb\xd9\x8a\xf9\x8b\x8c\x98\xa3\x27\xf8\x0d\x99\xb7\x5a\x71\xff\x32\x6d\xca\x42\x9e\x41\x88\xc2\x04\xfd\xb6\xd0\xce\x2a\x86\xef\x15\x6a\xb2\x83\x72\x13\x66\x3d\x82\x71\x4a\x78\xf7\x10\xe4\xa9\x84\x4f\xed\xc0\xbc\x52\xd8\xd7\x38\x84\xf3\x08\x9d\x1c\x98\x07\x89\x6c\x9a\x0f\x5c\x27\xd2\x2b\x07\xf2\x0f\xb2\x58\x86\x21\x4e\x90\x95\x3f\x26\xea\x30\xae\x63\x45\x3a\xe8\x8f\xa8\x48\x66\xe0\x3c\x2a\x37\x1b\xe3\xa9\x68\x4c\x93\x06\x3d\x91\x4d\x6d\x89\x38\x4a\x36\xef\xb5\x15\xe5\xb6\x43\xef\x45\x9c\x20\xbb\x16\x29\xda\x97\x9c\xc5\x79\x30\x9f\x92\xcf\x24\x03\xf9\x1f\xb9\x1e\xf7\x0e\x94\xc3\x4d\x3d\x33\x21\x3e\x8a\x8d\x3d\x14\xed\x5d\xec\x93\x91\x20\x5f\x21\x26\xdb\x05\xe3\x88\xd8\x91\x31\x1e\x7a\x6e\xb7\xaa\x30\xdf\x14\xbf\x62\x8b\x71\x7e\xef\xbd\xea\x21\xb7\xd8\x1e\x0b\x71\x88\x84\x45\x31\xf2\xd5\x12\x96\xd4\x0f\xbd\xcd\x25\x44\xc8\xa7\x49\x6e\x22\xc2\x3c\x48\xd2\x8e\x06\xe6\x65\x52\x1a\x61\xc8\xeb\x4a\xd9\x9d\xfb\x71\x2e\xe5\xbd\xe2\xa1\x87\x95\x7c\x36\xfa\x1f\xa9\x5a\xfb\xc1\x7f\x4a\x95\xf3\x99\x38\xde\xe3\x93\xd8\xe3\xba\x3d\xf6\x25\xe4\xa3\xa4\xc7\xbd\xf6\xf8\xde\x1e\x4e\x8f\x78\x27\xcd\xa3\xc7\x7d\xac\x7b\x7b\xec\x87\x5d\xb4\x2d\x5e\xc8\x2f\xad\xb1\x2b\x79\xc2\xfc\x6b\xd4\xd1\x47\x5e\xb3\xe6\x88\xd1\x88\x1b\xd7\x9c\x6d\x8e\x78\x6c\x4d\x99\x3a\xd0\xaf\xae\x79\x84\x1b\xe5\xf6\x89\xc9\xbc\x0a\xf7\x39\xfb\xc4\x46\x7e\x78\xd1\x5a\xeb\x91\x0f\x2e\xf2\xbc\x81\x79\xcd\xe2\xa3\x55\x58\xd7\x58\x22\xb2\x15\xf9\xf6\x25\x1a\x15\x8c\xfb\x94\x1f\xd3\x7d\xf0\xb7\x4b\x6e\x1e\x11\x5c\x57\xd2\xd5\x30\xdf\x59\x8b\x57\x37\xe2\xb1\xb5\x84\x46\x16\xe8\xcf\x5a\xed\x7d\x0a\xfc\xe4\x52\x29\x25\xcc\x73\xd7\xd6\xd3\x84\x3c\xc9\xba\x3b\xf7\x79\xcc\xef\xe3\xce\x85\x7e\x66\x39\x9d\x25\xf6\x18\x97\x2e\x9f\xb8\x1f\x5f\x2e\x1b\xeb\x11\xcb\x57\xdd\x07\xff\xb0\xfc\x9c\x55\xf9\x98\xa7\xd6\x76\x05\x7f\xbe\x62\xb9\x5e\x43\x39\x87\xad\xcb\xe8\xff\x57\xf8\x21\xda\xa8\x3f\xe1\x39\x68\xe3\xf9\x16\xd9\x18\x88\xab\x57\xf1\x9e\x8e\x7e\x60\x95\x7b\x2f\xc2\xf1\xa6\xb5\x1b\xf3\x91\x0f\xba\xa2\xdb\xf8\xbd\xcd\x3c\x1f\xfc\xe4\x6a\x19\xbd\xd0\xcf\xaf\x16\xf7\x83\xf1\x65\xb5\xf4\xdf\x74\x04\xfc\x34\xbe\x63\x1b\xe2\x6d\x1d\x9a\x44\x58\xe7\xd2\x39\xa9\x0e\xfa\x1f\x9d\xe4\x77\xa0\x9e\x7f\xc6\xdb\x11\x6f\xeb\xd4\x3b\x1f\x7e\x46\x69\xe9\x61\x8c\x3b\x4a\x2d\x9a\xc8\x0b\x29\xcf\xb3\x02\xf9\x64\xe5\x19\x33\xb0\x9e\xa8\x7c\xa7\x15\xca\x4d\x65\x74\x4c\x8c\x0b\x2a\x33\x6a\xa2\x7f\x50\xe1\x79\xd8\x71\x9f\x6b\x8c\xbd\x0c\xce\x51\x97\x06\x89\x43\x7c\xd7\x75\x28\x22\x41\xaf\x54\xc7\x99\xcc\xb8\x1f\xbd\x35\xec\xb1\xff\x4d\x2a\x82\xf5\x4d\xdd\x64\x57\xb0\x3e\xa8\x9b\x23\x65\xe0\xfc\x3b\x76\x05\xe6\x05\xba\x5b\x4f\x3f\xce\x7d\xf7\xe6\xbb\x51\xce\xbb\x63\x5e\x07\x3d\xd4\x63\x7c\x37\xf2\x2a\x7a\xe7\x52\x42\x3d\xd7\xbb\x7d\xfc\x75\x67\xd2\x4f\xe3\xc9\x45\x03\xec\x4b\x6f\x2e\x39\x13\xd7\x35\xf1\x73\x0e\xca\xd9\x94\xf6\x79\xe8\x8f\x4f\x23\xdf\x78\xbe\xce\x47\xf3\x21\x67\x0f\xe5\x73\x71\x7e\x6f\x32\x25\x94\x4f\xcc\x2d\x95\xf8\x5d\x21\xdd\x85\xf5\x5f\x8d\x18\x51\x8f\x75\x23\x72\xec\x87\xfc\xa3\x7d\x1f\xac\xc3\x6a\x8e\xc9\x8a\x79\x81\xe6\x08\x1d\x8a\x72\xcb\xd5\xb2\x10\xbf\x69\xea\xe5\x8b\x75\x01\xad\x48\x62\xe4\xf3\xb5\x6d\xb2\x62\xbf\x81\xb6\xbb\x18\xa3\x5d\x77\xe7\x54\x8c\x6b\x7b\x10\x9f\x42\x3c\xb6\x87\x0e\x62\xe4\xd3\xf6\xd0\x6e\xc5\x78\xb4\x47\x86\x31\xda\xdd\x1e\x7d\xb9\x10\x27\xef\x39\x68\x3f\xf2\xd9\x3d\x25\xce\x42\xbe\x6b\xcf\xbd\xa2\x91\x9f\xd9\xb3\x85\x0b\xf1\xd2\x26\x6d\x3d\x58\xbf\xdb\x14\x3c\x26\xe6\xb9\x9b\xe7\x64\xc6\x7a\xf7\x66\x1d\xe6\x88\xcf\x3f\xe9\xce\x78\xe0\xea\xcd\x31\x68\x21\x1e\xdb\xb2\xdd\x3b\xe1\x5c\xb6\xf4\xa5\x81\xf5\x9d\xbd\xce\xc8\x4b\x60\xbf\x7b\x7d\xfc\x36\xf2\x0f\x7b\xb5\xca\x83\x87\xdf\xca\xd9\x0b\xed\x62\xab\xdc\xf9\xa8\x47\x6f\x55\x5a\x47\x71\x9f\x5a\x3a\x27\xd6\xb5\xf7\x1e\x77\x77\xe0\xfc\x7b\x9e\x3c\x0c\xf1\x6e\x6f\xde\x83\xb1\xee\xb0\xf7\xf2\x2a\xcc\xeb\xf7\x5e\x95\xfa\x9a\x47\x59\x07\xe6\x3b\x7b\x1f\xfe\xa8\x22\x8e\xb7\x4e\x41\x5e\x65\x9f\x15\x71\x1f\xfb\x39\x7b\x1b\x37\xca\xe1\xd8\x75\x43\x1e\x6c\x9f\xec\xeb\xc8\x2b\xee\xab\xe2\xf1\x38\x17\xa3\xe1\xeb\xe0\xfc\xb6\x7a\x1e\xe4\xaf\xb6\xe9\xda\x07\x71\xf2\xb6\x1c\x37\xd1\x2f\x7d\x30\x08\xff\x75\x9b\xdf\x5f\xc6\x7d\x8e\xb5\x1f\xf6\xeb\xd2\xeb\x51\xbf\xdb\x7e\x24\x0e\xf2\x3c\xdb\xef\x88\x0e\xb4\x47\xb7\x51\xf4\xf0\x33\xde\x4c\xb4\x51\x7f\x3e\xf9\x6f\x2b\xce\x1f\x21\xe2\x0f\xfb\x8a\xbc\xf9\xc8\x2f\x76\xb2\x26\x3f\xec\x28\xb3\xbb\x11\x57\xec\x1a\x2e\x84\xf1\x7a\x97\x6e\xdb\x07\xfd\x4f\x9d\x33\x15\xf3\xaf\x5d\x79\xd3\xd1\x9f\xef\x96\x7d\x06\xf2\x9c\x3f\xaa\xa1\x3d\xe6\x69\xbf\x36\xb0\xff\x6a\xb7\x47\x28\xf6\x39\xec\xce\x8e\x44\xff\xbf\xbb\xb6\x65\xc3\xba\x67\x10\x3b\xa1\x9e\x9f\xc1\x2c\x17\x71\xe3\x19\x57\x9b\xd1\x8f\x9d\xe1\x51\x0f\x3f\x7c\xe6\xd8\x55\xe8\x6f\xcf\x9c\x63\x13\xfa\xff\x33\xd7\xe4\x83\x7e\xfe\xfc\xc8\xfb\x61\xff\xdb\xa1\x71\xd7\xc4\x3a\xd1\x21\x19\x67\x63\x7f\xcb\xe1\x79\x59\x0b\xce\xfd\x30\x8d\xf5\xe0\x01\x3e\x18\x99\x06\xf2\xc9\x87\x55\x77\x63\x3d\xfa\xb0\xda\x1c\xa8\x87\x87\xfd\xc7\x4a\x38\x8c\x0b\x57\x26\xc6\xa9\x23\x47\x6e\x61\xdc\x3c\xe2\x46\x8a\x38\xea\x88\xc7\x78\xe8\xf9\x91\x2c\x67\xcc\xf7\xcf\xe2\x99\x8e\xfd\x2d\x67\x71\x0a\x21\xbf\x7a\xd6\xca\xb9\xd1\xaf\x9e\x55\x62\xd7\xf1\x7c\x57\x9f\x1b\x98\xdf\x9d\x0f\xf8\x89\x81\xef\xeb\x08\xf3\xc7\x79\x7d\xdc\x79\xa0\x5f\x3a\xca\x61\x13\xf3\xa0\xf3\x09\xbf\x03\x79\xbc\xb3\x37\x97\x63\x9e\x7b\xb6\xc9\x53\x9e\x87\xe7\xab\x1f\xe3\x1c\xef\xec\xc7\xf7\xda\x74\x6f\xec\x87\x3c\x76\x89\x0f\xf2\x39\xc7\x6c\xf4\xa3\x5f\xee\xf8\xb8\x5b\xd1\xde\x8f\x4f\xa5\x44\xdc\x75\x9c\x93\x17\xf2\x72\xc7\x45\x63\x63\x3f\xe4\x71\x15\x62\xcc\xa3\x8f\x5f\x3e\x86\xf5\xf1\x13\x63\x19\x31\xee\x27\x7c\xaf\x78\xec\x3f\xca\xd3\x10\x57\x9f\xdc\x6b\x3d\xf2\xcd\x93\x91\x67\x0b\xda\x5d\x4d\x59\xfc\x38\xf7\xda\x87\x1c\xf3\x9d\x53\x46\x2c\xc8\x9f\x9f\x16\x92\x81\xbc\xc4\xe9\x96\x95\x98\x47\xdc\x21\xb1\x36\xf2\xea\x77\xdc\x28\xc7\x3c\xe8\xce\xc3\x4c\xc8\x9f\xdf\x79\xd3\x8a\x40\x1f\x2e\x29\x17\x23\x2f\x74\xe9\x14\x07\xf2\x3c\x97\xd2\xca\x30\x8f\xbb\xbc\xe2\x3e\xf0\xdb\xe5\xc3\x83\x10\x87\x5c\x8e\x9c\x82\x79\xdf\x95\xf1\x81\xac\xf8\x5d\x42\xeb\x32\xc6\x91\x2b\xdb\xf5\x51\xa7\xb8\xe2\x7d\x06\xf6\x0d\x5e\xc9\x31\x0e\xfa\xdb\xbb\x8e\x2f\xc5\x3a\xc5\x5d\x41\x8b\x30\x8f\xbe\x2b\xd5\x13\xf1\xc0\x5d\xd5\xa4\x8a\xf3\xab\x7e\x12\x63\x3c\x5f\xdd\x3a\x5a\x41\x3f\xaf\xc6\xae\x8b\x76\x77\x35\x92\x08\xeb\x11\x57\xa3\x37\x23\x0f\x7f\xb5\x95\x2f\xd6\x6d\xef\xa6\xbd\x17\xf2\x69\x77\x73\x76\x2c\xd0\xff\xbb\x95\xe8\x20\x2e\xba\xc7\x58\x9a\xc0\xae\xef\x69\x0e\xc6\x7a\xd3\x3d\x6d\x4d\x0f\x39\xdf\xb1\xe7\x44\x7b\xbf\x77\x65\x13\xe6\x7d\xf7\xea\x98\x17\xfb\x49\xee\x8d\xb1\x19\xeb\xdd\xf7\xc6\x5c\x8c\x79\xfd\xbd\xd9\xe9\x88\x57\xaf\xd1\x5a\x89\xbc\xcd\x35\x2e\x29\xac\x57\x5e\x73\xd9\x0b\xfb\x51\xaf\x65\xf7\xa3\x9e\x75\xdd\x49\x18\xfd\xf3\xf5\x6c\x37\xcc\xa3\x6f\xd0\x58\x8f\x3e\xe4\x1b\x3c\xd7\x7d\xc8\x3f\x3c\x4a\x10\x17\xdd\x88\x69\x84\x7c\xc8\x8d\xa2\xb1\xb0\xef\xe2\x46\x95\x05\xf2\x5a\x37\xfb\xc8\x45\x9c\x70\x6b\x0f\xba\x88\x57\x6f\xc5\x8a\x5e\x28\xff\x5e\xbc\xce\xc3\x3f\xb4\x6b\xec\x8b\x72\xe8\xbc\x67\x20\xee\xba\x5d\xe3\x3c\xfa\x7c\x6c\xec\x49\x89\x3c\x92\x8d\x8a\x74\xf4\xff\x36\x2d\xc6\xc1\xfc\xc2\xa6\xcf\xbd\x0c\xe7\xa7\x41\x5a\x98\xf7\x19\xf1\x48\xc3\xba\xad\xd1\xea\x2e\xac\x17\x18\xf9\xa8\xb3\x70\x5d\xca\xbc\x79\x70\x9c\xd7\x16\x43\xff\x6c\xec\x4d\x1b\x71\x8e\x71\x69\x06\xe1\xba\x32\x72\xfa\x04\xbb\x33\x91\x35\xd6\x63\x5d\x51\xbb\x8c\xfd\x9c\x26\xae\xb2\xb0\x7f\xc6\x16\x33\x09\xda\x85\xad\x0f\x80\x43\x1c\x62\xca\x9b\x1b\xe3\x82\xa9\xec\x7a\xe4\x77\xa6\x71\xd9\xd1\x0f\x98\x56\xce\x85\xf1\xd1\xf6\x74\x7f\xf4\xa5\xdb\x56\xbe\x8c\xf9\x82\x9d\x61\x3a\x31\xef\xb0\x33\x9b\xfc\xf1\x5d\xa7\xcb\x68\x82\x5f\xb5\x3b\x6e\x07\xe2\x37\xbb\xd3\xec\x3e\xf4\xc1\x42\x8e\x62\x5f\xae\x59\x9f\x35\x11\x3f\x98\x75\x56\x23\x9e\x34\xeb\xa2\x8b\xf1\xda\xdc\x68\x2b\xd6\x1d\xcc\xd3\xce\xc6\xfe\x1f\x0b\x49\x5b\xc8\x33\x58\xc4\xe9\x07\xef\x67\x11\xa6\x8e\x3c\xb6\x45\xf2\xbe\x98\x6f\x5a\x64\x4e\x41\x9e\xcd\x72\x78\x09\xd6\x23\x2c\xe7\xe5\x7a\xe8\x6d\xae\x6a\xc1\x3e\x49\x4b\x1d\xed\xd8\xb7\x63\xb9\xdd\x1a\xfd\xb3\xe5\xd9\xf3\x60\x9f\xb9\x65\x0c\x21\xcc\xd3\x2d\x9b\xa2\x10\x7f\x5a\x4d\x5a\x8d\xf8\xc1\x8a\xb3\xed\x61\x8f\x55\xad\x1b\xfd\xb6\xf5\xe4\xd9\x58\xc7\xb1\xa6\xb5\x1c\xeb\xcb\xd6\x72\xa6\x63\x7d\xcd\xc7\x98\x63\x34\xe8\x8f\x4f\x3a\x14\x78\x0f\xc5\xe7\x92\x54\xe4\x1b\x9d\x64\x8e\xc0\x7a\xab\xd3\x55\x71\x8c\xbf\x4e\xb7\x4f\x33\xbe\xff\xc9\xea\x09\xf5\xd6\x79\x0d\x0b\xc4\xe1\xce\x2b\xe2\x71\xcf\xcb\xf9\x5a\x5d\xf4\xb7\xce\xce\xd2\x88\x1b\x9d\x7b\xc6\x45\xbf\xed\xa2\x1f\x07\x8d\xef\xcb\x8d\xfb\xe8\xdb\x77\x89\x41\x2b\x1f\xef\x67\x9c\x87\x1f\x76\xa9\xdc\x84\xfd\xb1\xbe\xe6\xe0\x8b\xfd\x90\xbe\xa6\xeb\xa3\xbf\xdd\xd7\xea\xfb\xc0\x45\xbe\x6a\x33\x61\x1e\xea\x3a\x63\x3d\xfa\x3d\x5c\x29\xd7\xc3\x7f\xba\x06\xd3\xc0\x3a\xa9\xef\x2d\xd1\x88\xd3\x7c\x6f\x9b\x8f\x7c\xc7\x77\xec\x25\xc8\x4b\xf8\x2e\xb2\x81\xf8\xd9\x0f\x69\x0d\x8c\x3b\x7e\x64\x26\x61\x1e\xe7\x47\xf8\x1c\xac\xdf\xf9\x59\xe1\x81\xfd\xe7\x7e\x67\x98\x62\x7f\xbb\x5f\xf6\xbd\xb0\x0e\xe2\x77\xed\x53\xc8\x5b\xfa\x55\x1b\x1b\xf9\x22\xbf\x76\xe7\xc1\x7c\xd6\x6f\x5a\x18\xf6\xd7\xf9\xad\x61\xf4\xb0\x17\x63\x5d\xf9\xd0\x1f\x93\xe9\x03\xfb\x7b\xdd\xc4\x72\x61\x9d\xce\x6d\x5b\x35\xf6\x81\xbb\x19\x6f\x43\xdc\xe8\xe6\x36\x09\xfb\x13\xdc\x85\x84\x1f\xfa\xe3\xbb\xb3\x1e\xfa\xe9\x4d\x76\x1e\xfb\xf4\x8e\x1e\x8a\xfa\x13\x25\x66\xc8\x1f\x7a\x8e\xbd\xfc\xe0\x3e\x73\xf1\xbe\xd8\xd7\xe1\xb9\x83\x36\xf6\xa7\x79\xba\x59\x61\x3e\xe5\x19\x63\x4e\x8c\x23\x5e\x74\xe7\xc1\x7e\x4e\xaf\x13\xeb\x3e\xf4\xa7\x29\x8e\x61\xdf\xaf\xb7\x86\x19\xde\x7b\xf5\xee\x29\x0f\x1e\x32\xc6\xe0\xe5\x58\x37\x8c\x31\xe5\x6c\xc4\xcf\x31\xd6\x5a\x81\x7c\x60\x0c\x9d\xaf\x3e\xba\x98\x7b\x97\x62\x3d\x31\x66\x53\x1b\x9e\x6f\x90\x7f\xe6\x07\xbd\x0a\xf1\x3d\x03\xeb\x08\x21\x6e\x2e\x8f\x79\xe4\x83\xb6\x11\x87\xc4\x1a\x26\x8f\xfe\xed\xd0\xe1\xaa\xc8\x57\x84\xce\x12\x42\x7e\x29\x94\xd6\x70\x46\x79\xaa\x90\x3a\xf2\xcc\xa1\xde\x4c\x98\x77\x87\x06\xbb\xd7\x63\xdd\x52\x29\xc4\x63\xb1\xd7\x3d\x8a\xf7\x6e\x62\x6f\x57\xc5\x7a\x7d\xec\xa4\x64\xec\xc3\x8f\x9d\x9f\x90\x8d\xe7\x75\x6e\x46\xa3\x3f\x89\x63\xe7\x3c\xfa\x1c\xe2\x44\xd9\x83\x37\x8e\xd3\x3e\x27\xe6\xb9\x71\xd7\x19\x8e\x75\xa8\xb8\xfb\x23\x68\x3c\xdf\xeb\x2c\x81\x7d\x59\x61\x33\xad\x1f\xfa\x60\x3c\xcf\x44\x7b\x0c\x8b\x1c\x1b\xf3\xca\xf8\x04\x5a\x1a\xa8\x0f\xbe\x6c\x3f\xfa\xae\xc3\xdd\x69\x60\x9f\x49\xb8\xb7\x10\xf2\x93\x11\x5c\x34\xb0\xaf\x29\xe2\x98\x2c\xbc\xef\xf9\xd9\xa5\x2a\xd6\x37\x23\x49\x43\xd1\xae\x23\xc9\x8d\x11\x07\x46\x8a\x9e\x8d\xb8\x22\xb2\x45\x19\xfb\xd9\x22\x7b\xbb\x20\x7e\x8b\xec\xde\x8c\xfc\x58\xd4\x31\x72\xe4\xbb\xa2\x5c\xc6\xe3\x5e\x46\xf4\x58\x43\x30\xbe\x47\xd3\xbc\x1b\xeb\x59\xd1\xc4\xfb\x65\xbf\xbd\xbc\x05\xef\x53\x44\xef\xb5\x14\xef\x2d\x46\xdb\x91\x7e\x9c\x4b\xfb\xe4\xc2\x7a\x6e\x8e\x21\xdb\x90\xd7\xca\x21\xd7\x1f\xf7\xe3\x72\x2c\x17\xc2\x7a\x5f\x0e\xb5\x53\xa8\x9f\x39\xb2\x7a\x21\xff\x90\x73\xd4\xbd\x58\xc7\xc9\x39\x39\x02\xeb\xcb\x39\x6d\x7a\x21\x0f\x9f\x33\x3e\xb8\x02\xe7\xa7\x51\x72\x50\xfe\x49\x3e\xa4\xb1\x1f\x38\xa9\x48\xee\x43\x3e\x2c\x43\x36\xf2\x54\xc9\xeb\xd0\xc6\x7b\x85\xc9\xab\xe8\x22\xde\x4e\x5e\x2d\x86\x38\x39\xd9\xaa\x0c\xe3\x75\xb2\xdf\x6e\xe4\xd3\x92\x53\xc9\x11\x77\x25\xa7\x47\x62\x5c\x4b\xee\xb8\x47\x51\x0e\xa2\x35\x1f\xf7\xca\x53\xbc\xd7\x44\xbf\x91\x6b\xcd\x33\xf1\xbe\x5e\xae\x73\xc3\x30\x0e\xa6\x4e\xea\x8d\xf8\x21\x55\x56\x3e\xfa\x7c\x52\x97\xa7\xce\xc7\xf8\xb9\xeb\x71\x8f\x29\xd5\xaf\x0e\xcc\xd7\x52\x73\x52\x60\x3d\x2e\xb5\xf5\x26\xf6\x07\xe6\xde\x5d\x07\x71\x7e\x1e\xd9\xf6\xda\xe7\x59\xc9\x89\xfc\x55\x1e\x3d\x79\xd6\x63\x9e\xbb\xca\x5e\xe3\xcd\x3a\xd1\x8f\xe5\xbd\xc7\x27\xc6\x9d\xbc\xb7\x46\xe3\xff\x7e\xa4\x8d\x16\xc5\xbc\x32\x6d\x4a\x38\xde\x2b\x49\xe3\xeb\x8c\x75\xf9\xfc\xe0\xde\xc6\x3e\xd5\x34\xa9\x7a\xfc\x6f\x46\x9a\x2a\x35\xe2\xf6\x34\xf7\xb5\x31\xde\xa5\xa5\x9d\x89\xbc\x44\x5a\xb5\x3f\xf8\xf6\x74\xba\x71\x11\x6f\xa4\xcb\x26\x45\x9e\x2a\x5d\xe2\x16\xf2\x66\xf9\xc1\xcf\x82\xf7\xf4\xd3\x2b\xbc\xb1\x5e\x9f\xde\x73\x8e\x87\xfe\x07\x4d\x19\xc8\xdb\x67\x48\xec\xc0\xfe\xd8\x8c\xa5\x5d\x78\x6f\x2b\x63\xcf\xb1\xf1\x7e\x65\x86\xad\x2e\xe4\xf7\x32\x6c\x1f\x41\xbe\x2b\x23\xe9\xde\x87\xfe\x47\xc6\xce\xc4\xf1\x1c\xee\x8d\x7c\x6f\xe6\x8c\x08\xcc\xf7\x33\xa9\xa7\x3e\xf4\x36\x65\x14\x3d\xf4\x24\xd7\x9e\x16\x28\x9f\xd4\x38\x1b\xf3\xa0\xcc\x68\x56\xac\x77\x67\x66\x16\x21\xff\x96\x45\xaa\x82\xfd\x30\x59\x87\xb5\x90\xbf\xca\x1e\xc7\x37\xde\x6b\xcb\x96\x55\xf5\xb0\xaf\x56\xd6\x42\x5e\x34\xdb\x78\x3e\xfa\x40\xb2\xe3\x74\x3f\xfc\x43\xd7\xb6\x83\xfd\xed\xd9\xd5\xf1\xb8\xa7\x99\xdd\x75\x1b\x79\xef\xec\xee\xb3\x10\x77\xfd\xd8\xa4\xea\xc8\x9b\xd5\xa8\x91\x56\xf0\x5d\x35\xd7\xe5\xc4\x38\x58\xf3\x88\x1b\xea\x49\xcd\xb3\xb4\xfb\xf1\xfe\xed\x9c\xc8\x87\x17\x8d\x75\x27\xe6\x47\x45\x24\xe4\x88\x1f\x8a\x5c\x6b\x63\xff\x76\x91\x9b\x07\xda\x75\x51\xa4\x12\xd6\x1d\x8a\x52\x65\xa2\x3c\x8b\xaa\xe3\x20\x4f\x55\x4c\x6b\x25\xc6\x97\xe2\xed\x4b\xb1\xaf\xaf\x44\x77\x3f\xf2\xdc\x5a\x7b\x05\x27\xee\x73\xc5\x5d\x0f\x5e\xb1\x56\x71\x4c\x8c\x83\xa5\x73\x71\x62\x3f\x6d\x29\xe9\x11\xe4\xd5\x3f\xd9\x11\x93\xa0\x1c\x54\x0f\x29\xe2\xa8\xd2\xed\x71\x90\x17\x2a\xdd\x25\x8f\xfa\x4e\x69\xf2\x7e\xf4\xad\x95\xd6\x98\x8f\x3a\x4e\x69\x4f\xb2\xc7\x77\x6d\xef\xd1\xc8\x0f\xd7\x4e\xee\x42\xfe\xa7\x76\x0d\x31\xbc\xe7\x55\x67\xdc\x2b\x78\x1f\xb0\x8e\x5a\x0e\xcc\x97\xeb\xe8\xc7\x82\xc1\xaf\xd6\x89\x6b\x8c\x7d\x38\x75\xc2\x6b\x6e\x5c\xf7\x4e\x5a\x13\xf3\x91\xba\x9b\x36\x3d\xf4\xf3\x7a\xd8\xeb\xdc\x6f\x5c\xda\x98\x57\xd6\x2d\xdf\x03\xe3\x51\xd9\x92\xa1\xc8\xdf\x96\xa9\xea\x45\x1e\xaf\xcc\xf7\x0e\xcc\xbb\xcb\xa7\xb2\xe3\xfd\xa3\xf2\x0f\x80\x46\x3f\x53\x4e\x54\xf9\x58\xd7\xf9\x4c\x41\xbc\x54\x2e\xd2\xf5\xf0\x4b\x7e\x6b\xf0\xc5\xef\x72\x8b\x10\xc4\xab\x15\x4e\xf7\xc1\x4f\x56\x84\xd3\xf3\xfd\x96\x54\xec\x77\xad\x1c\x2e\xf1\xb0\xc7\xa4\x3a\x8e\xb8\xb4\xd2\xc7\x11\xc4\x15\x95\xb5\xeb\x60\x5c\xa8\x1a\x52\x8a\xf7\x53\xaa\x66\xd7\xa3\x6f\xaa\x8a\x69\x3c\xee\xa3\x55\x2d\x1e\x13\xfb\x7e\xab\x36\xc9\xe3\x3e\x51\xd5\xed\x1e\x78\x1f\xb3\xca\x37\x0f\xe4\x03\xab\xdc\xfc\xd1\x77\x51\xcd\xb9\xf5\x61\x5f\x2d\x93\x1f\xf1\xbd\x7a\xf5\x8a\x87\xff\x69\x1d\xc5\x8e\xeb\xb6\x45\x5e\xe4\x15\xab\x5d\xfd\x81\xdb\x7b\x0c\x25\xc2\xfe\xdb\x1e\xab\x5d\x91\x97\xe8\x11\x94\x17\xef\xa7\xf4\x88\x58\x8f\x7b\x0d\x3d\xd2\x72\x2c\x90\x5b\xcf\x19\x67\x60\x9d\xb1\xa7\xd9\xeb\x7e\x74\x93\x52\x10\xfe\xbf\x4d\x93\x6e\x39\xc8\xcf\x34\x6d\x9e\x8d\xff\x8f\xd4\xbc\x7c\x5d\xac\xeb\x35\x6f\xff\x20\x6b\x1c\x3f\xb4\x16\xf2\x0f\xfd\x81\xe7\x86\xf7\x10\x5b\x96\x97\xe3\x3d\xc7\x96\xad\xe7\xe0\xfd\xc4\x96\x4b\x5b\xb0\x3f\xb0\xc5\x32\x07\xc6\xf7\x96\xf0\x35\xb0\x3f\xbc\x57\x26\x09\xe2\x8d\xd6\xc1\xc3\x10\xc7\xb6\xe6\xae\xd9\x28\xe7\x4d\xd3\x27\xf2\x99\xbd\xc5\xbb\x0e\xee\xf3\xcc\xcd\xf3\x21\xb7\x23\xfd\x41\x88\x38\xbe\x5a\x1e\x75\x93\x3e\x9b\x85\xb1\xbe\xd6\xa7\x2e\x17\xc6\xb5\x3e\x65\xa7\x11\x3f\xf4\xa5\x73\x18\xff\x6f\xa1\x6f\x6e\x17\xec\xcf\x69\xa3\x93\x8f\xff\x5f\x6a\x23\xbb\x82\xf6\xdb\x46\x3e\x14\xef\xdb\xb6\x9d\x35\x2e\xf6\xdb\xb7\xd5\x1d\x8c\xff\xfb\xd7\xd6\xcc\x0b\xef\xa7\xb4\xcf\xb8\xfe\xd8\x8f\x53\xcf\xc6\x3a\x5a\xfb\xcd\xe7\xba\xee\x3d\xe6\x63\xff\x1e\x4b\x05\xeb\xd7\x1d\x33\x62\x22\xae\xeb\xd0\x79\x1e\xfe\xad\xe3\x23\x7e\xf4\x57\x9d\x33\x86\x62\x5f\x47\xa7\x6a\x19\xe2\xab\xce\xf3\x49\xfb\x70\x3f\x79\xbd\x1f\xff\xbf\xd7\x35\xa8\x1b\xf1\x4f\xd7\x0c\x13\xe4\x91\xba\x88\x49\x30\x8e\x74\xf1\xec\x8b\xfd\x0f\x5d\xfb\x68\x21\x1f\xde\xbd\xaa\x1f\x7c\x60\x77\x0a\xdf\x5d\xbf\xfc\xf5\xdf\xfd\xfc\x67\xff\x37\x00\x00\xff\xff\x8f\xc1\x62\x83\x41\x5e\x00\x00")

func _1696853635_input_dataUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1696853635_input_dataUpSql,
		"1696853635_input_data.up.sql",
	)
}

func _1696853635_input_dataUpSql() (*asset, error) {
	bytes, err := _1696853635_input_dataUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1696853635_input_data.up.sql", size: 24129, mode: os.FileMode(0666), modTime: time.Unix(1696922415, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb3, 0xe3, 0x1d, 0xe7, 0xb7, 0x56, 0x9d, 0x7e, 0x5d, 0xe2, 0x37, 0x3f, 0x60, 0xae, 0xa3, 0xcf, 0x52, 0xda, 0x90, 0xde, 0xd8, 0x6b, 0x3c, 0x37, 0xc5, 0x7f, 0x5d, 0x7b, 0xb0, 0xa4, 0x5b, 0x1c}}
	return a, nil
}

var _docGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x2c\xc9\xb1\x0d\xc4\x20\x0c\x05\xd0\x9e\x29\xfe\x02\xd8\xfd\x6d\xe3\x4b\xac\x2f\x44\x82\x09\x78\x7f\xa5\x49\xfd\xa6\x1d\xdd\xe8\xd8\xcf\x55\x8a\x2a\xe3\x47\x1f\xbe\x2c\x1d\x8c\xfa\x6f\xe3\xb4\x34\xd4\xd9\x89\xbb\x71\x59\xb6\x18\x1b\x35\x20\xa2\x9f\x0a\x03\xa2\xe5\x0d\x00\x00\xff\xff\x60\xcd\x06\xbe\x4a\x00\x00\x00")

func docGoBytes() ([]byte, error) {
	return bindataRead(
		_docGo,
		"doc.go",
	)
}

func docGo() (*asset, error) {
	bytes, err := docGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc.go", size: 74, mode: os.FileMode(0666), modTime: time.Unix(1696237814, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xde, 0x7c, 0x28, 0xcd, 0x47, 0xf2, 0xfa, 0x7c, 0x51, 0x2d, 0xd8, 0x38, 0xb, 0xb0, 0x34, 0x9d, 0x4c, 0x62, 0xa, 0x9e, 0x28, 0xc3, 0x31, 0x23, 0xd9, 0xbb, 0x89, 0x9f, 0xa0, 0x89, 0x1f, 0xe8}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"1691753758_initial.up.sql": _1691753758_initialUpSql,

	"1692701329_add_collectibles_and_collections_data_cache.up.sql": _1692701329_add_collectibles_and_collections_data_cacheUpSql,

	"1692701339_add_scope_to_pending.up.sql": _1692701339_add_scope_to_pendingUpSql,

	"1694540071_add_collectibles_ownership_update_timestamp.up.sql": _1694540071_add_collectibles_ownership_update_timestampUpSql,

	"1694692748_add_raw_balance_to_token_balances.up.sql": _1694692748_add_raw_balance_to_token_balancesUpSql,

	"1695133989_add_community_id_to_collectibles_and_collections_data_cache.up.sql": _1695133989_add_community_id_to_collectibles_and_collections_data_cacheUpSql,

	"1695932536_balance_history_v2.up.sql": _1695932536_balance_history_v2UpSql,

	"1696853635_input_data.up.sql": _1696853635_input_dataUpSql,

	"doc.go": docGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"1691753758_initial.up.sql":                                                     &bintree{_1691753758_initialUpSql, map[string]*bintree{}},
	"1692701329_add_collectibles_and_collections_data_cache.up.sql":                 &bintree{_1692701329_add_collectibles_and_collections_data_cacheUpSql, map[string]*bintree{}},
	"1692701339_add_scope_to_pending.up.sql":                                        &bintree{_1692701339_add_scope_to_pendingUpSql, map[string]*bintree{}},
	"1694540071_add_collectibles_ownership_update_timestamp.up.sql":                 &bintree{_1694540071_add_collectibles_ownership_update_timestampUpSql, map[string]*bintree{}},
	"1694692748_add_raw_balance_to_token_balances.up.sql":                           &bintree{_1694692748_add_raw_balance_to_token_balancesUpSql, map[string]*bintree{}},
	"1695133989_add_community_id_to_collectibles_and_collections_data_cache.up.sql": &bintree{_1695133989_add_community_id_to_collectibles_and_collections_data_cacheUpSql, map[string]*bintree{}},
	"1695932536_balance_history_v2.up.sql":                                          &bintree{_1695932536_balance_history_v2UpSql, map[string]*bintree{}},
	"1696853635_input_data.up.sql":                                                  &bintree{_1696853635_input_dataUpSql, map[string]*bintree{}},
	"doc.go":                                                                        &bintree{docGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
