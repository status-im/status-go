// Code generated by go-bindata. DO NOT EDIT.
// sources:
// 000001_init.down.db.sql (65B)
// 000001_init.up.db.sql (2.719kB)
// 000002_add_last_ens_clock_value.up.sql (77B)
// 1586358095_add_replace.up.sql (224B)
// 1588665364_add_image_data.up.sql (186B)
// 1589365189_add_pow_target.up.sql (66B)
// 1591277220_add_index_messages.up.sql (240B)
// 1593087212_add_mute_chat_and_raw_message_fields.up.sql (215B)
// 1595862781_add_audio_data.up.sql (246B)
// 1595865249_create_emoji_reactions_table.up.sql (300B)
// 1596805115_create_group_chat_invitations_table.up.sql (231B)
// 1597322655_add_invitation_admin_chat_field.up.sql (54B)
// 1597757544_add_nickname.up.sql (52B)
// 1598955122_add_mentions.up.sql (52B)
// 1599641390_add_emoji_reactions_index.up.sql (126B)
// 1599720851_add_seen_index_remove_long_messages.up.sql (150B)
// 1603198582_add_profile_chat_field.up.sql (45B)
// 1603816533_add_links.up.sql (48B)
// 1603888149_create_chat_identity_last_published_table.up.sql (407B)
// 1605075346_add_communities.up.sql (6.971kB)
// README.md (554B)
// doc.go (850B)

package migrations

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var __000001_initDownDbSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x09\xf2\x0f\x50\x08\x71\x74\xf2\x71\x55\x48\xce\x48\x2c\x29\xb6\xe6\x42\x12\x29\x2d\x4e\x2d\x8a\xcf\x4d\x2d\x2e\x4e\x4c\x4f\x45\x95\x49\xce\xcf\x2b\x49\x4c\x06\x29\x07\x04\x00\x00\xff\xff\x61\x86\xbd\x5f\x41\x00\x00\x00")

func _000001_initDownDbSqlBytes() ([]byte, error) {
	return bindataRead(
		__000001_initDownDbSql,
		"000001_init.down.db.sql",
	)
}

func _000001_initDownDbSql() (*asset, error) {
	bytes, err := _000001_initDownDbSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000001_init.down.db.sql", size: 65, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x5e, 0xbb, 0x3f, 0x1, 0x75, 0x19, 0x70, 0x86, 0xa7, 0x34, 0x40, 0x17, 0x34, 0x3e, 0x18, 0x51, 0x79, 0xd4, 0x22, 0xad, 0x8f, 0x80, 0xcc, 0xa6, 0xcc, 0x6, 0x2b, 0x62, 0x2, 0x47, 0xba, 0xf9}}
	return a, nil
}

var __000001_initUpDbSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\x56\xd1\x6f\xe2\xb8\x13\x7e\xe7\xaf\x18\xe9\xf7\x40\x2b\xd1\x9f\xf6\xa4\xbd\xbd\x93\xfa\x44\xd9\xf4\x0e\x1d\x07\x2b\x9a\x9e\xba\x4f\xd6\xe0\x0c\xc4\xc2\xb1\x23\x7b\x02\x8b\xb4\x7f\xfc\xc9\x81\x40\x0c\x81\xee\xea\xfa\x50\xb5\x33\xe3\x19\xcf\x37\xf3\x7d\xce\x68\x9e\x0c\xd3\x04\xd2\xe1\xd3\x24\x81\xf1\x33\x4c\x67\x29\x24\x6f\xe3\x97\xf4\x05\x64\x8e\xec\xe1\xae\x07\xa0\x32\xf8\x67\x38\x1f\xfd\x39\x9c\xc3\x97\xf9\xf8\xef\xe1\xfc\x2b\xfc\x95\x7c\x85\xd9\x14\x46\xb3\xe9\xf3\x64\x3c\x4a\x61\x9e\x7c\x99\x0c\x47\xc9\xa0\x07\x60\xb0\xa0\x63\x7c\xc8\x37\x7d\x9d\x4c\x82\x43\x5a\x6d\xdd\x85\x07\x3e\x27\xcf\xc3\xd7\x49\x0a\xfd\xff\xe1\x2f\xbf\xff\x96\xfd\xda\x0f\xb1\xbc\x2b\x09\xc6\xd3\x34\x4a\x80\x92\xd5\x86\xe0\x69\x36\x9b\x24\xc3\xe9\x65\x86\x74\xfe\x5a\xdf\x80\x55\x41\x9e\xb1\x28\x2f\x32\x64\xa4\x89\x29\x13\xc8\x42\x6a\x2b\xd7\x62\x83\xba\x8a\x0b\x1d\xb3\x7d\x08\x07\xca\x6a\xa1\x95\x14\x6b\xda\xc1\xd3\x64\xf6\x14\x4c\x95\xd9\x28\xda\x52\x26\x0a\xf2\x1e\x57\x24\xa4\xad\x0c\xdf\xc8\xa1\xd1\xff\x68\xb9\x3a\xf4\x90\xf7\x58\xb0\xa0\x62\x41\xce\x9f\xff\x9f\xab\x52\x54\x65\x86\x4c\x7b\x57\xef\xfe\xb1\xd7\x8b\xe6\x29\xad\x61\x94\xa7\x21\xa6\xc9\x5b\xfa\x23\x13\xc4\x2c\x73\xe4\xfd\x3e\xbe\x0d\x5f\x3d\xda\x0b\x2b\x19\x2f\x36\xe4\xd4\x52\x51\x76\x1c\x4e\xd3\xd6\xf3\x70\xf2\x92\x9c\x47\x09\xbc\x85\x17\x6a\x85\x1d\xc5\x55\x46\x86\x95\xb4\xe6\xd2\x55\xe6\x96\xed\xa5\xb9\x46\x73\x0f\x51\x76\xa3\x9e\xdf\x79\xa6\x42\x30\xae\x4e\x18\x67\xb4\x51\x92\x84\x32\x4b\x7b\xb4\xb1\x53\x8b\x8a\x49\xb0\x15\x8c\x7a\x1d\xd7\xab\xd1\x7f\x78\x80\x31\xf7\x3d\xa8\xa2\xb4\x8e\xd1\x30\x70\x8e\xe1\x97\xf2\xc0\xb8\xd0\x04\x39\x7a\x70\x76\xab\x32\x40\x0f\x5b\x02\x47\x7a\x07\xd6\x80\xe2\x70\x78\x9b\x93\x09\x87\x35\x15\xa1\x57\xb3\x02\x65\x96\xca\x28\xa6\x07\x2f\x9d\xd5\xfa\xff\xbd\x1b\x84\xad\x3c\xb9\x66\x79\xf6\x33\xff\x59\xea\x02\x6c\x73\xe5\x4b\x72\x22\xa2\x50\xf2\x47\x12\x33\x19\xc0\xdb\xca\xc9\x8e\x5d\x08\xc8\x79\x56\x06\x59\x59\x73\x44\x0e\x80\xe9\x1b\x77\x8a\x02\xd4\x5b\x4a\x86\x45\x27\xe5\xa1\xee\xaa\x2d\x29\x87\x7c\x57\x29\x0e\xb5\x70\x89\x56\xe3\xb1\x57\x5b\x89\x5a\xdc\x8e\xc9\x55\x46\xd7\x37\x19\xc0\x91\x2f\xad\xf1\x61\x15\xe2\x6b\x35\x92\xd0\xf4\x72\xb8\xd0\x15\xee\x1f\xa0\x24\x32\xd7\x35\xad\x55\xd5\x56\xbc\xb2\xca\xac\x84\x67\xe4\xca\xc7\x95\x4b\x74\x9e\x32\x51\xe3\x7c\x82\xdd\xe1\x56\x94\xb8\xd3\x16\xb3\x96\xd5\xb3\x92\x6b\x72\xa2\x44\xb9\x3e\xdd\xb2\xb1\xe6\xe8\xf3\x38\xb7\xb4\x45\x81\x26\x6b\xe1\x15\xdb\xf7\x9d\x75\xba\x1a\x29\xe9\x74\x2e\x9d\x2d\xba\x3d\x61\x27\x1c\x4a\xee\xf6\xb2\x43\xe3\xc3\x63\x60\xcd\x8d\xdb\x7a\xb5\x32\xc8\x95\xa3\x56\xe7\x47\x1f\x23\xd7\xb3\x68\x8b\xe6\x78\xfa\x39\x79\x03\x95\x7d\x13\x87\xed\x9e\x4d\x63\x4e\xdd\xed\xed\xf7\x8f\x1d\x27\x08\x9d\xcc\xc5\x62\x77\xdc\xac\xd9\x14\xce\x4e\xef\x51\xae\x16\x9e\xdd\x5d\xff\xc3\x7f\xfc\xe9\xc3\xf7\xef\xed\xc5\x1a\xc0\xc3\xa7\x8f\x03\xf8\xf4\xf1\x3e\x38\x54\x36\x68\x68\x30\xa8\xb7\xf9\xf2\x71\x88\xb5\x23\x2c\x4a\x24\x1d\x3f\x27\x1c\xef\x93\xaa\xd6\x62\x4f\x67\x0f\x65\x2d\xbf\x54\x0f\xfc\xfc\x0d\x3d\xb8\xf8\x3a\x0f\x1d\xd5\x47\xb1\x62\x5b\x20\x2b\x89\x5a\xef\xae\x47\x77\x51\xd3\x91\x54\xa5\x22\xc3\x27\xe1\x6f\xb3\xe5\x1d\xcc\x42\x46\x32\xab\xa0\x96\xa7\x85\xf4\xe1\x79\xd8\xa0\x56\xe1\xd5\xa9\x91\x6c\x0a\xc7\xec\xb9\xe4\x54\xd4\xf9\xb5\x15\x6f\x0f\x63\xdf\x01\xbb\xdd\x09\xbd\x60\x5a\x2a\x57\x43\x4d\xa6\xb1\xc4\x4c\x88\xeb\xb4\x2e\x7b\x0e\x5d\xf3\x39\x75\xf6\x0d\xd4\xc9\x98\x4e\x2c\x22\x28\x02\x1f\xde\x47\xec\xae\xf5\xf7\xfd\x63\xef\xdf\x00\x00\x00\xff\xff\xd7\x95\x8b\x6b\x9f\x0a\x00\x00")

func _000001_initUpDbSqlBytes() ([]byte, error) {
	return bindataRead(
		__000001_initUpDbSql,
		"000001_init.up.db.sql",
	)
}

func _000001_initUpDbSql() (*asset, error) {
	bytes, err := _000001_initUpDbSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000001_init.up.db.sql", size: 2719, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x60, 0xdc, 0xeb, 0xe, 0xc2, 0x4f, 0x75, 0xa, 0xf6, 0x3e, 0xc7, 0xc4, 0x4, 0xe2, 0xe1, 0xa4, 0x73, 0x2f, 0x4a, 0xad, 0x1a, 0x0, 0xc3, 0x93, 0x9d, 0x77, 0x3e, 0x31, 0x91, 0x77, 0x2e, 0xc8}}
	return a, nil
}

var __000002_add_last_ens_clock_valueUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x41\x0a\x85\x20\x10\x06\xe0\xfd\x3b\xc5\x7f\x84\xb7\x6f\x35\xa5\x41\x30\x8d\x10\xe3\x5a\x64\x70\x95\xe8\x42\xeb\xfc\x7d\xc4\xea\x2f\x28\xad\xec\x61\xbd\xcd\x6c\x73\x80\x9c\xc3\x16\x38\x9e\x82\x9a\xc7\x4c\xa5\x8d\x64\xb5\xdb\x9d\xde\x5c\x9f\x82\x43\x14\x12\x14\x12\x99\xe1\xfc\x4e\x91\x15\xff\xe5\xf7\x05\x00\x00\xff\xff\xd0\x66\x8a\xf7\x4d\x00\x00\x00")

func _000002_add_last_ens_clock_valueUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__000002_add_last_ens_clock_valueUpSql,
		"000002_add_last_ens_clock_value.up.sql",
	)
}

func _000002_add_last_ens_clock_valueUpSql() (*asset, error) {
	bytes, err := _000002_add_last_ens_clock_valueUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "000002_add_last_ens_clock_value.up.sql", size: 77, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4d, 0x3, 0x8f, 0xd5, 0x85, 0x83, 0x47, 0xbe, 0xf9, 0x82, 0x7e, 0x81, 0xa4, 0xbd, 0xaa, 0xd5, 0x98, 0x18, 0x5, 0x2d, 0x82, 0x42, 0x3b, 0x3, 0x50, 0xc3, 0x1e, 0x84, 0x35, 0xf, 0xb6, 0x2b}}
	return a, nil
}

var __1586358095_add_replaceUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\xce\x31\x0a\xc2\x40\x10\x46\xe1\x3e\xa7\xf8\xc9\x09\xec\x53\x4d\xdc\x09\x08\xe3\x2c\xe8\x2c\xd8\x85\x10\x06\x11\xd6\x28\xd9\xe4\xfe\x56\x56\x5a\x6c\xfd\xe0\xe3\x91\x18\x5f\x60\xd4\x0b\x63\x2f\xbe\x8e\x4f\x2f\x65\xba\x7b\x01\x85\x80\x63\x94\x74\x56\xac\xfe\xce\xd3\xec\xdf\x06\xe3\x9b\x41\xa3\x41\x93\x08\x02\x0f\x94\xc4\xd0\xb6\x5d\x53\xc7\x6d\x19\x7d\x8c\xc2\xa4\xbf\xca\x40\x72\xe5\x4a\x28\x3f\x16\x1f\xe7\xd7\xbe\x6c\x38\xe9\x9f\xa3\x43\xd7\x7c\x02\x00\x00\xff\xff\xca\x94\x3f\xe0\xe0\x00\x00\x00")

func _1586358095_add_replaceUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1586358095_add_replaceUpSql,
		"1586358095_add_replace.up.sql",
	)
}

func _1586358095_add_replaceUpSql() (*asset, error) {
	bytes, err := _1586358095_add_replaceUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1586358095_add_replace.up.sql", size: 224, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd2, 0xb3, 0xa9, 0xc7, 0x7f, 0x9d, 0x8f, 0x43, 0x8c, 0x9e, 0x58, 0x8d, 0x44, 0xbc, 0xfa, 0x6b, 0x5f, 0x3f, 0x5a, 0xbe, 0xe8, 0xb1, 0x16, 0xf, 0x91, 0x2a, 0xa0, 0x71, 0xbb, 0x8d, 0x6b, 0xcb}}
	return a, nil
}

var __1588665364_add_image_dataUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcb\x41\x0a\xc2\x40\x0c\x05\xd0\x7d\x4f\xf1\xe9\x19\xc4\x4d\x57\x33\x4e\x04\x21\x66\x40\x32\xe0\xae\x44\x0c\x45\xb0\x58\x8c\x2e\x7a\xfb\x9e\xa1\x07\x78\x89\x95\x6e\xd0\x94\x99\xf0\x0f\xff\x8e\xb3\x47\xd8\xe4\x81\x54\x0a\x4e\x95\xdb\x55\xf0\x9a\x6d\xf2\x71\xb1\xf5\xfd\xb1\x27\x32\xd7\x3c\x74\x3b\xe0\x6f\x5d\x1c\x17\xd1\x5d\xe8\x61\xe1\xc7\x03\x94\xee\x0a\xa9\x0a\x69\xcc\x28\x74\x4e\x8d\x15\x7d\x3f\x74\x5b\x00\x00\x00\xff\xff\xf8\x4b\xbd\xbe\xba\x00\x00\x00")

func _1588665364_add_image_dataUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1588665364_add_image_dataUpSql,
		"1588665364_add_image_data.up.sql",
	)
}

func _1588665364_add_image_dataUpSql() (*asset, error) {
	bytes, err := _1588665364_add_image_dataUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1588665364_add_image_data.up.sql", size: 186, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd6, 0xc6, 0x35, 0xb4, 0x4c, 0x39, 0x96, 0x29, 0x30, 0xda, 0xf4, 0x8f, 0xcb, 0xf1, 0x9f, 0x84, 0xdc, 0x88, 0xd4, 0xd5, 0xbc, 0xb6, 0x5b, 0x46, 0x78, 0x67, 0x76, 0x1a, 0x5, 0x36, 0xdc, 0xe5}}
	return a, nil
}

var __1589365189_add_pow_targetUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x4a\x2c\x8f\xcf\x4d\x2d\x2e\x4e\x4c\x4f\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x28\xc8\x2f\x8f\x2f\x49\x2c\x4a\x4f\x2d\x51\x08\x72\x75\xf4\x51\x48\x49\x4d\x4b\x2c\xcd\x29\x51\x30\xd0\x33\x30\xb2\xe6\x02\x04\x00\x00\xff\xff\x49\xd6\x04\x23\x42\x00\x00\x00")

func _1589365189_add_pow_targetUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1589365189_add_pow_targetUpSql,
		"1589365189_add_pow_target.up.sql",
	)
}

func _1589365189_add_pow_targetUpSql() (*asset, error) {
	bytes, err := _1589365189_add_pow_targetUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1589365189_add_pow_target.up.sql", size: 66, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x4e, 0x3a, 0xe2, 0x2e, 0x7d, 0xaf, 0xbb, 0xcc, 0x21, 0xa1, 0x7a, 0x41, 0x9a, 0xd0, 0xbb, 0xa9, 0xc8, 0x35, 0xf9, 0x32, 0x34, 0x46, 0x44, 0x9a, 0x86, 0x40, 0x7c, 0xb9, 0x23, 0xc7, 0x3, 0x3f}}
	return a, nil
}

var __1591277220_add_index_messagesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xca\xb1\xaa\x83\x30\x14\x87\xf1\xdd\xa7\xf8\x6f\x2a\x78\xe1\x0e\xe2\xe2\x24\x9a\xa1\x8b\x16\xed\xd0\xed\x10\x63\xa8\xd2\xb4\x81\x73\x4c\x69\xc1\x87\x2f\x1d\x3a\x14\xba\xf5\x5b\xbf\x5f\xd3\x77\x7b\xec\xda\x46\x1d\xb1\x4c\x77\x12\xab\xd9\xcc\x34\x3e\xc8\xcc\x7a\xa5\x65\x2a\xa3\xa8\xee\x55\x75\x50\x5f\x91\xf3\x46\xbb\x37\x25\xf1\xbc\x92\xbf\x92\x09\x2c\x9e\xd1\xb5\x08\x62\x99\x2e\x56\x44\x9f\xac\x20\xf9\xe0\xa8\x86\x3a\x83\x84\x51\x56\x4e\xe2\xff\x1f\x8b\xb1\x6d\x30\xce\x9b\x33\xdd\xb4\x0b\x36\xc3\x5f\x91\x67\x28\xf2\xf4\x35\x96\x09\x8d\x1a\xea\xb4\x8c\x9e\x01\x00\x00\xff\xff\xdb\x1d\x3d\x0b\xf0\x00\x00\x00")

func _1591277220_add_index_messagesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1591277220_add_index_messagesUpSql,
		"1591277220_add_index_messages.up.sql",
	)
}

func _1591277220_add_index_messagesUpSql() (*asset, error) {
	bytes, err := _1591277220_add_index_messagesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1591277220_add_index_messages.up.sql", size: 240, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9c, 0xfe, 0xbe, 0xd5, 0xb8, 0x8f, 0xdd, 0xef, 0xbb, 0xa8, 0xad, 0x7f, 0xed, 0x5b, 0x5b, 0x2f, 0xe6, 0x82, 0x27, 0x78, 0x1f, 0xb9, 0x57, 0xdc, 0x8, 0xc2, 0xb2, 0xa9, 0x9a, 0x4, 0xe1, 0x7a}}
	return a, nil
}

var __1593087212_add_mute_chat_and_raw_message_fieldsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xa4\xcc\x31\x0e\xc2\x30\x0c\x00\xc0\x9d\x57\xf8\x1f\x4c\x2e\x71\x27\xd3\x48\x90\xce\x51\x94\x1a\x1a\xa1\xa6\x51\xed\x0a\xf1\x7b\x56\x58\x58\x78\xc0\x1d\x72\xa0\x0b\x04\xec\x98\x20\xcf\xc9\x14\xd0\x39\x38\x79\x1e\xcf\x03\x2c\xbb\xc9\x04\x9d\xf7\x4c\x38\x80\xa3\x1e\x47\x0e\xd0\x23\x5f\xe9\x78\xf8\x94\x5b\x7a\xc6\x45\x54\xd3\x5d\xbe\x02\x7d\x94\x16\xa5\xe6\xed\xd5\xac\xac\xf5\xaf\x4a\xea\x14\xdb\xae\x73\xac\xab\x95\x5b\xc9\xe9\xd7\xf8\x0e\x00\x00\xff\xff\xd9\x47\x38\x58\xd7\x00\x00\x00")

func _1593087212_add_mute_chat_and_raw_message_fieldsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1593087212_add_mute_chat_and_raw_message_fieldsUpSql,
		"1593087212_add_mute_chat_and_raw_message_fields.up.sql",
	)
}

func _1593087212_add_mute_chat_and_raw_message_fieldsUpSql() (*asset, error) {
	bytes, err := _1593087212_add_mute_chat_and_raw_message_fieldsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1593087212_add_mute_chat_and_raw_message_fields.up.sql", size: 215, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x73, 0x99, 0x61, 0xd1, 0xaa, 0xb4, 0xbf, 0xaf, 0xd7, 0x20, 0x17, 0x40, 0xf9, 0x2, 0xfb, 0xcc, 0x40, 0x2a, 0xd, 0x86, 0x36, 0x30, 0x88, 0x89, 0x25, 0x80, 0x42, 0xb0, 0x5b, 0xe9, 0x73, 0x78}}
	return a, nil
}

var __1595862781_add_audio_dataUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\xcb\x41\xaa\xc3\x20\x10\x06\xe0\x7d\x4e\xf1\x93\x33\x3c\xde\x26\x2b\x53\x2d\x14\xa6\x0a\x65\x84\xee\x64\x8a\x52\x02\x4d\x0d\x99\xb8\xc8\xed\x7b\x06\x0f\xf0\x19\x62\xf7\x00\x9b\x99\x1c\x9a\x96\x3d\xad\x45\x55\xde\x45\x61\xac\xc5\x25\x50\xbc\x7b\x48\xcb\x4b\x4d\x9b\x9c\x9f\x2a\x19\x33\x85\x79\x1a\x3a\xe0\x71\x6e\x05\x37\xcf\x5d\x28\xb7\x5d\x8e\xa5\x7e\xd3\xaa\xdd\xf6\x25\x5a\xfe\xff\xc0\xee\xc9\xf0\x81\xe1\x23\x11\xac\xbb\x9a\x48\x8c\x71\x9c\x86\x5f\x00\x00\x00\xff\xff\xeb\x6f\xa0\x62\xf6\x00\x00\x00")

func _1595862781_add_audio_dataUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1595862781_add_audio_dataUpSql,
		"1595862781_add_audio_data.up.sql",
	)
}

func _1595862781_add_audio_dataUpSql() (*asset, error) {
	bytes, err := _1595862781_add_audio_dataUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1595862781_add_audio_data.up.sql", size: 246, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xae, 0xd2, 0xee, 0x55, 0xfb, 0x36, 0xa4, 0x92, 0x66, 0xe, 0x81, 0x62, 0x1e, 0x7a, 0x69, 0xa, 0xd5, 0x4b, 0xa5, 0x6a, 0x8d, 0x1d, 0xce, 0xf3, 0x3e, 0xc0, 0x5f, 0x9c, 0x66, 0x1b, 0xb4, 0xed}}
	return a, nil
}

var __1595865249_create_emoji_reactions_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x7c\xce\xbd\x4e\x03\x31\x10\x04\xe0\xfe\xa4\x7b\x87\x29\x41\xa2\xa0\xa7\x32\x66\x4f\x58\x18\x5f\xe4\x6c\x50\x52\x9d\x2c\x67\x05\x07\x0e\x96\x6c\x87\xe7\x47\xe4\x1a\x7e\x44\xea\x6f\x76\x67\xb4\x27\xc5\x04\x56\xb7\x96\x60\x06\xb8\x91\x41\x5b\xb3\xe6\x35\xe4\x90\x5f\xe7\xa9\x48\x88\x6d\xce\xef\x15\x17\x7d\x07\xcc\x7b\x3c\x29\xaf\xef\x95\xc7\xca\x9b\x47\xe5\x77\x78\xa0\x1d\x46\x07\x3d\xba\xc1\x1a\xcd\xf0\xb4\xb2\x4a\xd3\xd5\x57\x3c\xa6\x1c\xdf\xa6\x8f\x90\x8e\x02\xe3\xf8\xf4\xde\x6d\xac\x3d\x61\xcd\xc7\x12\x05\x4c\xdb\x5f\xb0\x34\xcf\xfb\xbf\x27\x07\xa9\x35\x3c\xcb\xf4\x6d\xc6\x0f\x8f\x2f\xa1\xfd\x8b\x29\xc7\x90\xa6\xb3\x91\x22\xad\x84\xd8\x64\xa9\xbe\xa3\x41\x6d\x2c\xe3\xba\xef\x2e\x6f\xfa\xee\x33\x00\x00\xff\xff\xe4\x28\x05\xe0\x2c\x01\x00\x00")

func _1595865249_create_emoji_reactions_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1595865249_create_emoji_reactions_tableUpSql,
		"1595865249_create_emoji_reactions_table.up.sql",
	)
}

func _1595865249_create_emoji_reactions_tableUpSql() (*asset, error) {
	bytes, err := _1595865249_create_emoji_reactions_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1595865249_create_emoji_reactions_table.up.sql", size: 300, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x3e, 0xc5, 0x43, 0x5c, 0x3d, 0x53, 0x43, 0x2c, 0x1a, 0xa5, 0xb6, 0xbf, 0x7, 0x4, 0x5a, 0x3e, 0x40, 0x8b, 0xa4, 0x57, 0x12, 0x58, 0xbc, 0x42, 0xe2, 0xc3, 0xde, 0x76, 0x98, 0x80, 0xe2, 0xbe}}
	return a, nil
}

var __1596805115_create_group_chat_invitations_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x6c\x8d\xc1\x4a\xc4\x30\x14\x45\xf7\x85\xfe\xc3\x5d\x2a\xb8\x70\xef\x2a\xc6\x57\x0c\xc6\xb4\xa4\xaf\xd2\xae\x4a\xa8\xa1\x06\xb5\x91\x26\xf5\xfb\xc5\x96\x61\x18\x98\xed\x3d\x87\x73\xa5\x25\xc1\x04\x16\x8f\x9a\xa0\x2a\x98\x9a\x41\xbd\x6a\xb9\xc5\xbc\xc6\xed\x67\x9c\x3e\x5c\x1e\xc3\xf2\x1b\xb2\xcb\x21\x2e\x09\x37\x65\x01\x84\x77\xbc\x09\x2b\x9f\x85\x45\x63\xd5\xab\xb0\x03\x5e\x68\x40\x6d\x20\x6b\x53\x69\x25\x19\x96\x1a\x2d\x24\xdd\xfd\xeb\x29\x6e\xeb\xe4\xc1\xd4\xf3\xfe\x60\x3a\xad\x77\x70\xd4\xcf\xb1\x0b\xf8\xed\x53\x72\xb3\xbf\x0e\x53\x76\xd9\x43\x19\xc6\x13\x55\xa2\xd3\x8c\xfb\xa3\xf8\x15\xa7\xcf\x7d\x3f\xe9\x65\x71\xfb\xf0\x17\x00\x00\xff\xff\x34\x03\xb2\x2f\xe7\x00\x00\x00")

func _1596805115_create_group_chat_invitations_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1596805115_create_group_chat_invitations_tableUpSql,
		"1596805115_create_group_chat_invitations_table.up.sql",
	)
}

func _1596805115_create_group_chat_invitations_tableUpSql() (*asset, error) {
	bytes, err := _1596805115_create_group_chat_invitations_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1596805115_create_group_chat_invitations_table.up.sql", size: 231, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x6d, 0xb1, 0x14, 0x6d, 0x54, 0x28, 0x67, 0xc3, 0x23, 0x6a, 0xfc, 0x80, 0xdf, 0x9e, 0x4c, 0x35, 0x36, 0xf, 0xf8, 0xf3, 0x5f, 0xae, 0xad, 0xb, 0xc1, 0x51, 0x8e, 0x17, 0x7, 0xe5, 0x7f, 0x91}}
	return a, nil
}

var __1597322655_add_invitation_admin_chat_fieldUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xce\x48\x2c\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xcc\x2b\xcb\x2c\x49\x2c\xc9\xcc\xcf\x8b\x4f\x4c\xc9\xcd\xcc\x53\x08\x73\x0c\x72\xf6\x70\x0c\xb2\x06\x04\x00\x00\xff\xff\x51\xe6\x0d\x74\x36\x00\x00\x00")

func _1597322655_add_invitation_admin_chat_fieldUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1597322655_add_invitation_admin_chat_fieldUpSql,
		"1597322655_add_invitation_admin_chat_field.up.sql",
	)
}

func _1597322655_add_invitation_admin_chat_fieldUpSql() (*asset, error) {
	bytes, err := _1597322655_add_invitation_admin_chat_fieldUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1597322655_add_invitation_admin_chat_field.up.sql", size: 54, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa9, 0x7a, 0xa0, 0xf2, 0xdb, 0x13, 0x91, 0x91, 0xa8, 0x34, 0x1a, 0xa1, 0x49, 0x68, 0xd5, 0xae, 0x2c, 0xd8, 0xd5, 0xea, 0x8f, 0x8c, 0xc7, 0x2, 0x4e, 0x58, 0x2c, 0x3a, 0x14, 0xd4, 0x4f, 0x2c}}
	return a, nil
}

var __1597757544_add_nicknameUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xce\xcf\x2b\x49\x4c\x2e\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xc9\x4f\x4e\xcc\x89\xcf\xcb\x4c\xce\xce\x4b\xcc\x4d\x55\x08\x71\x8d\x08\xb1\x06\x04\x00\x00\xff\xff\x54\xf7\xdc\x23\x34\x00\x00\x00")

func _1597757544_add_nicknameUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1597757544_add_nicknameUpSql,
		"1597757544_add_nickname.up.sql",
	)
}

func _1597757544_add_nicknameUpSql() (*asset, error) {
	bytes, err := _1597757544_add_nicknameUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1597757544_add_nickname.up.sql", size: 52, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf4, 0xa2, 0x64, 0x50, 0xc5, 0x4, 0xb9, 0x8b, 0xd1, 0x18, 0x9b, 0xc3, 0x91, 0x36, 0x2a, 0x1f, 0xc3, 0x6c, 0x2d, 0x92, 0xf8, 0x5e, 0xff, 0xb1, 0x59, 0x61, 0x2, 0x1c, 0xe1, 0x85, 0x90, 0xa4}}
	return a, nil
}

var __1598955122_add_mentionsUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x8a\xcf\x4d\x2d\x2e\x4e\x4c\x4f\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\x4d\xcd\x2b\xc9\xcc\xcf\x2b\x56\x70\xf2\xf1\x77\xb2\xe6\x02\x04\x00\x00\xff\xff\xca\xf8\x74\x41\x34\x00\x00\x00")

func _1598955122_add_mentionsUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1598955122_add_mentionsUpSql,
		"1598955122_add_mentions.up.sql",
	)
}

func _1598955122_add_mentionsUpSql() (*asset, error) {
	bytes, err := _1598955122_add_mentionsUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1598955122_add_mentions.up.sql", size: 52, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8d, 0x22, 0x17, 0x92, 0xd2, 0x11, 0x4e, 0x7, 0x93, 0x9a, 0x55, 0xfd, 0xb, 0x97, 0xc4, 0x63, 0x6a, 0x81, 0x97, 0xcd, 0xb2, 0xf8, 0x4b, 0x5f, 0x3c, 0xfa, 0x3a, 0x38, 0x53, 0x10, 0xed, 0x9d}}
	return a, nil
}

var __1599641390_add_emoji_reactions_indexUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\x0e\x72\x75\x0c\x71\x55\xf0\xf4\x73\x71\x8d\x50\x48\xcd\xcd\xcf\xca\x8c\x2f\x4a\x4d\x4c\x2e\xc9\xcc\xcf\x2b\x8e\xcf\x4d\x2d\x2e\x4e\x4c\x4f\x8d\xcf\x4c\x89\xcf\xc9\x4f\x4e\xcc\x89\x4f\xce\x48\x2c\x01\xf1\x8a\x52\x4b\x8a\x12\x93\x4b\x52\x53\xe2\x33\x53\x2a\x14\xf2\xf3\xd0\x75\x6a\x20\x74\xea\x28\xa0\x68\xd5\x51\x80\xeb\xd5\xb4\xe6\x02\x04\x00\x00\xff\xff\xac\x4f\x19\x15\x7e\x00\x00\x00")

func _1599641390_add_emoji_reactions_indexUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1599641390_add_emoji_reactions_indexUpSql,
		"1599641390_add_emoji_reactions_index.up.sql",
	)
}

func _1599641390_add_emoji_reactions_indexUpSql() (*asset, error) {
	bytes, err := _1599641390_add_emoji_reactions_indexUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1599641390_add_emoji_reactions_index.up.sql", size: 126, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xf9, 0xd8, 0xdc, 0xa7, 0xb, 0x92, 0x7a, 0x61, 0x37, 0x24, 0x1c, 0x77, 0x5e, 0xe, 0x7e, 0xfc, 0x9f, 0x98, 0x7b, 0x65, 0xe7, 0xf9, 0x71, 0x57, 0x89, 0x2d, 0x90, 0x1b, 0xf6, 0x5e, 0x37, 0xe8}}
	return a, nil
}

var __1599720851_add_seen_index_remove_long_messagesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\xcc\xb1\x0a\xc2\x30\x14\x46\xe1\xbd\x4f\xf1\x8f\x2d\x38\x28\x88\x20\x45\x41\xec\x15\xb3\xa4\xd2\x44\xec\x16\x42\x73\x69\x02\xb1\x82\x89\xd0\xc7\x17\xdd\xba\x7f\xe7\x9c\x3b\x3a\x69\x82\x90\x0d\xf5\x10\x17\xc8\x56\x83\x7a\xa1\xb4\x42\x62\x9e\x4c\x7c\x0d\x36\x9a\xc1\xdb\x6c\x82\x33\xc1\xcd\x68\x25\x3e\x89\xdf\xe6\xc9\x29\xd9\x91\x53\xb9\x20\xab\x7f\x56\xd5\xc5\xfd\xd6\xfc\xc6\x0b\x0a\x45\x1a\x3e\x38\xc6\x01\x1b\x3c\xae\xd4\x11\x22\x4f\x63\xf6\x65\xe6\x39\x57\x38\x62\xbb\xde\xef\xea\xe2\x1b\x00\x00\xff\xff\x44\x35\x03\x9f\x96\x00\x00\x00")

func _1599720851_add_seen_index_remove_long_messagesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1599720851_add_seen_index_remove_long_messagesUpSql,
		"1599720851_add_seen_index_remove_long_messages.up.sql",
	)
}

func _1599720851_add_seen_index_remove_long_messagesUpSql() (*asset, error) {
	bytes, err := _1599720851_add_seen_index_remove_long_messagesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1599720851_add_seen_index_remove_long_messages.up.sql", size: 150, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x24, 0x1c, 0xc4, 0x78, 0x91, 0xc7, 0xeb, 0xfe, 0xc8, 0xa0, 0xd8, 0x13, 0x27, 0x97, 0xc8, 0x96, 0x56, 0x97, 0x33, 0x2c, 0x1e, 0x16, 0x8a, 0xd3, 0x49, 0x99, 0x3, 0xe9, 0xbb, 0xc4, 0x5, 0x3c}}
	return a, nil
}

var __1603198582_add_profile_chat_fieldUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x48\xce\x48\x2c\x29\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\x28\x28\xca\x4f\xcb\xcc\x49\x55\x08\x73\x0c\x72\xf6\x70\x0c\xb2\x06\x04\x00\x00\xff\xff\x3b\xfd\x29\xb5\x2d\x00\x00\x00")

func _1603198582_add_profile_chat_fieldUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1603198582_add_profile_chat_fieldUpSql,
		"1603198582_add_profile_chat_field.up.sql",
	)
}

func _1603198582_add_profile_chat_fieldUpSql() (*asset, error) {
	bytes, err := _1603198582_add_profile_chat_fieldUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1603198582_add_profile_chat_field.up.sql", size: 45, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xaa, 0xca, 0xe, 0x46, 0xa0, 0x9, 0x9d, 0x47, 0x57, 0xe9, 0xfb, 0x17, 0xeb, 0x9c, 0xf6, 0xb8, 0x1d, 0xe9, 0xd, 0x0, 0xd5, 0xe5, 0xd8, 0x9e, 0x60, 0xa, 0xbf, 0x32, 0x2c, 0x52, 0x7f, 0x6a}}
	return a, nil
}

var __1603816533_add_linksUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x72\xf4\x09\x71\x0d\x52\x08\x71\x74\xf2\x71\x55\x28\x2d\x4e\x2d\x8a\xcf\x4d\x2d\x2e\x4e\x4c\x4f\x2d\x56\x70\x74\x71\x51\x70\xf6\xf7\x09\xf5\xf5\x53\xc8\xc9\xcc\xcb\x2e\x56\x70\xf2\xf1\x77\xb2\x06\x04\x00\x00\xff\xff\x1d\x2b\x92\x96\x30\x00\x00\x00")

func _1603816533_add_linksUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1603816533_add_linksUpSql,
		"1603816533_add_links.up.sql",
	)
}

func _1603816533_add_linksUpSql() (*asset, error) {
	bytes, err := _1603816533_add_linksUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1603816533_add_links.up.sql", size: 48, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xc9, 0x24, 0xd6, 0x1d, 0xa, 0x83, 0x1e, 0x4d, 0xf, 0xae, 0x4d, 0x8c, 0x51, 0x32, 0xa8, 0x37, 0xb0, 0x14, 0xfb, 0x32, 0x34, 0xc8, 0xc, 0x4e, 0x5b, 0xc5, 0x15, 0x65, 0x73, 0x0, 0x0, 0x1d}}
	return a, nil
}

var __1603888149_create_chat_identity_last_published_tableUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x8c\x90\xc1\x4a\xc4\x30\x10\x86\xef\x85\xbe\xc3\x1c\x77\x61\xdf\xc0\x53\x1a\x66\x31\x18\xd3\x35\x9b\x8a\x7b\x0a\x63\x1b\x4c\x30\x6e\x0b\xc9\x0a\x7d\x7b\x21\xab\x55\xa1\x88\xc7\xe4\x9f\x9f\xef\x9b\xe1\x1a\x99\x41\x30\xac\x91\x08\x62\x0f\xaa\x35\x80\x4f\xe2\x68\x8e\xd0\x7b\xca\x36\x0c\xee\x9c\x43\x9e\x6d\xa4\x94\xed\x74\x79\x8e\x21\x79\x37\xc0\xa6\xae\xe0\x6b\x02\x1e\x99\xe6\xb7\x4c\x97\xb2\xea\xa4\x84\x83\x16\xf7\x4c\x9f\xe0\x0e\x4f\xd0\x2a\xe0\xad\xda\x4b\xc1\x0d\x68\x3c\x48\xc6\x71\x57\xca\x71\xec\x5f\xed\x3b\xc5\x8b\x03\xa1\xcc\x52\x2e\xa1\xa7\xe4\xa1\x91\x6d\xb3\x7c\xd7\xd5\xf6\xa6\xae\xea\xea\xdf\xc2\xfd\x78\xce\xd4\xe7\xf4\xa9\x7a\x7d\xad\xd9\x16\x60\x78\xa3\x17\x67\xf3\x3c\xb9\xf5\xfc\x4f\xdb\x89\xe6\x38\xd2\xf0\x5b\xb8\x24\x9d\x12\x0f\x1d\x6e\xbe\xe9\xbb\x1f\xa4\xed\xda\x6d\xae\x7b\x7e\x04\x00\x00\xff\xff\xff\xdb\x89\x48\x97\x01\x00\x00")

func _1603888149_create_chat_identity_last_published_tableUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1603888149_create_chat_identity_last_published_tableUpSql,
		"1603888149_create_chat_identity_last_published_table.up.sql",
	)
}

func _1603888149_create_chat_identity_last_published_tableUpSql() (*asset, error) {
	bytes, err := _1603888149_create_chat_identity_last_published_tableUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1603888149_create_chat_identity_last_published_table.up.sql", size: 407, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7f, 0x9, 0xf, 0xfb, 0xdb, 0x3c, 0x86, 0x70, 0x82, 0xda, 0x10, 0x25, 0xe2, 0x4e, 0x40, 0x45, 0xab, 0x8b, 0x1c, 0x91, 0x7c, 0xf1, 0x70, 0x2e, 0x81, 0xf3, 0x71, 0x45, 0xda, 0xe2, 0xa4, 0x57}}
	return a, nil
}

var __1605075346_add_communitiesUpSql = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x58\x5d\x8f\x54\x47\x0e\x7d\x47\xe2\x3f\x5c\xf1\x42\x22\xf1\x50\x65\x57\xd9\x55\x8a\xf6\x61\x80\x41\x42\x3b\x99\x89\x60\x58\x91\x27\x74\xbb\x6f\xf7\xee\xec\x2a\x21\x02\x12\x29\xff\x7e\xe5\x73\xdc\x03\x6c\xd4\x48\xcb\x68\x98\xfe\xa8\x5b\x65\x1f\xdb\xc7\xc7\x75\x71\x75\x7b\xf9\x6a\xb9\xbd\x78\x7a\x75\xb9\xec\xff\xb5\x7e\xfa\xb8\x5c\x3c\x7f\xbe\x3c\xbb\xb9\x7a\xf3\xe3\xf5\xb2\x7f\xff\xcb\x2f\xbf\xff\x7a\xf7\xe9\xcf\x77\x77\xdb\x72\x7b\xf9\xf6\x76\x79\x7e\xf9\xe2\xe2\xcd\xd5\xed\xf2\xe8\xd1\x0f\x0f\x1f\xbc\xf9\xe9\xf9\xc5\xed\xe9\xb1\xd7\x97\xb7\x5f\xaf\xff\x1b\x17\x3d\x7c\xf0\xe5\x11\xbf\x7f\x3c\x7c\x78\xf7\xcb\xe1\xe3\xc7\xf5\x9f\x87\xff\xe7\xa8\x87\x0f\x9e\xbd\xba\x8c\xc3\xb8\xcd\xcb\x17\xcb\xf5\xcd\xed\x72\xf9\xf6\xe5\xeb\xdb\xd7\xf7\xcf\xde\x1d\x3e\xbe\xfb\xe2\xf5\xf2\xdd\xc3\x07\xcb\x72\xb7\x2d\x4f\xaf\x6e\x9e\x62\xfd\xf5\x9b\xab\xab\xe5\xa7\x57\x2f\x7f\xbc\x78\xf5\xf3\xf2\xf7\xcb\x9f\x97\x9b\xeb\xe5\xd9\xcd\xf5\x8b\xab\x97\xcf\x6e\x97\x57\x97\x3f\x5d\x5d\x3c\xbb\x7c\x12\x0f\xfd\xf6\xe1\xee\x8f\xf5\xd3\xe1\xdd\x7f\x0e\x7f\xe2\x69\x7c\xb8\x1d\x3e\xee\x3f\xdc\xfd\xf6\xe9\xee\xfd\xaf\x5f\x6f\x89\x6f\xff\xfd\xfe\xee\xd7\xc3\xb6\x3c\xbd\xb9\xb9\xfa\x7c\xd6\xc9\x87\x17\x17\x57\xaf\xb9\xf3\x1f\x87\x0f\x77\xc7\xbb\x6f\x2f\x8c\x75\xdf\xc3\xe9\x97\xd7\xaf\x2f\x5f\xdd\x2e\x2f\xaf\x6f\x6f\xce\x7b\xf9\xe8\x6e\x7b\xf4\x64\x79\xf4\x85\xcd\xf1\xf6\x0b\x6b\xe3\x2d\xcd\x8b\x57\x27\x0b\x1e\x7d\xbf\xfc\xe3\xe2\xea\xcd\xe5\xeb\xe5\xbb\xb7\x8f\x8b\xce\x9d\x6c\x6b\xf3\xde\x65\x5d\x6b\xf5\x75\xda\x61\x1d\xc7\xba\xb5\xad\x96\xb1\x5b\xcd\x4c\x7d\xef\xbd\xfa\xaa\xfb\xd9\xd6\xee\xbb\x39\xb7\xdd\x6e\xac\xa5\xc8\x61\x5b\xe5\xf1\x13\x62\xb1\xbc\x7d\x5c\xd6\x56\x0f\x47\x95\xad\xd6\xb6\xad\x87\x71\x3c\x6c\xb2\x1b\x87\x4d\x74\x3d\xee\xdb\x61\x5f\x37\xd9\xf7\xdd\x6c\x7d\xfa\x7e\xda\xae\xb6\xd1\xd6\xed\x58\x4a\xdf\x86\xcd\xde\xd6\x7d\xd9\x86\xef\x4a\xef\xc7\x52\xd7\xb2\xb3\xa3\xb4\x2e\xdb\x51\x0e\x32\xd7\x26\x63\x77\xd8\x59\x69\x7b\xdf\xed\x56\x9d\xfb\xe1\xc7\xdd\xae\xcb\x71\xdd\xe9\x5a\xe4\x58\x7c\x15\xd1\xee\xa5\x54\x59\xad\x8e\x32\xea\x5a\x65\xcc\x52\xcb\x3a\x5a\xa9\x5a\x7c\x68\xd1\x66\xa6\xd5\xaa\x89\x4e\x35\xed\x56\x55\xad\x99\xa8\x69\xd3\xf8\x37\x55\x54\x4d\xad\x9b\x58\x8d\xf5\x3a\x74\x58\x80\x60\x5a\xb4\x9b\xc5\xf7\x5a\xac\x9a\x5a\xd5\x66\x8a\xdf\xa9\x6a\x82\x5d\xba\x5a\x3c\xaf\x55\x8b\x89\xba\x16\x2d\xa6\x66\x71\x86\x89\x75\x6b\x1a\xfb\xc6\x12\x3e\x37\xb0\x6e\xc6\x1a\x58\xe4\x3a\xcd\x54\xb5\xab\x68\xd7\xa1\xcd\x5a\xfc\xc6\x59\xf1\x84\xa9\x16\xad\x61\x8e\x56\xeb\xea\x58\xe5\xf0\x29\x76\x16\xec\x97\xff\xc2\x3b\xd8\xdd\xac\x5a\xd5\xaa\x71\x8e\x55\x09\x84\xfe\x8a\x4b\x58\x6e\x1d\x7e\x37\xbc\x73\x4b\x1c\x74\x5a\x58\x11\xbe\xcc\xd8\xc9\x02\x13\x85\x5d\x66\x1d\x18\xba\xba\x0e\xa0\x1a\x9e\x55\x60\x15\xa8\x0e\x6b\x3a\x4d\x80\x5a\x0f\x2f\x60\xd7\x84\x07\x06\x5c\xc2\x62\xd1\x0a\x4f\x24\xf6\xb6\x0a\x14\xe2\xe9\xf0\x08\xf6\x60\x5d\xe0\x14\xfb\x57\xfa\x0e\xff\xba\x76\x9d\x38\xa1\xea\xd4\x16\x3e\x46\x5c\x4c\x61\xb1\x68\x4b\x7f\x54\x9b\x16\xf5\xb0\x2f\x76\xd3\xa9\xae\x15\x9f\xc6\xbb\xc0\xb9\x9f\xc5\x05\x9e\x85\xa9\xb1\x83\x76\x60\x23\x11\x2e\x6d\x71\xb6\xce\x78\x1f\xbe\x87\x4d\x61\xa7\x2a\xd6\xc6\x2b\x03\x2a\x01\xe4\x84\xbb\x1d\x71\x2a\xc8\xb5\x0a\x2b\x0a\xd0\xa1\xf5\xf1\x9c\x03\xf3\x0c\x60\x64\x0f\x50\x30\x60\xc2\x0c\xea\xe9\x07\xb3\x2d\xf2\xd8\x11\x13\xa3\xc7\x5a\x2c\x70\xa8\xc8\xc7\x40\x76\x04\x8a\x88\x55\x43\x34\x3a\xf0\x88\xa8\x21\xb3\x81\xeb\x50\x1e\x38\xb4\x87\xfd\xc0\x79\xc2\xc7\x7a\x16\x97\x9a\xc8\x38\xf2\x4b\x71\xfe\xc4\xae\xb4\x6d\x22\x2b\xe2\xd4\xc8\xe6\x8e\xca\x70\xfc\x2d\x88\x5c\xf8\xac\xb0\x21\xd6\x0b\x9e\x9c\xb0\xcf\x34\x62\xde\x51\x07\x12\xde\x1a\x33\xc4\x10\x31\xa0\xa8\x8c\xf8\x44\x86\x54\xec\x15\x91\x19\x81\x66\xe0\x86\x48\x78\xd4\x0f\x62\x63\xc4\x1b\xb1\x8e\x4c\x1b\xd6\x11\x51\x45\x15\xa3\x7a\x90\xa3\x8c\x4d\x43\x6e\xb2\xfe\x14\x19\xd3\x33\xde\x0d\xf1\x09\x7b\xe6\x59\x5c\x8a\x29\x2a\xf1\x54\xd3\x8a\xb8\xf6\xf0\x0c\xbe\x37\x40\x8d\x7c\x8e\x58\x23\xff\x1d\x71\x6d\x60\x11\xd4\xa1\x16\x8b\xd8\xd6\xe4\x20\xda\xce\xcc\xaf\xc8\xad\x69\xcc\xa4\xe0\x9f\xa8\x41\xf2\x15\xa2\x8f\x5a\x15\x64\x4b\x03\x17\x99\xa1\x2e\x50\x95\x23\xf1\x55\x64\x6a\xc4\xaf\x00\x83\x0e\xdf\x0b\xf0\x47\xf6\xc0\xae\x12\x3c\x86\xdc\x08\x0c\x83\x7f\x72\x55\xc4\x12\xfb\x4f\x9c\x5f\xc0\x4a\xb1\xde\xbf\x91\x2f\x02\xfe\xea\xa8\xbc\xb0\x8a\xf9\xd9\xd3\x2b\xc6\xb4\x23\x42\x05\x2b\x1c\xfc\xa8\xe0\xb9\x58\x45\x36\x8c\x58\x47\xae\x18\xb8\xa6\x27\x8f\x47\xee\xb3\x22\x14\x79\xc9\x7a\x8d\xba\x13\xa2\xa3\x0e\x5e\x8b\x1f\x41\x14\x1b\x10\x13\x78\xd0\xd8\x11\xac\x7f\x61\x5f\x03\x1b\x46\xde\x05\xee\x1a\xf1\xc4\x19\x92\x5c\x10\xec\x1f\x95\x89\x6a\x82\x35\x25\x99\x9d\x38\x1b\x71\x35\x36\x84\x72\x16\x17\x70\x66\x20\x4c\xaf\xc9\x65\x91\x21\x60\xed\x6e\xa7\x6c\xe0\xa9\xc5\xc8\xab\xcc\x9b\x82\x2c\x50\x7c\x1b\xd8\x45\x7c\xc8\xb1\x1d\x98\x3a\xb2\xb1\x23\x07\x58\x45\x86\xdc\x2c\xf8\x49\xde\x62\x8c\x81\x24\x6b\x48\x71\x66\xc3\x9e\x8e\xff\x27\x7c\x40\x57\xd0\x6e\xdc\x21\xaa\xdb\x51\xdd\xc3\xc8\x2e\x0a\x2e\x02\x47\x07\x27\x00\x43\xf6\xcf\x0e\x1e\x64\xf7\x1a\x58\xe9\x66\xec\x85\xe7\x70\x81\x9f\x8e\xcc\x17\xd4\xd1\x4c\xf6\x1b\xc1\x05\x79\x96\x66\x27\x2f\x69\x61\x70\x5d\x53\x22\xc2\x1e\x13\xa8\x0c\x74\x69\xcb\x7e\xc0\x6e\x58\x50\x01\x6e\x1d\xfb\x90\x9b\x1c\x9d\x4e\x60\x19\x3b\x43\x43\x54\xc9\x6b\x2d\x3d\xee\x60\x97\x8a\x4f\x3a\x6a\xad\xa1\x47\x89\x31\x73\xc9\xc1\xa8\x64\x20\x77\x8a\x97\x90\x0f\xc0\x73\x15\x3f\x8a\x67\x3b\x2a\x8b\x39\xdc\xa9\x2c\x62\x8f\xb3\xb8\xf4\x53\x2f\x05\xc7\xa2\xfe\x50\xdf\xd4\x22\xf1\xb4\x23\x3a\xf4\xae\x80\x5b\x14\xf5\x15\xf9\x51\xe1\xb1\x00\x53\x47\xa6\xd2\x42\xbf\xef\x5f\x9e\x3d\x37\xfa\x10\xbb\xbd\x22\x2b\x8c\xbc\x18\x15\x4a\x2d\x13\xb8\xa3\xef\x19\x32\xa7\xc0\x27\xb2\x74\x01\xa3\x0a\x14\x48\x45\x7e\x69\xf2\x72\x67\xef\x32\xd6\x77\x07\x5e\xae\xac\x44\x72\xac\x20\x77\xe2\x99\xa1\x03\x19\xc6\xee\xe0\xf0\x73\x9c\xad\x23\x3d\xe1\x8e\x4e\x14\xcf\xa1\x82\x81\x73\x01\x37\xb8\x92\x79\x27\x7a\x28\xea\xf7\x33\xbf\x83\x21\x3d\xbd\xa4\x6f\xb4\xa3\x22\x67\x7a\x76\x38\xaa\x92\x06\xb6\xa4\x5f\x0d\x55\x45\xec\x85\x7c\x03\x85\x53\xc1\xb5\x95\x6a\x04\x15\x9c\x6c\x69\x59\x65\x11\x7d\x95\x54\x76\xdd\xa8\xf2\x06\x2a\xb8\x65\xd4\xe2\xc4\x81\x0c\x9f\xb9\x73\x83\x3f\x92\xf9\xad\xcc\x9a\xd8\xe3\x5b\x7d\x1a\xbd\xb2\xb0\x3f\x50\x01\x40\x5d\xf9\xbd\xde\x9a\x46\x12\x52\x28\x0d\xf6\x13\x45\x36\xc2\x6f\xe8\xde\x82\xbe\x40\xbc\x34\x77\xa5\x8a\xad\xc4\x1a\xbd\xc6\xb3\x7f\x9a\x52\x8f\x6a\xc6\x3b\x4f\x43\x2c\x98\xf3\xec\x30\xd4\x06\x0d\x38\x32\xde\x0a\xfe\x60\x4f\x9f\xc8\x12\x83\x4e\xe8\xb0\xb3\x43\x5f\xb2\xa7\x37\x74\x01\x66\x5a\x63\x46\xa1\xde\x05\x9c\xd3\xa8\xb8\xce\xd6\x11\x7b\x68\x87\x56\x19\xe0\xd9\xca\x3e\xc8\xec\x87\x27\xd4\x7d\x8a\x18\x78\xd6\xa7\xe0\x9b\xe8\x3a\x66\x9a\xba\x81\x7c\xc3\x4e\xab\xe8\x4e\x8d\x1c\x43\x55\x9b\x9d\x69\x02\x35\x18\x8a\x1e\x4a\x55\x5f\x93\x35\x0b\x31\xca\x48\x4b\x6a\x96\x9a\x4a\xdc\xc0\x5b\x5d\xf9\xcd\x00\x76\x92\x75\xc2\x35\x1d\x55\xd5\x93\x09\xa8\x36\x15\x55\x85\x39\xe2\xa4\x9b\xa1\x69\xea\x37\xfb\x11\x95\xc6\xbd\x62\x83\x6e\x81\x26\x55\xf6\x52\x54\x36\x90\x50\x70\x20\x75\xbc\x62\x96\xc2\xec\x92\xd3\x92\x23\x52\x0d\x33\x4a\x05\x23\x56\x3b\xcd\x5e\x54\x0f\x3d\xfb\x10\x2c\x4e\x0f\xd4\x38\x5b\xf4\xec\xb6\x98\xa0\xa0\xa4\x31\x3f\x24\xfa\xc9\xf0\xfc\x14\xb8\x9f\x72\xdc\xa8\xd7\xd1\xb7\x81\x06\xb4\x2c\x26\x94\x54\x2e\x95\x55\xac\xec\x43\x4a\x15\x0a\xed\x18\x4e\x9c\xcb\x17\x55\x6a\x7b\x6a\x53\x2a\x11\x3c\x97\x8c\x31\xd0\xbf\x99\x49\x4c\x8e\x0a\xec\xa1\xfc\x81\x04\x72\x8b\xf3\x18\xfa\x5f\x58\x0c\x1e\x00\xa2\x93\xb3\xa6\xe6\x94\x88\x7c\xab\xa9\x60\x59\xaf\xec\xd0\x9f\x23\x7b\xd2\x17\xd0\x8c\x38\x9b\x8c\x60\xa9\x57\x1d\x9d\x86\xea\x2a\x38\xe3\xd4\xb5\x26\x27\x38\xe8\x24\xf2\x70\xa1\x1e\x62\x87\x40\xcf\xa0\x06\x20\x92\x11\xf7\xf3\x73\x63\xcb\x4c\x65\x25\x71\x6e\x68\xc8\xe8\x8e\xbe\x37\xa9\x34\xc0\xb4\x4a\xdd\x08\x5b\x0b\x22\x2d\xd9\xbd\x2a\xb2\xab\x92\x69\xe9\x1f\xf4\x02\xfb\xa5\x20\x36\x53\x4f\xd3\x29\x67\x5b\x4e\xe2\x9c\x96\xe8\x71\x76\x9a\xec\xd4\xa8\xec\x7b\x7c\x5d\x99\x3d\x13\x1c\xdf\x53\x33\x15\x76\x09\x44\x97\x3a\x6b\x02\xb7\x91\x3a\xc6\x31\x93\xb1\x76\xcb\x3d\x9a\x05\x5c\x13\xf1\x3c\xcf\xbb\x98\xdc\x11\x51\xc3\xbe\x50\xac\x88\x39\x6b\xf2\xc4\xc2\x8d\x37\x09\x4c\x19\xcc\x6d\xcc\x1f\xe5\x34\x6d\xa7\x2c\x73\xcb\xf2\x42\x7e\x40\x09\xa2\xfe\xa0\x19\xf1\x77\x20\xa7\xa0\xa9\xa1\xe8\x6a\x6a\x93\xf0\x5d\x4f\x37\x10\xa7\xd9\x19\xf8\x08\xbd\x46\x27\x1e\x39\x3f\xb1\xbb\x9f\xee\x2c\x2a\xaa\x14\xd9\x02\xfd\xa9\xe8\xd6\x96\xb3\x9b\x21\x97\xb0\x27\x7c\x9d\xf0\x43\xbf\x55\x47\x4a\x75\x9a\x53\x6a\xb2\x08\xd5\x3d\x23\x28\x88\x7e\xcf\x5b\x00\xf4\xee\x64\x34\xa7\x7e\xb7\x54\x49\x39\xb7\x4a\xaa\x37\xc9\xdf\x61\x44\x99\xbc\xad\xa9\x03\x38\x4d\xb0\x07\x57\xec\x7f\x62\xa2\xca\xbc\xc2\xe9\x92\x93\xce\x4c\xcd\xeb\xe0\xb0\x91\xd3\x5a\x87\xd7\x96\x73\x24\x19\xae\xe0\x69\x46\x1b\x9a\xf8\x5e\xdb\x42\xfd\x81\x2f\x6b\xde\x53\xc4\x9a\xf3\xb8\x38\xea\xa4\x64\x27\x81\x82\x40\x05\xa0\x2a\xa0\x31\xa8\x5e\x2c\x15\xbb\x67\x7e\xe0\x7e\x04\x39\x80\xde\x87\xfc\x31\xde\x12\xe5\x14\xae\xa9\x44\x3a\x30\x20\x0f\x77\x60\x35\x53\xe3\x0f\xf2\x86\x72\x62\x65\x7e\x30\xca\x05\xba\x9f\x0c\xe2\x64\xfb\x9c\xf5\x0c\x91\xea\x4c\x55\x78\x7b\x52\x5b\x54\xcb\x03\x7f\x89\x63\x05\x8a\x5d\x39\x95\x3b\x7b\x1f\x6a\x82\x0a\xaf\xab\x7c\xab\x4f\x33\xae\xb1\x36\xb4\x77\xee\xdf\x60\xd9\x00\x6f\x14\x30\x1a\x62\x07\xdd\x9a\x2a\x39\xb5\x7f\x21\x93\x00\x41\xb9\xcf\xb9\xf1\x15\x63\x51\xc1\x59\xde\x6e\x15\x30\x27\xef\x47\xaa\xf2\xa6\xc9\x33\xba\xbc\x95\x19\xb9\x37\x14\x00\x6f\x33\x10\xa5\x8e\xba\x49\x4d\x83\x9d\x88\x0e\x55\x7e\x4d\x5e\x92\xe4\x55\x57\x2a\x51\xe6\x3f\x55\x7b\x51\x4d\x4d\x86\x9e\x7d\x7e\x3e\xa2\x6f\x54\xba\x9c\x26\xc0\x8e\x35\xeb\xbd\xea\x69\x0e\xc4\x9d\x27\xab\x1b\x6c\xed\xa9\x8e\xa9\xcd\x2b\xce\x9c\x60\x13\xb3\xcf\x5a\x8c\xb7\x63\x9c\x6a\x9d\xf7\x4b\x81\x1e\x66\xae\xc6\x19\x37\xef\x43\x3d\x15\x80\x2b\xfb\xa2\x66\x7e\xd5\x8c\xca\xe9\x46\xab\x1b\x7b\xa0\x1a\x7b\xb4\x6a\xcf\x7b\x92\x0e\xdd\x8b\xdc\x4e\xab\xa6\xb1\xe3\x92\xab\xc9\xef\xa7\x68\xc7\xce\xcc\x97\xb5\x48\x1d\x45\x64\x75\x15\x89\xd2\xf1\x66\xd5\x9b\x77\x57\x59\x6d\x7e\xf5\xbe\xd8\xc4\xff\x55\x8a\x87\x45\xea\xdd\xc5\xba\x14\xdb\xac\xe3\xaa\xaa\x9a\xdb\xb4\x83\x79\xac\xf2\xe2\x45\xf6\x52\x4c\x5d\x7c\x7a\xf1\x66\x47\x29\x1e\x2a\x76\x6f\x7b\xeb\xde\xf0\x6d\xb5\x83\x35\x29\xdd\x39\xd9\x48\x31\x71\xb1\xa3\x7b\x9c\xe1\x82\xf7\xdd\xa6\xed\xbd\xe1\xe9\xe9\xcd\x46\x58\x40\xcb\x70\xfe\xd1\x4c\x62\xff\x81\x77\xd5\x05\x6b\xd9\x09\x87\x1d\xec\x68\x7b\x3b\x9a\xfb\x94\x83\x4a\x3f\x96\x55\x58\x87\x8a\x9b\xac\x88\x71\x93\x2d\xfb\x4d\x89\x57\xb8\x37\x69\xb2\xe5\xb4\x67\xb2\xa5\xbe\xe0\x1d\x97\x03\x49\xb0\x7b\x15\xdc\xd8\x04\x8a\xb5\xae\x5a\x45\xca\xa0\x6d\xe1\x97\x77\x2f\x81\xa4\xf4\xbf\x7c\x16\x33\xf0\x31\xfc\xfb\x1f\x8c\x35\x3e\x85\x1f\x6a\x47\x3b\x78\x73\xb1\x19\x18\x04\x7e\x2e\xae\x2a\x7d\x84\x07\xc6\xbb\x3d\xe3\x3d\x18\x3c\xc8\xfb\xab\xf4\xa0\x99\x86\xdd\xe8\x76\xf1\xd9\xe0\x34\xad\x3d\xa7\x08\xea\xa3\x5e\x05\x5a\x36\x3d\x90\x55\xa4\x6c\xb0\xf4\x60\x47\xef\x76\x40\xf6\x6d\xd6\x61\x8b\xca\x5a\x67\x3b\xff\x6d\x31\x8b\xe8\xd9\xf6\xb5\x5f\x75\xd4\xf9\xf8\xc9\x52\x9e\x2c\xf5\xfb\x1f\x1e\x3e\xf8\x6f\x00\x00\x00\xff\xff\x2e\xf8\x5e\x6b\x3b\x1b\x00\x00")

func _1605075346_add_communitiesUpSqlBytes() ([]byte, error) {
	return bindataRead(
		__1605075346_add_communitiesUpSql,
		"1605075346_add_communities.up.sql",
	)
}

func _1605075346_add_communitiesUpSql() (*asset, error) {
	bytes, err := _1605075346_add_communitiesUpSqlBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "1605075346_add_communities.up.sql", size: 6971, mode: os.FileMode(0644), modTime: time.Unix(1610018391, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1f, 0x64, 0xea, 0xb4, 0xae, 0x9e, 0xdb, 0x9, 0x58, 0xb6, 0x5c, 0x7a, 0x50, 0xc5, 0xfe, 0x93, 0x5d, 0x36, 0x85, 0x5d, 0x6a, 0xba, 0xc9, 0x7e, 0x84, 0xd7, 0xbf, 0x2a, 0x53, 0xf3, 0x97, 0xf1}}
	return a, nil
}

var _readmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x54\x91\xc1\xce\xd3\x30\x10\x84\xef\x7e\x8a\x91\x7a\x01\xa9\x2a\x8f\xc0\x0d\x71\x82\x03\x48\x1c\xc9\x36\x9e\x36\x96\x1c\x6f\xf0\xae\x93\xe6\xed\x91\xa3\xc2\xdf\xff\x66\xed\xd8\x33\xdf\x78\x4f\xa7\x13\xbe\xea\x06\x57\x6c\x35\x39\x31\xa7\x7b\x15\x4f\x5a\xec\x73\x08\xbf\x08\x2d\x79\x7f\x4a\x43\x5b\x86\x17\xfd\x8c\x21\xea\x56\x5e\x47\x90\x4a\x14\x75\x48\xde\x64\x37\x2c\x6a\x96\xae\x99\x48\x05\xf6\x27\x77\x13\xad\x08\xae\x8a\x51\xe7\x25\xf3\xf1\xa9\x9f\xf9\x58\x58\x2c\xad\xbc\xe0\x8b\x56\xf0\x21\x5d\xeb\x4c\x95\xb3\xae\x84\x60\xd4\xdc\xe6\x82\x5d\x1b\x36\x6d\x39\x62\x92\xf5\xb8\x11\xdb\x92\xd3\x28\xce\xe0\x13\xe1\x72\xcd\x3c\x63\xd4\x65\x87\xae\xac\xe8\xc3\x28\x2e\x67\x44\x66\x3a\x21\x25\xa2\x72\xac\x14\x67\xbc\x84\x9f\x53\x32\x8c\x52\x70\x25\x56\xd6\xfd\x8d\x05\x37\xad\x30\x9d\x9f\xa6\x86\x0f\xcd\x58\x7f\xcf\x34\x93\x3b\xed\x90\x9f\xa4\x1f\xcf\x30\x85\x4d\x07\x58\xaf\x7f\x25\xc4\x9d\xf3\x72\x64\x84\xd0\x7f\xf9\x9b\x3a\x2d\x84\xef\x85\x48\x66\x8d\xd8\x88\x9b\x8c\x8c\x98\x5b\xf6\x74\x14\x4e\x33\x0d\xc9\xe0\x93\x38\xda\x12\xc5\x69\xbd\xe4\xf0\x2e\x7a\x78\x07\x1c\xfe\x13\x9f\x91\x29\x31\x95\x7b\x7f\x62\x59\x37\xb4\xe5\x5e\x25\xfe\x33\xee\xd5\x53\x71\xd6\xda\x3a\xd8\xcb\xde\x2e\xf8\xa1\x90\x55\x53\x0c\xc7\xaa\x0d\xe9\x76\x14\x29\x1c\x7b\x68\xdd\x2f\xe1\x6f\x00\x00\x00\xff\xff\x3c\x0a\xc2\xfe\x2a\x02\x00\x00")

func readmeMdBytes() ([]byte, error) {
	return bindataRead(
		_readmeMd,
		"README.md",
	)
}

func readmeMd() (*asset, error) {
	bytes, err := readmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "README.md", size: 554, mode: os.FileMode(0644), modTime: time.Unix(1610018362, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x6e, 0xfb, 0xcc, 0x81, 0x94, 0x4d, 0x8c, 0xa0, 0x3b, 0x5, 0xb0, 0x18, 0xd6, 0xbb, 0xb3, 0x79, 0xc8, 0x8f, 0xff, 0xc1, 0x10, 0xf9, 0xf, 0x20, 0x1b, 0x4a, 0x74, 0x96, 0x42, 0xd7, 0xa8}}
	return a, nil
}

var _docGo = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x84\x52\x3f\x8f\xdb\x3e\x0c\xdd\xf3\x29\x1e\x6e\xb9\xe5\x22\x07\xf8\xfd\xa6\xdb\x3a\x74\xe8\xd2\x2e\xd9\x0b\x46\xa6\x6d\x22\x32\xe5\x8a\xf4\x39\xf9\xf6\x85\x74\x17\x9c\x51\x14\xe8\x4a\x89\x8f\xef\x5f\xd7\xe1\x3c\x89\x61\x90\xc4\x10\x83\x72\x64\x33\x2a\x77\x5c\x38\xd2\x6a\x8c\xa7\x51\x7c\x5a\x2f\x21\xe6\xb9\x33\x27\x5f\xed\x28\x73\x37\xcb\x58\xc8\xb9\x7b\xfb\xff\xe9\xd0\x75\x88\xa4\xcf\x8e\x89\xb4\x4f\xdc\xb0\x0c\xe6\x54\x5c\x74\xc4\x26\x3e\x81\xb0\x14\x1e\xe4\x16\xf0\xc5\x91\x98\xcc\xe1\x13\xf9\xb3\xc1\x27\x46\x24\xe3\x0a\x33\xe4\x82\x31\x1f\x2f\xa2\x3d\x39\x85\x3a\xfa\x36\xec\x26\x95\x61\xa4\x94\xb8\xc7\x50\xf2\xdc\x76\x8d\x66\x46\x2f\x85\xa3\xe7\x72\x7f\x01\x99\xb1\x43\x69\x66\xab\xfb\x13\xbd\x31\x34\x7f\x9c\x07\x69\xff\x6f\x45\xd8\x72\xb9\x1a\xc8\xc0\xb7\x85\xa3\x73\x1f\x0e\x15\xeb\xfb\x8f\xf3\xd7\x57\x9c\x27\xae\xf0\x55\x5a\x1e\x1a\x85\x66\x9e\x32\xf7\x06\xcf\x18\x72\x4a\x79\x6b\x0f\xab\xca\x0d\x2e\x33\x9b\xd3\xbc\x20\x66\x7d\x63\x75\xc9\x5a\xd1\x56\x4d\x72\xe5\xf6\xcf\xb7\x0c\x51\x71\xa1\xf4\xee\x5e\x93\x7e\x7e\x37\xe8\x11\x44\x5c\x4b\x61\xf5\x74\x6f\x2b\xac\xb1\xdc\x97\x8a\x85\x77\xe6\x92\xd5\x9a\xbc\xa5\x64\xcf\x31\xa7\xdd\xbc\xa2\xd9\x44\x85\x3f\x1d\x73\xba\x24\x7e\xc1\x36\x49\x9c\x30\x33\xa9\xb5\x40\xda\x87\x44\xce\xe6\x9f\xfb\x10\x85\x73\x99\xad\x0a\xae\xfc\xaa\xbb\x15\xb3\x16\xe7\x91\xc3\x8e\x50\x33\x7f\xa1\xf8\x51\x85\xc7\x95\xd5\xd8\x40\x7f\x98\xf2\x08\x79\x63\x50\xdf\xe3\x74\x3a\x9d\xfe\xfb\x19\x42\x68\x5d\xe0\x1b\xcd\x4b\xa5\xe9\xb5\xa3\x9b\xa4\x84\x0b\x43\x46\xcd\x85\xfb\xca\x8a\x6f\x62\xad\x64\x31\x09\xab\xd7\xcc\x2a\x5e\x4e\x3d\x97\xaa\x47\xf7\x7a\xfe\x66\x59\x38\x1c\x16\x8a\x57\x1a\x19\xf6\x2b\x89\x73\x0d\x7a\xcc\xaf\x23\x2b\xd7\x3a\xec\xcb\x77\x5c\xae\xe3\xde\xec\x63\x46\x08\xdd\xe7\x20\x8c\x19\xe1\xf0\x3b\x00\x00\xff\xff\x12\xcd\x7f\xc4\x52\x03\x00\x00")

func docGoBytes() ([]byte, error) {
	return bindataRead(
		_docGo,
		"doc.go",
	)
}

func docGo() (*asset, error) {
	bytes, err := docGoBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "doc.go", size: 850, mode: os.FileMode(0644), modTime: time.Unix(1610007618, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xa0, 0xcc, 0x41, 0xe1, 0x61, 0x12, 0x97, 0xe, 0x36, 0x8c, 0xa7, 0x9e, 0xe0, 0x6e, 0x59, 0x9e, 0xee, 0xd5, 0x4a, 0xcf, 0x1e, 0x60, 0xd6, 0xc3, 0x3a, 0xc9, 0x6c, 0xf2, 0x86, 0x5a, 0xb4, 0x1e}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"000001_init.down.db.sql": _000001_initDownDbSql,

	"000001_init.up.db.sql": _000001_initUpDbSql,

	"000002_add_last_ens_clock_value.up.sql": _000002_add_last_ens_clock_valueUpSql,

	"1586358095_add_replace.up.sql": _1586358095_add_replaceUpSql,

	"1588665364_add_image_data.up.sql": _1588665364_add_image_dataUpSql,

	"1589365189_add_pow_target.up.sql": _1589365189_add_pow_targetUpSql,

	"1591277220_add_index_messages.up.sql": _1591277220_add_index_messagesUpSql,

	"1593087212_add_mute_chat_and_raw_message_fields.up.sql": _1593087212_add_mute_chat_and_raw_message_fieldsUpSql,

	"1595862781_add_audio_data.up.sql": _1595862781_add_audio_dataUpSql,

	"1595865249_create_emoji_reactions_table.up.sql": _1595865249_create_emoji_reactions_tableUpSql,

	"1596805115_create_group_chat_invitations_table.up.sql": _1596805115_create_group_chat_invitations_tableUpSql,

	"1597322655_add_invitation_admin_chat_field.up.sql": _1597322655_add_invitation_admin_chat_fieldUpSql,

	"1597757544_add_nickname.up.sql": _1597757544_add_nicknameUpSql,

	"1598955122_add_mentions.up.sql": _1598955122_add_mentionsUpSql,

	"1599641390_add_emoji_reactions_index.up.sql": _1599641390_add_emoji_reactions_indexUpSql,

	"1599720851_add_seen_index_remove_long_messages.up.sql": _1599720851_add_seen_index_remove_long_messagesUpSql,

	"1603198582_add_profile_chat_field.up.sql": _1603198582_add_profile_chat_fieldUpSql,

	"1603816533_add_links.up.sql": _1603816533_add_linksUpSql,

	"1603888149_create_chat_identity_last_published_table.up.sql": _1603888149_create_chat_identity_last_published_tableUpSql,

	"1605075346_add_communities.up.sql": _1605075346_add_communitiesUpSql,

	"README.md": readmeMd,

	"doc.go": docGo,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"000001_init.down.db.sql":                                     &bintree{_000001_initDownDbSql, map[string]*bintree{}},
	"000001_init.up.db.sql":                                       &bintree{_000001_initUpDbSql, map[string]*bintree{}},
	"000002_add_last_ens_clock_value.up.sql":                      &bintree{_000002_add_last_ens_clock_valueUpSql, map[string]*bintree{}},
	"1586358095_add_replace.up.sql":                               &bintree{_1586358095_add_replaceUpSql, map[string]*bintree{}},
	"1588665364_add_image_data.up.sql":                            &bintree{_1588665364_add_image_dataUpSql, map[string]*bintree{}},
	"1589365189_add_pow_target.up.sql":                            &bintree{_1589365189_add_pow_targetUpSql, map[string]*bintree{}},
	"1591277220_add_index_messages.up.sql":                        &bintree{_1591277220_add_index_messagesUpSql, map[string]*bintree{}},
	"1593087212_add_mute_chat_and_raw_message_fields.up.sql":      &bintree{_1593087212_add_mute_chat_and_raw_message_fieldsUpSql, map[string]*bintree{}},
	"1595862781_add_audio_data.up.sql":                            &bintree{_1595862781_add_audio_dataUpSql, map[string]*bintree{}},
	"1595865249_create_emoji_reactions_table.up.sql":              &bintree{_1595865249_create_emoji_reactions_tableUpSql, map[string]*bintree{}},
	"1596805115_create_group_chat_invitations_table.up.sql":       &bintree{_1596805115_create_group_chat_invitations_tableUpSql, map[string]*bintree{}},
	"1597322655_add_invitation_admin_chat_field.up.sql":           &bintree{_1597322655_add_invitation_admin_chat_fieldUpSql, map[string]*bintree{}},
	"1597757544_add_nickname.up.sql":                              &bintree{_1597757544_add_nicknameUpSql, map[string]*bintree{}},
	"1598955122_add_mentions.up.sql":                              &bintree{_1598955122_add_mentionsUpSql, map[string]*bintree{}},
	"1599641390_add_emoji_reactions_index.up.sql":                 &bintree{_1599641390_add_emoji_reactions_indexUpSql, map[string]*bintree{}},
	"1599720851_add_seen_index_remove_long_messages.up.sql":       &bintree{_1599720851_add_seen_index_remove_long_messagesUpSql, map[string]*bintree{}},
	"1603198582_add_profile_chat_field.up.sql":                    &bintree{_1603198582_add_profile_chat_fieldUpSql, map[string]*bintree{}},
	"1603816533_add_links.up.sql":                                 &bintree{_1603816533_add_linksUpSql, map[string]*bintree{}},
	"1603888149_create_chat_identity_last_published_table.up.sql": &bintree{_1603888149_create_chat_identity_last_published_tableUpSql, map[string]*bintree{}},
	"1605075346_add_communities.up.sql":                           &bintree{_1605075346_add_communitiesUpSql, map[string]*bintree{}},
	"README.md":                                                   &bintree{readmeMd, map[string]*bintree{}},
	"doc.go":                                                      &bintree{docGo, map[string]*bintree{}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
