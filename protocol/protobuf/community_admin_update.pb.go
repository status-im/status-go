// Code generated by protoc-gen-go. DO NOT EDIT.
// source: community_admin_update.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommunityAdminEvent_EventType int32

const (
	CommunityAdminEvent_UNKNOWN                                  CommunityAdminEvent_EventType = 0
	CommunityAdminEvent_COMMUNITY_EDIT                           CommunityAdminEvent_EventType = 1
	CommunityAdminEvent_COMMUNITY_MEMBER_TOKEN_PERMISSION_CHANGE CommunityAdminEvent_EventType = 2
	CommunityAdminEvent_COMMUNITY_MEMBER_TOKEN_PERMISSION_DELETE CommunityAdminEvent_EventType = 3
	CommunityAdminEvent_COMMUNITY_CATEGORY_CREATE                CommunityAdminEvent_EventType = 4
	CommunityAdminEvent_COMMUNITY_CATEGORY_DELETE                CommunityAdminEvent_EventType = 5
	CommunityAdminEvent_COMMUNITY_CATEGORY_EDIT                  CommunityAdminEvent_EventType = 6
	CommunityAdminEvent_COMMUNITY_CHANNEL_CREATE                 CommunityAdminEvent_EventType = 7
	CommunityAdminEvent_COMMUNITY_CHANNEL_DELETE                 CommunityAdminEvent_EventType = 8
	CommunityAdminEvent_COMMUNITY_CHANNEL_EDIT                   CommunityAdminEvent_EventType = 9
	CommunityAdminEvent_COMMUNITY_CATEGORY_REORDER               CommunityAdminEvent_EventType = 10
	CommunityAdminEvent_COMMUNITY_CHANNEL_REORDER                CommunityAdminEvent_EventType = 11
	CommunityAdminEvent_COMMUNITY_REQUEST_TO_JOIN_ACCEPT         CommunityAdminEvent_EventType = 12
	CommunityAdminEvent_COMMUNITY_REQUEST_TO_JOIN_REJECT         CommunityAdminEvent_EventType = 13
	CommunityAdminEvent_COMMUNITY_MEMBER_KICK                    CommunityAdminEvent_EventType = 14
	CommunityAdminEvent_COMMUNITY_MEMBER_BAN                     CommunityAdminEvent_EventType = 15
	CommunityAdminEvent_COMMUNITY_MEMBER_UNBAN                   CommunityAdminEvent_EventType = 16
)

var CommunityAdminEvent_EventType_name = map[int32]string{
	0:  "UNKNOWN",
	1:  "COMMUNITY_EDIT",
	2:  "COMMUNITY_MEMBER_TOKEN_PERMISSION_CHANGE",
	3:  "COMMUNITY_MEMBER_TOKEN_PERMISSION_DELETE",
	4:  "COMMUNITY_CATEGORY_CREATE",
	5:  "COMMUNITY_CATEGORY_DELETE",
	6:  "COMMUNITY_CATEGORY_EDIT",
	7:  "COMMUNITY_CHANNEL_CREATE",
	8:  "COMMUNITY_CHANNEL_DELETE",
	9:  "COMMUNITY_CHANNEL_EDIT",
	10: "COMMUNITY_CATEGORY_REORDER",
	11: "COMMUNITY_CHANNEL_REORDER",
	12: "COMMUNITY_REQUEST_TO_JOIN_ACCEPT",
	13: "COMMUNITY_REQUEST_TO_JOIN_REJECT",
	14: "COMMUNITY_MEMBER_KICK",
	15: "COMMUNITY_MEMBER_BAN",
	16: "COMMUNITY_MEMBER_UNBAN",
}

var CommunityAdminEvent_EventType_value = map[string]int32{
	"UNKNOWN":        0,
	"COMMUNITY_EDIT": 1,
	"COMMUNITY_MEMBER_TOKEN_PERMISSION_CHANGE": 2,
	"COMMUNITY_MEMBER_TOKEN_PERMISSION_DELETE": 3,
	"COMMUNITY_CATEGORY_CREATE":                4,
	"COMMUNITY_CATEGORY_DELETE":                5,
	"COMMUNITY_CATEGORY_EDIT":                  6,
	"COMMUNITY_CHANNEL_CREATE":                 7,
	"COMMUNITY_CHANNEL_DELETE":                 8,
	"COMMUNITY_CHANNEL_EDIT":                   9,
	"COMMUNITY_CATEGORY_REORDER":               10,
	"COMMUNITY_CHANNEL_REORDER":                11,
	"COMMUNITY_REQUEST_TO_JOIN_ACCEPT":         12,
	"COMMUNITY_REQUEST_TO_JOIN_REJECT":         13,
	"COMMUNITY_MEMBER_KICK":                    14,
	"COMMUNITY_MEMBER_BAN":                     15,
	"COMMUNITY_MEMBER_UNBAN":                   16,
}

func (x CommunityAdminEvent_EventType) String() string {
	return proto.EnumName(CommunityAdminEvent_EventType_name, int32(x))
}

func (CommunityAdminEvent_EventType) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_22a3f5c92e845a9d, []int{0, 0}
}

type CommunityAdminEvent struct {
	Clock                  uint64                               `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	CommunityId            []byte                               `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Type                   CommunityAdminEvent_EventType        `protobuf:"varint,3,opt,name=type,proto3,enum=protobuf.CommunityAdminEvent_EventType" json:"type,omitempty"`
	CommunityConfig        *CommunityConfig                     `protobuf:"bytes,4,opt,name=community_config,json=communityConfig,proto3" json:"community_config,omitempty"`
	TokenPermissions       map[string]*CommunityTokenPermission `protobuf:"bytes,5,rep,name=token_permissions,json=tokenPermissions,proto3" json:"token_permissions,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	CategoryData           *CategoryData                        `protobuf:"bytes,6,opt,name=category_data,json=categoryData,proto3" json:"category_data,omitempty"`
	ChannelData            *ChannelData                         `protobuf:"bytes,7,opt,name=channel_data,json=channelData,proto3" json:"channel_data,omitempty"`
	MemberToAction         string                               `protobuf:"bytes,8,opt,name=member_to_action,json=memberToAction,proto3" json:"member_to_action,omitempty"`
	MembersAdded           map[string]*CommunityMember          `protobuf:"bytes,9,rep,name=membersAdded,proto3" json:"membersAdded,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	RejectedRequestsToJoin map[string]*CommunityRequestToJoin   `protobuf:"bytes,10,rep,name=rejectedRequestsToJoin,proto3" json:"rejectedRequestsToJoin,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	AcceptedRequestsToJoin map[string]*CommunityRequestToJoin   `protobuf:"bytes,11,rep,name=acceptedRequestsToJoin,proto3" json:"acceptedRequestsToJoin,omitempty" protobuf_key:"bytes,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"`
	XXX_NoUnkeyedLiteral   struct{}                             `json:"-"`
	XXX_unrecognized       []byte                               `json:"-"`
	XXX_sizecache          int32                                `json:"-"`
}

func (m *CommunityAdminEvent) Reset()         { *m = CommunityAdminEvent{} }
func (m *CommunityAdminEvent) String() string { return proto.CompactTextString(m) }
func (*CommunityAdminEvent) ProtoMessage()    {}
func (*CommunityAdminEvent) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a3f5c92e845a9d, []int{0}
}

func (m *CommunityAdminEvent) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunityAdminEvent.Unmarshal(m, b)
}
func (m *CommunityAdminEvent) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunityAdminEvent.Marshal(b, m, deterministic)
}
func (m *CommunityAdminEvent) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunityAdminEvent.Merge(m, src)
}
func (m *CommunityAdminEvent) XXX_Size() int {
	return xxx_messageInfo_CommunityAdminEvent.Size(m)
}
func (m *CommunityAdminEvent) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunityAdminEvent.DiscardUnknown(m)
}

var xxx_messageInfo_CommunityAdminEvent proto.InternalMessageInfo

func (m *CommunityAdminEvent) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *CommunityAdminEvent) GetCommunityId() []byte {
	if m != nil {
		return m.CommunityId
	}
	return nil
}

func (m *CommunityAdminEvent) GetType() CommunityAdminEvent_EventType {
	if m != nil {
		return m.Type
	}
	return CommunityAdminEvent_UNKNOWN
}

func (m *CommunityAdminEvent) GetCommunityConfig() *CommunityConfig {
	if m != nil {
		return m.CommunityConfig
	}
	return nil
}

func (m *CommunityAdminEvent) GetTokenPermissions() map[string]*CommunityTokenPermission {
	if m != nil {
		return m.TokenPermissions
	}
	return nil
}

func (m *CommunityAdminEvent) GetCategoryData() *CategoryData {
	if m != nil {
		return m.CategoryData
	}
	return nil
}

func (m *CommunityAdminEvent) GetChannelData() *ChannelData {
	if m != nil {
		return m.ChannelData
	}
	return nil
}

func (m *CommunityAdminEvent) GetMemberToAction() string {
	if m != nil {
		return m.MemberToAction
	}
	return ""
}

func (m *CommunityAdminEvent) GetMembersAdded() map[string]*CommunityMember {
	if m != nil {
		return m.MembersAdded
	}
	return nil
}

func (m *CommunityAdminEvent) GetRejectedRequestsToJoin() map[string]*CommunityRequestToJoin {
	if m != nil {
		return m.RejectedRequestsToJoin
	}
	return nil
}

func (m *CommunityAdminEvent) GetAcceptedRequestsToJoin() map[string]*CommunityRequestToJoin {
	if m != nil {
		return m.AcceptedRequestsToJoin
	}
	return nil
}

type CommunityConfig struct {
	Identity             *ChatIdentity           `protobuf:"bytes,1,opt,name=identity,proto3" json:"identity,omitempty"`
	Permissions          *CommunityPermissions   `protobuf:"bytes,2,opt,name=permissions,proto3" json:"permissions,omitempty"`
	AdminSettings        *CommunityAdminSettings `protobuf:"bytes,3,opt,name=admin_settings,json=adminSettings,proto3" json:"admin_settings,omitempty"`
	IntroMessage         string                  `protobuf:"bytes,4,opt,name=intro_message,json=introMessage,proto3" json:"intro_message,omitempty"`
	OutroMessage         string                  `protobuf:"bytes,5,opt,name=outro_message,json=outroMessage,proto3" json:"outro_message,omitempty"`
	Tags                 []string                `protobuf:"bytes,6,rep,name=tags,proto3" json:"tags,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                `json:"-"`
	XXX_unrecognized     []byte                  `json:"-"`
	XXX_sizecache        int32                   `json:"-"`
}

func (m *CommunityConfig) Reset()         { *m = CommunityConfig{} }
func (m *CommunityConfig) String() string { return proto.CompactTextString(m) }
func (*CommunityConfig) ProtoMessage()    {}
func (*CommunityConfig) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a3f5c92e845a9d, []int{1}
}

func (m *CommunityConfig) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunityConfig.Unmarshal(m, b)
}
func (m *CommunityConfig) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunityConfig.Marshal(b, m, deterministic)
}
func (m *CommunityConfig) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunityConfig.Merge(m, src)
}
func (m *CommunityConfig) XXX_Size() int {
	return xxx_messageInfo_CommunityConfig.Size(m)
}
func (m *CommunityConfig) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunityConfig.DiscardUnknown(m)
}

var xxx_messageInfo_CommunityConfig proto.InternalMessageInfo

func (m *CommunityConfig) GetIdentity() *ChatIdentity {
	if m != nil {
		return m.Identity
	}
	return nil
}

func (m *CommunityConfig) GetPermissions() *CommunityPermissions {
	if m != nil {
		return m.Permissions
	}
	return nil
}

func (m *CommunityConfig) GetAdminSettings() *CommunityAdminSettings {
	if m != nil {
		return m.AdminSettings
	}
	return nil
}

func (m *CommunityConfig) GetIntroMessage() string {
	if m != nil {
		return m.IntroMessage
	}
	return ""
}

func (m *CommunityConfig) GetOutroMessage() string {
	if m != nil {
		return m.OutroMessage
	}
	return ""
}

func (m *CommunityConfig) GetTags() []string {
	if m != nil {
		return m.Tags
	}
	return nil
}

type CategoryData struct {
	CategoryId           string   `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	Name                 string   `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	ChannelsIds          []string `protobuf:"bytes,3,rep,name=channels_ids,json=channelsIds,proto3" json:"channels_ids,omitempty"`
	Position             int32    `protobuf:"varint,4,opt,name=position,proto3" json:"position,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CategoryData) Reset()         { *m = CategoryData{} }
func (m *CategoryData) String() string { return proto.CompactTextString(m) }
func (*CategoryData) ProtoMessage()    {}
func (*CategoryData) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a3f5c92e845a9d, []int{2}
}

func (m *CategoryData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CategoryData.Unmarshal(m, b)
}
func (m *CategoryData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CategoryData.Marshal(b, m, deterministic)
}
func (m *CategoryData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CategoryData.Merge(m, src)
}
func (m *CategoryData) XXX_Size() int {
	return xxx_messageInfo_CategoryData.Size(m)
}
func (m *CategoryData) XXX_DiscardUnknown() {
	xxx_messageInfo_CategoryData.DiscardUnknown(m)
}

var xxx_messageInfo_CategoryData proto.InternalMessageInfo

func (m *CategoryData) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *CategoryData) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CategoryData) GetChannelsIds() []string {
	if m != nil {
		return m.ChannelsIds
	}
	return nil
}

func (m *CategoryData) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

type ChannelData struct {
	CategoryId           string         `protobuf:"bytes,1,opt,name=category_id,json=categoryId,proto3" json:"category_id,omitempty"`
	ChannelId            string         `protobuf:"bytes,2,opt,name=channel_id,json=channelId,proto3" json:"channel_id,omitempty"`
	Position             int32          `protobuf:"varint,3,opt,name=position,proto3" json:"position,omitempty"`
	Channel              *CommunityChat `protobuf:"bytes,4,opt,name=channel,proto3" json:"channel,omitempty"`
	XXX_NoUnkeyedLiteral struct{}       `json:"-"`
	XXX_unrecognized     []byte         `json:"-"`
	XXX_sizecache        int32          `json:"-"`
}

func (m *ChannelData) Reset()         { *m = ChannelData{} }
func (m *ChannelData) String() string { return proto.CompactTextString(m) }
func (*ChannelData) ProtoMessage()    {}
func (*ChannelData) Descriptor() ([]byte, []int) {
	return fileDescriptor_22a3f5c92e845a9d, []int{3}
}

func (m *ChannelData) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ChannelData.Unmarshal(m, b)
}
func (m *ChannelData) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ChannelData.Marshal(b, m, deterministic)
}
func (m *ChannelData) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ChannelData.Merge(m, src)
}
func (m *ChannelData) XXX_Size() int {
	return xxx_messageInfo_ChannelData.Size(m)
}
func (m *ChannelData) XXX_DiscardUnknown() {
	xxx_messageInfo_ChannelData.DiscardUnknown(m)
}

var xxx_messageInfo_ChannelData proto.InternalMessageInfo

func (m *ChannelData) GetCategoryId() string {
	if m != nil {
		return m.CategoryId
	}
	return ""
}

func (m *ChannelData) GetChannelId() string {
	if m != nil {
		return m.ChannelId
	}
	return ""
}

func (m *ChannelData) GetPosition() int32 {
	if m != nil {
		return m.Position
	}
	return 0
}

func (m *ChannelData) GetChannel() *CommunityChat {
	if m != nil {
		return m.Channel
	}
	return nil
}

func init() {
	proto.RegisterEnum("protobuf.CommunityAdminEvent_EventType", CommunityAdminEvent_EventType_name, CommunityAdminEvent_EventType_value)
	proto.RegisterType((*CommunityAdminEvent)(nil), "protobuf.CommunityAdminEvent")
	proto.RegisterMapType((map[string]*CommunityRequestToJoin)(nil), "protobuf.CommunityAdminEvent.AcceptedRequestsToJoinEntry")
	proto.RegisterMapType((map[string]*CommunityMember)(nil), "protobuf.CommunityAdminEvent.MembersAddedEntry")
	proto.RegisterMapType((map[string]*CommunityRequestToJoin)(nil), "protobuf.CommunityAdminEvent.RejectedRequestsToJoinEntry")
	proto.RegisterMapType((map[string]*CommunityTokenPermission)(nil), "protobuf.CommunityAdminEvent.TokenPermissionsEntry")
	proto.RegisterType((*CommunityConfig)(nil), "protobuf.CommunityConfig")
	proto.RegisterType((*CategoryData)(nil), "protobuf.CategoryData")
	proto.RegisterType((*ChannelData)(nil), "protobuf.ChannelData")
}

func init() {
	proto.RegisterFile("community_admin_update.proto", fileDescriptor_22a3f5c92e845a9d)
}

var fileDescriptor_22a3f5c92e845a9d = []byte{
	// 950 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xac, 0x56, 0xdd, 0x6e, 0xe2, 0x46,
	0x14, 0xae, 0x03, 0x24, 0xf8, 0x18, 0x88, 0x33, 0xbb, 0xc9, 0x3a, 0xec, 0x4f, 0x29, 0xad, 0x54,
	0x5f, 0x54, 0x44, 0x65, 0xa5, 0x2a, 0x6d, 0x6e, 0xea, 0x98, 0x51, 0xd6, 0xc9, 0x62, 0xd2, 0xc1,
	0x51, 0xb5, 0x7b, 0xe3, 0x3a, 0xf6, 0x2c, 0x71, 0x13, 0x6c, 0x16, 0x0f, 0x2b, 0x71, 0xdb, 0x97,
	0xe8, 0x4d, 0x9f, 0xa1, 0xcf, 0xd1, 0xc7, 0xaa, 0x3c, 0xb6, 0xc1, 0x80, 0x97, 0xe6, 0xa2, 0x37,
	0xe0, 0x39, 0xdf, 0xf9, 0xbe, 0xef, 0xcc, 0x68, 0x66, 0xce, 0xc0, 0x0b, 0x37, 0x1c, 0x8f, 0x67,
	0x81, 0xcf, 0xe6, 0xb6, 0xe3, 0x8d, 0xfd, 0xc0, 0x9e, 0x4d, 0x3c, 0x87, 0xd1, 0xce, 0x64, 0x1a,
	0xb2, 0x10, 0x55, 0xf9, 0xdf, 0xed, 0xec, 0x43, 0xf3, 0x89, 0x7b, 0xe7, 0x30, 0xdb, 0xf7, 0x68,
	0xc0, 0x7c, 0x36, 0x4f, 0xe0, 0xe6, 0x41, 0x46, 0xf6, 0x69, 0x94, 0x84, 0xda, 0xff, 0xd4, 0xe1,
	0x89, 0x9e, 0x49, 0x6a, 0xb1, 0x22, 0xfe, 0x44, 0x03, 0x86, 0x9e, 0x42, 0xc5, 0x7d, 0x08, 0xdd,
	0x7b, 0x45, 0x68, 0x09, 0x6a, 0x99, 0x24, 0x03, 0xf4, 0x15, 0xd4, 0x96, 0xfe, 0xbe, 0xa7, 0xec,
	0xb4, 0x04, 0xb5, 0x46, 0xa4, 0x45, 0xcc, 0xf0, 0xd0, 0x19, 0x94, 0xd9, 0x7c, 0x42, 0x95, 0x52,
	0x4b, 0x50, 0x1b, 0xdd, 0x6f, 0x3b, 0x59, 0x45, 0x9d, 0x02, 0x97, 0x0e, 0xff, 0xb5, 0xe6, 0x13,
	0x4a, 0x38, 0x09, 0xf5, 0x40, 0x5e, 0xea, 0xbb, 0x61, 0xf0, 0xc1, 0x1f, 0x29, 0xe5, 0x96, 0xa0,
	0x4a, 0xdd, 0xe3, 0x02, 0x21, 0x9d, 0x27, 0x90, 0x7d, 0x77, 0x35, 0x80, 0x7e, 0x83, 0x03, 0x16,
	0xde, 0xd3, 0xc0, 0x9e, 0xd0, 0xe9, 0xd8, 0x8f, 0x22, 0x3f, 0x0c, 0x22, 0xa5, 0xd2, 0x2a, 0xa9,
	0x52, 0xf7, 0xf5, 0xf6, 0x7a, 0xac, 0x98, 0x76, 0xbd, 0x64, 0xe1, 0x80, 0x4d, 0xe7, 0x44, 0x66,
	0x6b, 0x61, 0x74, 0x06, 0x75, 0xd7, 0x61, 0x74, 0x14, 0x4e, 0xe7, 0xb6, 0xe7, 0x30, 0x47, 0xd9,
	0xe5, 0x45, 0x1e, 0xe5, 0xd4, 0x53, 0xb8, 0xe7, 0x30, 0x87, 0xd4, 0xdc, 0xdc, 0x08, 0x9d, 0x42,
	0xcd, 0xbd, 0x73, 0x82, 0x80, 0x3e, 0x24, 0xdc, 0x3d, 0xce, 0x3d, 0xcc, 0x71, 0x13, 0x94, 0x53,
	0x25, 0x77, 0x39, 0x40, 0x2a, 0xc8, 0x63, 0x3a, 0xbe, 0xa5, 0x53, 0x9b, 0x85, 0xb6, 0xe3, 0x32,
	0x3f, 0x0c, 0x94, 0x6a, 0x4b, 0x50, 0x45, 0xd2, 0x48, 0xe2, 0x56, 0xa8, 0xf1, 0x28, 0x1a, 0x42,
	0x2d, 0x89, 0x44, 0x9a, 0xe7, 0x51, 0x4f, 0x11, 0xf9, 0xec, 0x4f, 0xb6, 0xcf, 0xbe, 0x9f, 0x63,
	0x24, 0x33, 0x5f, 0x11, 0x41, 0x1f, 0xe1, 0x68, 0x4a, 0x7f, 0xa7, 0x2e, 0xa3, 0x1e, 0xa1, 0x1f,
	0x67, 0x34, 0x62, 0x91, 0x15, 0x5e, 0x86, 0x7e, 0xa0, 0x00, 0x97, 0xff, 0x71, 0xbb, 0x3c, 0x29,
	0xe4, 0x26, 0x46, 0x9f, 0x11, 0x8e, 0x2d, 0x1d, 0xd7, 0xa5, 0x93, 0x4d, 0x4b, 0xe9, 0x31, 0x96,
	0x5a, 0x21, 0x37, 0xb5, 0x2c, 0x16, 0x6e, 0x8e, 0xe0, 0xb0, 0x70, 0x1b, 0x20, 0x19, 0x4a, 0xf7,
	0x74, 0xce, 0x0f, 0x84, 0x48, 0xe2, 0x4f, 0x74, 0x0a, 0x95, 0x4f, 0xce, 0xc3, 0x8c, 0xf2, 0x73,
	0x20, 0x75, 0xdb, 0x05, 0xc5, 0xac, 0x49, 0x91, 0x84, 0xf0, 0xd3, 0xce, 0xa9, 0xd0, 0x7c, 0x0f,
	0x07, 0x1b, 0x2b, 0x5e, 0x60, 0x72, 0xb2, 0x6a, 0x52, 0x74, 0x10, 0x12, 0x99, 0xbc, 0xf6, 0x3d,
	0x3c, 0xdf, 0xb2, 0xdc, 0x05, 0x2e, 0x3f, 0xac, 0xba, 0xb4, 0x0a, 0x5c, 0x52, 0xa1, 0x44, 0x67,
	0xcd, 0x6c, 0xcb, 0x42, 0xff, 0xbf, 0x66, 0xed, 0x3f, 0xcb, 0x20, 0x2e, 0xae, 0x0d, 0x24, 0xc1,
	0xde, 0x8d, 0x79, 0x65, 0x0e, 0x7e, 0x35, 0xe5, 0x2f, 0x10, 0x82, 0x86, 0x3e, 0xe8, 0xf7, 0x6f,
	0x4c, 0xc3, 0x7a, 0x67, 0xe3, 0x9e, 0x61, 0xc9, 0x02, 0xfa, 0x0e, 0xd4, 0x65, 0xac, 0x8f, 0xfb,
	0xe7, 0x98, 0xd8, 0xd6, 0xe0, 0x0a, 0x9b, 0xf6, 0x35, 0x26, 0x7d, 0x63, 0x38, 0x34, 0x06, 0xa6,
	0xad, 0xbf, 0xd1, 0xcc, 0x0b, 0x2c, 0xef, 0x3c, 0x2e, 0xbb, 0x87, 0xdf, 0x62, 0x0b, 0xcb, 0x25,
	0xf4, 0x12, 0x8e, 0x97, 0xd9, 0xba, 0x66, 0xe1, 0x8b, 0x01, 0x79, 0x67, 0xeb, 0x04, 0x6b, 0x16,
	0x96, 0xcb, 0x9f, 0x81, 0x53, 0x76, 0x05, 0x3d, 0x87, 0x67, 0x05, 0x30, 0x2f, 0x7b, 0x17, 0xbd,
	0x00, 0x25, 0x07, 0xbe, 0xd1, 0x4c, 0x13, 0xbf, 0xcd, 0x94, 0xf7, 0x8a, 0xd1, 0x54, 0xb8, 0x8a,
	0x9a, 0x70, 0xb4, 0x89, 0x72, 0x5d, 0x11, 0xbd, 0x82, 0x66, 0x81, 0x29, 0xc1, 0x03, 0xd2, 0xc3,
	0x44, 0x86, 0xb5, 0x9a, 0x53, 0x6e, 0x06, 0x4b, 0xe8, 0x1b, 0x68, 0x2d, 0x61, 0x82, 0x7f, 0xb9,
	0xc1, 0x43, 0xcb, 0xb6, 0x06, 0xf6, 0xe5, 0xc0, 0x30, 0x6d, 0x4d, 0xd7, 0xf1, 0xb5, 0x25, 0xd7,
	0xb6, 0x67, 0x11, 0x7c, 0x89, 0x75, 0x4b, 0xae, 0xa3, 0x63, 0x38, 0xdc, 0x58, 0xeb, 0x2b, 0x43,
	0xbf, 0x92, 0x1b, 0x48, 0x81, 0xa7, 0x1b, 0xd0, 0xb9, 0x66, 0xca, 0xfb, 0xab, 0x73, 0x4b, 0x91,
	0x1b, 0x33, 0xc6, 0xe4, 0xf6, 0xdf, 0x3b, 0xb0, 0xbf, 0xd6, 0x1b, 0x50, 0x17, 0xaa, 0x59, 0x0f,
	0xe4, 0x1b, 0x70, 0xf5, 0x8e, 0xbe, 0x73, 0x98, 0x91, 0xa2, 0x64, 0x91, 0x87, 0x7e, 0x06, 0x29,
	0xdf, 0x38, 0x92, 0x3d, 0xfa, 0xaa, 0x60, 0x8f, 0xe6, 0x6e, 0x08, 0x92, 0xa7, 0xa0, 0x0b, 0x68,
	0x24, 0xcd, 0x39, 0xa2, 0x8c, 0xf9, 0xc1, 0x28, 0xe2, 0xdd, 0xb0, 0x78, 0xa3, 0xf3, 0xdb, 0x6a,
	0x98, 0xe6, 0x91, 0xba, 0x93, 0x1f, 0xa2, 0xaf, 0xa1, 0xee, 0x07, 0x6c, 0x1a, 0xda, 0x63, 0x1a,
	0x45, 0xce, 0x88, 0xf2, 0x66, 0x28, 0x92, 0x1a, 0x0f, 0xf6, 0x93, 0x58, 0x9c, 0x14, 0xce, 0xf2,
	0x49, 0x95, 0x24, 0x89, 0x07, 0xb3, 0x24, 0x04, 0x65, 0xe6, 0x8c, 0x22, 0x65, 0xb7, 0x55, 0x52,
	0x45, 0xc2, 0xbf, 0xdb, 0x7f, 0x08, 0x50, 0xcb, 0xf7, 0x29, 0xf4, 0x25, 0x48, 0x8b, 0xb6, 0xe6,
	0x7b, 0xe9, 0x89, 0x85, 0x2c, 0x64, 0x78, 0xb1, 0x4a, 0xe0, 0x8c, 0x93, 0x73, 0x2b, 0x12, 0xfe,
	0xcd, 0xdf, 0x04, 0x49, 0x8f, 0x8a, 0x6c, 0xdf, 0x8b, 0xa7, 0x1a, 0x3b, 0x64, 0x7d, 0x2b, 0x32,
	0xbc, 0x08, 0x35, 0xa1, 0x3a, 0x09, 0x23, 0x9f, 0xf7, 0xab, 0x78, 0x06, 0x15, 0xb2, 0x18, 0xb7,
	0xff, 0x12, 0x40, 0xca, 0x35, 0xbc, 0xff, 0xae, 0xe1, 0x25, 0x40, 0xd6, 0x3e, 0xd3, 0x17, 0x88,
	0x48, 0xc4, 0x34, 0x62, 0x78, 0x2b, 0x5e, 0xa5, 0x55, 0x2f, 0xf4, 0x3d, 0xec, 0xa5, 0x89, 0xe9,
	0xab, 0xe2, 0x59, 0xd1, 0xab, 0xe2, 0xce, 0x61, 0x24, 0xcb, 0x3b, 0xaf, 0xbf, 0x97, 0x3a, 0x27,
	0x67, 0x59, 0xd6, 0xed, 0x2e, 0xff, 0x7a, 0xfd, 0x6f, 0x00, 0x00, 0x00, 0xff, 0xff, 0xe4, 0xd0,
	0x35, 0x14, 0x87, 0x09, 0x00, 0x00,
}
