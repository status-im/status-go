// Code generated by protoc-gen-go. DO NOT EDIT.
// source: community_token.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommunityToken_DeployState int32

const (
	CommunityToken_UNKNOWN     CommunityToken_DeployState = 0
	CommunityToken_FAILED      CommunityToken_DeployState = 1
	CommunityToken_IN_PROGRESS CommunityToken_DeployState = 2
	CommunityToken_DEPLOYED    CommunityToken_DeployState = 3
)

var CommunityToken_DeployState_name = map[int32]string{
	0: "UNKNOWN",
	1: "FAILED",
	2: "IN_PROGRESS",
	3: "DEPLOYED",
}

var CommunityToken_DeployState_value = map[string]int32{
	"UNKNOWN":     0,
	"FAILED":      1,
	"IN_PROGRESS": 2,
	"DEPLOYED":    3,
}

func (x CommunityToken_DeployState) String() string {
	return proto.EnumName(CommunityToken_DeployState_name, int32(x))
}

func (CommunityToken_DeployState) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2582028caf1a04a, []int{0, 0}
}

type CommunityToken_PrivilegesLevel int32

const (
	CommunityToken_OWNER_LEVEL     CommunityToken_PrivilegesLevel = 0
	CommunityToken_MASTER_LEVEL    CommunityToken_PrivilegesLevel = 1
	CommunityToken_COMMUNITY_LEVEL CommunityToken_PrivilegesLevel = 2
)

var CommunityToken_PrivilegesLevel_name = map[int32]string{
	0: "OWNER_LEVEL",
	1: "MASTER_LEVEL",
	2: "COMMUNITY_LEVEL",
}

var CommunityToken_PrivilegesLevel_value = map[string]int32{
	"OWNER_LEVEL":     0,
	"MASTER_LEVEL":    1,
	"COMMUNITY_LEVEL": 2,
}

func (x CommunityToken_PrivilegesLevel) String() string {
	return proto.EnumName(CommunityToken_PrivilegesLevel_name, int32(x))
}

func (CommunityToken_PrivilegesLevel) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_e2582028caf1a04a, []int{0, 1}
}

type CommunityToken struct {
	TokenType            CommunityTokenType             `protobuf:"varint,1,opt,name=token_type,json=tokenType,proto3,enum=protobuf.CommunityTokenType" json:"token_type,omitempty"`
	CommunityId          string                         `protobuf:"bytes,2,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	Address              string                         `protobuf:"bytes,3,opt,name=address,proto3" json:"address,omitempty"`
	Name                 string                         `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	Symbol               string                         `protobuf:"bytes,5,opt,name=symbol,proto3" json:"symbol,omitempty"`
	Description          string                         `protobuf:"bytes,6,opt,name=description,proto3" json:"description,omitempty"`
	Supply               string                         `protobuf:"bytes,7,opt,name=supply,proto3" json:"supply,omitempty"`
	InfiniteSupply       bool                           `protobuf:"varint,8,opt,name=infinite_supply,json=infiniteSupply,proto3" json:"infinite_supply,omitempty"`
	Transferable         bool                           `protobuf:"varint,9,opt,name=transferable,proto3" json:"transferable,omitempty"`
	RemoteSelfDestruct   bool                           `protobuf:"varint,10,opt,name=remote_self_destruct,json=remoteSelfDestruct,proto3" json:"remote_self_destruct,omitempty"`
	ChainId              int32                          `protobuf:"varint,11,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	DeployState          CommunityToken_DeployState     `protobuf:"varint,12,opt,name=deploy_state,json=deployState,proto3,enum=protobuf.CommunityToken_DeployState" json:"deploy_state,omitempty"`
	Base64Image          string                         `protobuf:"bytes,13,opt,name=base64_image,json=base64Image,proto3" json:"base64_image,omitempty"`
	Decimals             int32                          `protobuf:"varint,14,opt,name=decimals,proto3" json:"decimals,omitempty"`
	Deployer             string                         `protobuf:"bytes,15,opt,name=deployer,proto3" json:"deployer,omitempty"`
	PrivilegesLevel      CommunityToken_PrivilegesLevel `protobuf:"varint,16,opt,name=privileges_level,json=privilegesLevel,proto3,enum=protobuf.CommunityToken_PrivilegesLevel" json:"privileges_level,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *CommunityToken) Reset()         { *m = CommunityToken{} }
func (m *CommunityToken) String() string { return proto.CompactTextString(m) }
func (*CommunityToken) ProtoMessage()    {}
func (*CommunityToken) Descriptor() ([]byte, []int) {
	return fileDescriptor_e2582028caf1a04a, []int{0}
}

func (m *CommunityToken) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunityToken.Unmarshal(m, b)
}
func (m *CommunityToken) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunityToken.Marshal(b, m, deterministic)
}
func (m *CommunityToken) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunityToken.Merge(m, src)
}
func (m *CommunityToken) XXX_Size() int {
	return xxx_messageInfo_CommunityToken.Size(m)
}
func (m *CommunityToken) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunityToken.DiscardUnknown(m)
}

var xxx_messageInfo_CommunityToken proto.InternalMessageInfo

func (m *CommunityToken) GetTokenType() CommunityTokenType {
	if m != nil {
		return m.TokenType
	}
	return CommunityTokenType_UNKNOWN_TOKEN_TYPE
}

func (m *CommunityToken) GetCommunityId() string {
	if m != nil {
		return m.CommunityId
	}
	return ""
}

func (m *CommunityToken) GetAddress() string {
	if m != nil {
		return m.Address
	}
	return ""
}

func (m *CommunityToken) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *CommunityToken) GetSymbol() string {
	if m != nil {
		return m.Symbol
	}
	return ""
}

func (m *CommunityToken) GetDescription() string {
	if m != nil {
		return m.Description
	}
	return ""
}

func (m *CommunityToken) GetSupply() string {
	if m != nil {
		return m.Supply
	}
	return ""
}

func (m *CommunityToken) GetInfiniteSupply() bool {
	if m != nil {
		return m.InfiniteSupply
	}
	return false
}

func (m *CommunityToken) GetTransferable() bool {
	if m != nil {
		return m.Transferable
	}
	return false
}

func (m *CommunityToken) GetRemoteSelfDestruct() bool {
	if m != nil {
		return m.RemoteSelfDestruct
	}
	return false
}

func (m *CommunityToken) GetChainId() int32 {
	if m != nil {
		return m.ChainId
	}
	return 0
}

func (m *CommunityToken) GetDeployState() CommunityToken_DeployState {
	if m != nil {
		return m.DeployState
	}
	return CommunityToken_UNKNOWN
}

func (m *CommunityToken) GetBase64Image() string {
	if m != nil {
		return m.Base64Image
	}
	return ""
}

func (m *CommunityToken) GetDecimals() int32 {
	if m != nil {
		return m.Decimals
	}
	return 0
}

func (m *CommunityToken) GetDeployer() string {
	if m != nil {
		return m.Deployer
	}
	return ""
}

func (m *CommunityToken) GetPrivilegesLevel() CommunityToken_PrivilegesLevel {
	if m != nil {
		return m.PrivilegesLevel
	}
	return CommunityToken_OWNER_LEVEL
}

func init() {
	proto.RegisterEnum("protobuf.CommunityToken_DeployState", CommunityToken_DeployState_name, CommunityToken_DeployState_value)
	proto.RegisterEnum("protobuf.CommunityToken_PrivilegesLevel", CommunityToken_PrivilegesLevel_name, CommunityToken_PrivilegesLevel_value)
	proto.RegisterType((*CommunityToken)(nil), "protobuf.CommunityToken")
}

func init() {
	proto.RegisterFile("community_token.proto", fileDescriptor_e2582028caf1a04a)
}

var fileDescriptor_e2582028caf1a04a = []byte{
	// 509 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x74, 0x91, 0x4f, 0x6f, 0x9b, 0x40,
	0x10, 0xc5, 0x83, 0x93, 0xd8, 0x78, 0x20, 0x06, 0x4d, 0xff, 0x68, 0x1b, 0xf5, 0xe0, 0x5a, 0x95,
	0xea, 0x93, 0x5b, 0xb5, 0x55, 0x2f, 0x39, 0xa5, 0x31, 0x8d, 0x50, 0x6d, 0x6c, 0x81, 0xd3, 0x28,
	0xbd, 0x20, 0x6c, 0xc6, 0xe9, 0xaa, 0xfc, 0x13, 0xac, 0x23, 0xf1, 0x41, 0xfa, 0x7d, 0x2b, 0x16,
	0x43, 0xe3, 0x4a, 0x39, 0xb1, 0xef, 0x37, 0xef, 0xed, 0xce, 0x0c, 0xf0, 0x62, 0x93, 0xc6, 0xf1,
	0x2e, 0xe1, 0xa2, 0xf4, 0x45, 0xfa, 0x9b, 0x92, 0x49, 0x96, 0xa7, 0x22, 0x45, 0x55, 0x7e, 0xd6,
	0xbb, 0xed, 0xb9, 0x46, 0xc9, 0x2e, 0x2e, 0x6a, 0x3c, 0xfa, 0xd3, 0x85, 0xc1, 0x55, 0x13, 0x58,
	0x55, 0x7e, 0xbc, 0x00, 0x90, 0x41, 0x5f, 0x94, 0x19, 0x31, 0x65, 0xa8, 0x8c, 0x07, 0x1f, 0x5f,
	0x4f, 0x9a, 0xf8, 0xe4, 0xd0, 0xbd, 0x2a, 0x33, 0x72, 0xfb, 0xa2, 0x39, 0xe2, 0x1b, 0xd0, 0xff,
	0xbd, 0xcf, 0x43, 0xd6, 0x19, 0x2a, 0xe3, 0xbe, 0xab, 0xb5, 0xcc, 0x0e, 0x91, 0x41, 0x2f, 0x08,
	0xc3, 0x9c, 0x8a, 0x82, 0x1d, 0xcb, 0x6a, 0x23, 0x11, 0xe1, 0x24, 0x09, 0x62, 0x62, 0x27, 0x12,
	0xcb, 0x33, 0xbe, 0x84, 0x6e, 0x51, 0xc6, 0xeb, 0x34, 0x62, 0xa7, 0x92, 0xee, 0x15, 0x0e, 0x41,
	0x0b, 0xa9, 0xd8, 0xe4, 0x3c, 0x13, 0x3c, 0x4d, 0x58, 0xb7, 0x7e, 0xe7, 0x11, 0x92, 0xc9, 0x5d,
	0x96, 0x45, 0x25, 0xeb, 0xed, 0x93, 0x52, 0xe1, 0x3b, 0x30, 0x78, 0xb2, 0xe5, 0x09, 0x17, 0xe4,
	0xef, 0x0d, 0xea, 0x50, 0x19, 0xab, 0xee, 0xa0, 0xc1, 0x5e, 0x6d, 0x1c, 0x81, 0x2e, 0xf2, 0x20,
	0x29, 0xb6, 0x94, 0x07, 0xeb, 0x88, 0x58, 0x5f, 0xba, 0x0e, 0x18, 0x7e, 0x80, 0xe7, 0x39, 0xc5,
	0x69, 0x75, 0x15, 0x45, 0x5b, 0x3f, 0xa4, 0x42, 0xe4, 0xbb, 0x8d, 0x60, 0x20, 0xbd, 0x58, 0xd7,
	0x3c, 0x8a, 0xb6, 0xd3, 0x7d, 0x05, 0x5f, 0x81, 0xba, 0xf9, 0x15, 0xf0, 0xa4, 0xda, 0x8e, 0x36,
	0x54, 0xc6, 0xa7, 0x6e, 0x4f, 0x6a, 0x3b, 0xc4, 0x6b, 0xd0, 0x43, 0xca, 0xa2, 0xb4, 0xf4, 0x0b,
	0x11, 0x08, 0x62, 0xba, 0xdc, 0xfd, 0xdb, 0xa7, 0x76, 0x3f, 0x99, 0x4a, 0xb3, 0x57, 0x79, 0xab,
	0xd1, 0x5b, 0x51, 0xfd, 0x85, 0x75, 0x50, 0xd0, 0x97, 0xcf, 0x3e, 0x8f, 0x83, 0x7b, 0x62, 0x67,
	0xf5, 0x76, 0x6a, 0x66, 0x57, 0x08, 0xcf, 0x41, 0x0d, 0x69, 0xc3, 0xe3, 0x20, 0x2a, 0xd8, 0x40,
	0xb6, 0xd1, 0xea, 0xba, 0x56, 0xdd, 0x46, 0x39, 0x33, 0x64, 0xb4, 0xd5, 0xe8, 0x81, 0x99, 0xe5,
	0xfc, 0x81, 0x47, 0x74, 0x4f, 0x85, 0x1f, 0xd1, 0x03, 0x45, 0xcc, 0x94, 0x7d, 0x8e, 0x9f, 0xec,
	0x73, 0xd9, 0x06, 0x66, 0x95, 0xdf, 0x35, 0xb2, 0x43, 0x30, 0xb2, 0x40, 0x7b, 0x34, 0x0b, 0x6a,
	0xd0, 0xbb, 0x71, 0xbe, 0x3b, 0x8b, 0x5b, 0xc7, 0x3c, 0x42, 0x80, 0xee, 0xb7, 0x4b, 0x7b, 0x66,
	0x4d, 0x4d, 0x05, 0x0d, 0xd0, 0x6c, 0xc7, 0x5f, 0xba, 0x8b, 0x6b, 0xd7, 0xf2, 0x3c, 0xb3, 0x83,
	0x3a, 0xa8, 0x53, 0x6b, 0x39, 0x5b, 0xdc, 0x59, 0x53, 0xf3, 0x78, 0x64, 0x83, 0xf1, 0xdf, 0x53,
	0x55, 0x62, 0x71, 0xeb, 0x58, 0xae, 0x3f, 0xb3, 0x7e, 0x58, 0x33, 0xf3, 0x08, 0x4d, 0xd0, 0xe7,
	0x97, 0xde, 0xaa, 0x25, 0x0a, 0x3e, 0x03, 0xe3, 0x6a, 0x31, 0x9f, 0xdf, 0x38, 0xf6, 0xea, 0x6e,
	0x0f, 0x3b, 0x5f, 0xcf, 0x7e, 0x6a, 0x93, 0xf7, 0x17, 0xcd, 0x40, 0xeb, 0xae, 0x3c, 0x7d, 0xfa,
	0x1b, 0x00, 0x00, 0xff, 0xff, 0xe9, 0x8d, 0x9f, 0x59, 0x5d, 0x03, 0x00, 0x00,
}
