// Code generated by protoc-gen-gogo. DO NOT EDIT.
// source: pairing.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	io "io"
	math "math"
	math_bits "math/bits"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type Backup struct {
	Clock                uint64                       `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Id                   string                       `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	Contacts             []*SyncInstallationContactV2 `protobuf:"bytes,3,rep,name=contacts,proto3" json:"contacts,omitempty"`
	Communities          []*SyncCommunity             `protobuf:"bytes,4,rep,name=communities,proto3" json:"communities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                     `json:"-"`
	XXX_unrecognized     []byte                       `json:"-"`
	XXX_sizecache        int32                        `json:"-"`
}

func (m *Backup) Reset()         { *m = Backup{} }
func (m *Backup) String() string { return proto.CompactTextString(m) }
func (*Backup) ProtoMessage()    {}
func (*Backup) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{0}
}
func (m *Backup) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *Backup) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_Backup.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *Backup) XXX_Merge(src proto.Message) {
	xxx_messageInfo_Backup.Merge(m, src)
}
func (m *Backup) XXX_Size() int {
	return m.Size()
}
func (m *Backup) XXX_DiscardUnknown() {
	xxx_messageInfo_Backup.DiscardUnknown(m)
}

var xxx_messageInfo_Backup proto.InternalMessageInfo

func (m *Backup) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *Backup) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *Backup) GetContacts() []*SyncInstallationContactV2 {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *Backup) GetCommunities() []*SyncCommunity {
	if m != nil {
		return m.Communities
	}
	return nil
}

type PairInstallation struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	InstallationId       string   `protobuf:"bytes,2,opt,name=installation_id,json=installationId,proto3" json:"installation_id,omitempty"`
	DeviceType           string   `protobuf:"bytes,3,opt,name=device_type,json=deviceType,proto3" json:"device_type,omitempty"`
	Name                 string   `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *PairInstallation) Reset()         { *m = PairInstallation{} }
func (m *PairInstallation) String() string { return proto.CompactTextString(m) }
func (*PairInstallation) ProtoMessage()    {}
func (*PairInstallation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{1}
}
func (m *PairInstallation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *PairInstallation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_PairInstallation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *PairInstallation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_PairInstallation.Merge(m, src)
}
func (m *PairInstallation) XXX_Size() int {
	return m.Size()
}
func (m *PairInstallation) XXX_DiscardUnknown() {
	xxx_messageInfo_PairInstallation.DiscardUnknown(m)
}

var xxx_messageInfo_PairInstallation proto.InternalMessageInfo

func (m *PairInstallation) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *PairInstallation) GetInstallationId() string {
	if m != nil {
		return m.InstallationId
	}
	return ""
}

func (m *PairInstallation) GetDeviceType() string {
	if m != nil {
		return m.DeviceType
	}
	return ""
}

func (m *PairInstallation) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

type SyncInstallationContact struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ProfileImage         string   `protobuf:"bytes,3,opt,name=profile_image,json=profileImage,proto3" json:"profile_image,omitempty"`
	EnsName              string   `protobuf:"bytes,4,opt,name=ens_name,json=ensName,proto3" json:"ens_name,omitempty"`
	LastUpdated          uint64   `protobuf:"varint,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	SystemTags           []string `protobuf:"bytes,6,rep,name=system_tags,json=systemTags,proto3" json:"system_tags,omitempty"`
	LocalNickname        string   `protobuf:"bytes,7,opt,name=local_nickname,json=localNickname,proto3" json:"local_nickname,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncInstallationContact) Reset()         { *m = SyncInstallationContact{} }
func (m *SyncInstallationContact) String() string { return proto.CompactTextString(m) }
func (*SyncInstallationContact) ProtoMessage()    {}
func (*SyncInstallationContact) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{2}
}
func (m *SyncInstallationContact) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncInstallationContact) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncInstallationContact.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncInstallationContact) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncInstallationContact.Merge(m, src)
}
func (m *SyncInstallationContact) XXX_Size() int {
	return m.Size()
}
func (m *SyncInstallationContact) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncInstallationContact.DiscardUnknown(m)
}

var xxx_messageInfo_SyncInstallationContact proto.InternalMessageInfo

func (m *SyncInstallationContact) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncInstallationContact) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SyncInstallationContact) GetProfileImage() string {
	if m != nil {
		return m.ProfileImage
	}
	return ""
}

func (m *SyncInstallationContact) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *SyncInstallationContact) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *SyncInstallationContact) GetSystemTags() []string {
	if m != nil {
		return m.SystemTags
	}
	return nil
}

func (m *SyncInstallationContact) GetLocalNickname() string {
	if m != nil {
		return m.LocalNickname
	}
	return ""
}

type SyncInstallationContactV2 struct {
	LastUpdatedLocally   uint64   `protobuf:"varint,1,opt,name=last_updated_locally,json=lastUpdatedLocally,proto3" json:"last_updated_locally,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	ProfileImage         string   `protobuf:"bytes,3,opt,name=profile_image,json=profileImage,proto3" json:"profile_image,omitempty"`
	EnsName              string   `protobuf:"bytes,4,opt,name=ens_name,json=ensName,proto3" json:"ens_name,omitempty"`
	LastUpdated          uint64   `protobuf:"varint,5,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	SystemTags           []string `protobuf:"bytes,6,rep,name=system_tags,json=systemTags,proto3" json:"system_tags,omitempty"`
	LocalNickname        string   `protobuf:"bytes,7,opt,name=local_nickname,json=localNickname,proto3" json:"local_nickname,omitempty"`
	Added                bool     `protobuf:"varint,9,opt,name=added,proto3" json:"added,omitempty"`
	Blocked              bool     `protobuf:"varint,10,opt,name=blocked,proto3" json:"blocked,omitempty"`
	Muted                bool     `protobuf:"varint,11,opt,name=muted,proto3" json:"muted,omitempty"`
	Removed              bool     `protobuf:"varint,12,opt,name=removed,proto3" json:"removed,omitempty"`
	HasAddedUs           bool     `protobuf:"varint,13,opt,name=has_added_us,json=hasAddedUs,proto3" json:"has_added_us,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncInstallationContactV2) Reset()         { *m = SyncInstallationContactV2{} }
func (m *SyncInstallationContactV2) String() string { return proto.CompactTextString(m) }
func (*SyncInstallationContactV2) ProtoMessage()    {}
func (*SyncInstallationContactV2) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{3}
}
func (m *SyncInstallationContactV2) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncInstallationContactV2) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncInstallationContactV2.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncInstallationContactV2) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncInstallationContactV2.Merge(m, src)
}
func (m *SyncInstallationContactV2) XXX_Size() int {
	return m.Size()
}
func (m *SyncInstallationContactV2) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncInstallationContactV2.DiscardUnknown(m)
}

var xxx_messageInfo_SyncInstallationContactV2 proto.InternalMessageInfo

func (m *SyncInstallationContactV2) GetLastUpdatedLocally() uint64 {
	if m != nil {
		return m.LastUpdatedLocally
	}
	return 0
}

func (m *SyncInstallationContactV2) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

func (m *SyncInstallationContactV2) GetProfileImage() string {
	if m != nil {
		return m.ProfileImage
	}
	return ""
}

func (m *SyncInstallationContactV2) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *SyncInstallationContactV2) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

func (m *SyncInstallationContactV2) GetSystemTags() []string {
	if m != nil {
		return m.SystemTags
	}
	return nil
}

func (m *SyncInstallationContactV2) GetLocalNickname() string {
	if m != nil {
		return m.LocalNickname
	}
	return ""
}

func (m *SyncInstallationContactV2) GetAdded() bool {
	if m != nil {
		return m.Added
	}
	return false
}

func (m *SyncInstallationContactV2) GetBlocked() bool {
	if m != nil {
		return m.Blocked
	}
	return false
}

func (m *SyncInstallationContactV2) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *SyncInstallationContactV2) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

func (m *SyncInstallationContactV2) GetHasAddedUs() bool {
	if m != nil {
		return m.HasAddedUs
	}
	return false
}

type SyncInstallationAccount struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	ProfileImage         string   `protobuf:"bytes,2,opt,name=profile_image,json=profileImage,proto3" json:"profile_image,omitempty"`
	LastUpdated          uint64   `protobuf:"varint,3,opt,name=last_updated,json=lastUpdated,proto3" json:"last_updated,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncInstallationAccount) Reset()         { *m = SyncInstallationAccount{} }
func (m *SyncInstallationAccount) String() string { return proto.CompactTextString(m) }
func (*SyncInstallationAccount) ProtoMessage()    {}
func (*SyncInstallationAccount) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{4}
}
func (m *SyncInstallationAccount) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncInstallationAccount) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncInstallationAccount.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncInstallationAccount) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncInstallationAccount.Merge(m, src)
}
func (m *SyncInstallationAccount) XXX_Size() int {
	return m.Size()
}
func (m *SyncInstallationAccount) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncInstallationAccount.DiscardUnknown(m)
}

var xxx_messageInfo_SyncInstallationAccount proto.InternalMessageInfo

func (m *SyncInstallationAccount) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncInstallationAccount) GetProfileImage() string {
	if m != nil {
		return m.ProfileImage
	}
	return ""
}

func (m *SyncInstallationAccount) GetLastUpdated() uint64 {
	if m != nil {
		return m.LastUpdated
	}
	return 0
}

type SyncInstallationPublicChat struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncInstallationPublicChat) Reset()         { *m = SyncInstallationPublicChat{} }
func (m *SyncInstallationPublicChat) String() string { return proto.CompactTextString(m) }
func (*SyncInstallationPublicChat) ProtoMessage()    {}
func (*SyncInstallationPublicChat) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{5}
}
func (m *SyncInstallationPublicChat) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncInstallationPublicChat) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncInstallationPublicChat.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncInstallationPublicChat) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncInstallationPublicChat.Merge(m, src)
}
func (m *SyncInstallationPublicChat) XXX_Size() int {
	return m.Size()
}
func (m *SyncInstallationPublicChat) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncInstallationPublicChat.DiscardUnknown(m)
}

var xxx_messageInfo_SyncInstallationPublicChat proto.InternalMessageInfo

func (m *SyncInstallationPublicChat) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncInstallationPublicChat) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SyncCommunity struct {
	Clock                uint64                         `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Id                   []byte                         `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	PrivateKey           []byte                         `protobuf:"bytes,3,opt,name=private_key,json=privateKey,proto3" json:"private_key,omitempty"`
	Description          []byte                         `protobuf:"bytes,4,opt,name=description,proto3" json:"description,omitempty"`
	Joined               bool                           `protobuf:"varint,5,opt,name=joined,proto3" json:"joined,omitempty"`
	Verified             bool                           `protobuf:"varint,6,opt,name=verified,proto3" json:"verified,omitempty"`
	Muted                bool                           `protobuf:"varint,7,opt,name=muted,proto3" json:"muted,omitempty"`
	RequestsToJoin       []*SyncCommunityRequestsToJoin `protobuf:"bytes,8,rep,name=requests_to_join,json=requestsToJoin,proto3" json:"requests_to_join,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                       `json:"-"`
	XXX_unrecognized     []byte                         `json:"-"`
	XXX_sizecache        int32                          `json:"-"`
}

func (m *SyncCommunity) Reset()         { *m = SyncCommunity{} }
func (m *SyncCommunity) String() string { return proto.CompactTextString(m) }
func (*SyncCommunity) ProtoMessage()    {}
func (*SyncCommunity) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{6}
}
func (m *SyncCommunity) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncCommunity) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncCommunity.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncCommunity) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncCommunity.Merge(m, src)
}
func (m *SyncCommunity) XXX_Size() int {
	return m.Size()
}
func (m *SyncCommunity) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncCommunity.DiscardUnknown(m)
}

var xxx_messageInfo_SyncCommunity proto.InternalMessageInfo

func (m *SyncCommunity) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncCommunity) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SyncCommunity) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *SyncCommunity) GetDescription() []byte {
	if m != nil {
		return m.Description
	}
	return nil
}

func (m *SyncCommunity) GetJoined() bool {
	if m != nil {
		return m.Joined
	}
	return false
}

func (m *SyncCommunity) GetVerified() bool {
	if m != nil {
		return m.Verified
	}
	return false
}

func (m *SyncCommunity) GetMuted() bool {
	if m != nil {
		return m.Muted
	}
	return false
}

func (m *SyncCommunity) GetRequestsToJoin() []*SyncCommunityRequestsToJoin {
	if m != nil {
		return m.RequestsToJoin
	}
	return nil
}

type SyncCommunityRequestsToJoin struct {
	Id                   []byte   `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	PublicKey            string   `protobuf:"bytes,2,opt,name=public_key,json=publicKey,proto3" json:"public_key,omitempty"`
	Clock                uint64   `protobuf:"varint,3,opt,name=clock,proto3" json:"clock,omitempty"`
	EnsName              string   `protobuf:"bytes,4,opt,name=ens_name,json=ensName,proto3" json:"ens_name,omitempty"`
	ChatId               string   `protobuf:"bytes,5,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	CommunityId          []byte   `protobuf:"bytes,6,opt,name=community_id,json=communityId,proto3" json:"community_id,omitempty"`
	State                uint64   `protobuf:"varint,7,opt,name=state,proto3" json:"state,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncCommunityRequestsToJoin) Reset()         { *m = SyncCommunityRequestsToJoin{} }
func (m *SyncCommunityRequestsToJoin) String() string { return proto.CompactTextString(m) }
func (*SyncCommunityRequestsToJoin) ProtoMessage()    {}
func (*SyncCommunityRequestsToJoin) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{7}
}
func (m *SyncCommunityRequestsToJoin) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncCommunityRequestsToJoin) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncCommunityRequestsToJoin.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncCommunityRequestsToJoin) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncCommunityRequestsToJoin.Merge(m, src)
}
func (m *SyncCommunityRequestsToJoin) XXX_Size() int {
	return m.Size()
}
func (m *SyncCommunityRequestsToJoin) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncCommunityRequestsToJoin.DiscardUnknown(m)
}

var xxx_messageInfo_SyncCommunityRequestsToJoin proto.InternalMessageInfo

func (m *SyncCommunityRequestsToJoin) GetId() []byte {
	if m != nil {
		return m.Id
	}
	return nil
}

func (m *SyncCommunityRequestsToJoin) GetPublicKey() string {
	if m != nil {
		return m.PublicKey
	}
	return ""
}

func (m *SyncCommunityRequestsToJoin) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncCommunityRequestsToJoin) GetEnsName() string {
	if m != nil {
		return m.EnsName
	}
	return ""
}

func (m *SyncCommunityRequestsToJoin) GetChatId() string {
	if m != nil {
		return m.ChatId
	}
	return ""
}

func (m *SyncCommunityRequestsToJoin) GetCommunityId() []byte {
	if m != nil {
		return m.CommunityId
	}
	return nil
}

func (m *SyncCommunityRequestsToJoin) GetState() uint64 {
	if m != nil {
		return m.State
	}
	return 0
}

type SyncInstallation struct {
	Contacts             []*SyncInstallationContact    `protobuf:"bytes,1,rep,name=contacts,proto3" json:"contacts,omitempty"`
	PublicChats          []*SyncInstallationPublicChat `protobuf:"bytes,2,rep,name=public_chats,json=publicChats,proto3" json:"public_chats,omitempty"`
	Account              *SyncInstallationAccount      `protobuf:"bytes,3,opt,name=account,proto3" json:"account,omitempty"`
	Communities          []*SyncCommunity              `protobuf:"bytes,4,rep,name=communities,proto3" json:"communities,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                      `json:"-"`
	XXX_unrecognized     []byte                        `json:"-"`
	XXX_sizecache        int32                         `json:"-"`
}

func (m *SyncInstallation) Reset()         { *m = SyncInstallation{} }
func (m *SyncInstallation) String() string { return proto.CompactTextString(m) }
func (*SyncInstallation) ProtoMessage()    {}
func (*SyncInstallation) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{8}
}
func (m *SyncInstallation) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncInstallation) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncInstallation.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncInstallation) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncInstallation.Merge(m, src)
}
func (m *SyncInstallation) XXX_Size() int {
	return m.Size()
}
func (m *SyncInstallation) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncInstallation.DiscardUnknown(m)
}

var xxx_messageInfo_SyncInstallation proto.InternalMessageInfo

func (m *SyncInstallation) GetContacts() []*SyncInstallationContact {
	if m != nil {
		return m.Contacts
	}
	return nil
}

func (m *SyncInstallation) GetPublicChats() []*SyncInstallationPublicChat {
	if m != nil {
		return m.PublicChats
	}
	return nil
}

func (m *SyncInstallation) GetAccount() *SyncInstallationAccount {
	if m != nil {
		return m.Account
	}
	return nil
}

func (m *SyncInstallation) GetCommunities() []*SyncCommunity {
	if m != nil {
		return m.Communities
	}
	return nil
}

type SyncChatRemoved struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncChatRemoved) Reset()         { *m = SyncChatRemoved{} }
func (m *SyncChatRemoved) String() string { return proto.CompactTextString(m) }
func (*SyncChatRemoved) ProtoMessage()    {}
func (*SyncChatRemoved) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{9}
}
func (m *SyncChatRemoved) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncChatRemoved) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncChatRemoved.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncChatRemoved) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncChatRemoved.Merge(m, src)
}
func (m *SyncChatRemoved) XXX_Size() int {
	return m.Size()
}
func (m *SyncChatRemoved) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncChatRemoved.DiscardUnknown(m)
}

var xxx_messageInfo_SyncChatRemoved proto.InternalMessageInfo

func (m *SyncChatRemoved) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncChatRemoved) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SyncChatMessagesRead struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Id                   string   `protobuf:"bytes,2,opt,name=id,proto3" json:"id,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncChatMessagesRead) Reset()         { *m = SyncChatMessagesRead{} }
func (m *SyncChatMessagesRead) String() string { return proto.CompactTextString(m) }
func (*SyncChatMessagesRead) ProtoMessage()    {}
func (*SyncChatMessagesRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{10}
}
func (m *SyncChatMessagesRead) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncChatMessagesRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncChatMessagesRead.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncChatMessagesRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncChatMessagesRead.Merge(m, src)
}
func (m *SyncChatMessagesRead) XXX_Size() int {
	return m.Size()
}
func (m *SyncChatMessagesRead) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncChatMessagesRead.DiscardUnknown(m)
}

var xxx_messageInfo_SyncChatMessagesRead proto.InternalMessageInfo

func (m *SyncChatMessagesRead) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncChatMessagesRead) GetId() string {
	if m != nil {
		return m.Id
	}
	return ""
}

type SyncActivityCenterRead struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Ids                  [][]byte `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncActivityCenterRead) Reset()         { *m = SyncActivityCenterRead{} }
func (m *SyncActivityCenterRead) String() string { return proto.CompactTextString(m) }
func (*SyncActivityCenterRead) ProtoMessage()    {}
func (*SyncActivityCenterRead) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{11}
}
func (m *SyncActivityCenterRead) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncActivityCenterRead) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncActivityCenterRead.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncActivityCenterRead) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncActivityCenterRead.Merge(m, src)
}
func (m *SyncActivityCenterRead) XXX_Size() int {
	return m.Size()
}
func (m *SyncActivityCenterRead) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncActivityCenterRead.DiscardUnknown(m)
}

var xxx_messageInfo_SyncActivityCenterRead proto.InternalMessageInfo

func (m *SyncActivityCenterRead) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncActivityCenterRead) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

type SyncActivityCenterAccepted struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Ids                  [][]byte `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncActivityCenterAccepted) Reset()         { *m = SyncActivityCenterAccepted{} }
func (m *SyncActivityCenterAccepted) String() string { return proto.CompactTextString(m) }
func (*SyncActivityCenterAccepted) ProtoMessage()    {}
func (*SyncActivityCenterAccepted) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{12}
}
func (m *SyncActivityCenterAccepted) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncActivityCenterAccepted) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncActivityCenterAccepted.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncActivityCenterAccepted) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncActivityCenterAccepted.Merge(m, src)
}
func (m *SyncActivityCenterAccepted) XXX_Size() int {
	return m.Size()
}
func (m *SyncActivityCenterAccepted) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncActivityCenterAccepted.DiscardUnknown(m)
}

var xxx_messageInfo_SyncActivityCenterAccepted proto.InternalMessageInfo

func (m *SyncActivityCenterAccepted) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncActivityCenterAccepted) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

type SyncActivityCenterDismissed struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Ids                  [][]byte `protobuf:"bytes,2,rep,name=ids,proto3" json:"ids,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncActivityCenterDismissed) Reset()         { *m = SyncActivityCenterDismissed{} }
func (m *SyncActivityCenterDismissed) String() string { return proto.CompactTextString(m) }
func (*SyncActivityCenterDismissed) ProtoMessage()    {}
func (*SyncActivityCenterDismissed) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{13}
}
func (m *SyncActivityCenterDismissed) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncActivityCenterDismissed) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncActivityCenterDismissed.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncActivityCenterDismissed) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncActivityCenterDismissed.Merge(m, src)
}
func (m *SyncActivityCenterDismissed) XXX_Size() int {
	return m.Size()
}
func (m *SyncActivityCenterDismissed) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncActivityCenterDismissed.DiscardUnknown(m)
}

var xxx_messageInfo_SyncActivityCenterDismissed proto.InternalMessageInfo

func (m *SyncActivityCenterDismissed) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncActivityCenterDismissed) GetIds() [][]byte {
	if m != nil {
		return m.Ids
	}
	return nil
}

type SyncBookmark struct {
	Clock                uint64   `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	Url                  string   `protobuf:"bytes,2,opt,name=url,proto3" json:"url,omitempty"`
	Name                 string   `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`
	ImageUrl             string   `protobuf:"bytes,4,opt,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
	Removed              bool     `protobuf:"varint,5,opt,name=removed,proto3" json:"removed,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncBookmark) Reset()         { *m = SyncBookmark{} }
func (m *SyncBookmark) String() string { return proto.CompactTextString(m) }
func (*SyncBookmark) ProtoMessage()    {}
func (*SyncBookmark) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{14}
}
func (m *SyncBookmark) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncBookmark) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncBookmark.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncBookmark) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncBookmark.Merge(m, src)
}
func (m *SyncBookmark) XXX_Size() int {
	return m.Size()
}
func (m *SyncBookmark) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncBookmark.DiscardUnknown(m)
}

var xxx_messageInfo_SyncBookmark proto.InternalMessageInfo

func (m *SyncBookmark) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *SyncBookmark) GetUrl() string {
	if m != nil {
		return m.Url
	}
	return ""
}

func (m *SyncBookmark) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SyncBookmark) GetImageUrl() string {
	if m != nil {
		return m.ImageUrl
	}
	return ""
}

func (m *SyncBookmark) GetRemoved() bool {
	if m != nil {
		return m.Removed
	}
	return false
}

type SyncClearHistory struct {
	ChatId               string   `protobuf:"bytes,1,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	ClearedAt            uint64   `protobuf:"varint,2,opt,name=cleared_at,json=clearedAt,proto3" json:"cleared_at,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncClearHistory) Reset()         { *m = SyncClearHistory{} }
func (m *SyncClearHistory) String() string { return proto.CompactTextString(m) }
func (*SyncClearHistory) ProtoMessage()    {}
func (*SyncClearHistory) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{15}
}
func (m *SyncClearHistory) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncClearHistory) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncClearHistory.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncClearHistory) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncClearHistory.Merge(m, src)
}
func (m *SyncClearHistory) XXX_Size() int {
	return m.Size()
}
func (m *SyncClearHistory) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncClearHistory.DiscardUnknown(m)
}

var xxx_messageInfo_SyncClearHistory proto.InternalMessageInfo

func (m *SyncClearHistory) GetChatId() string {
	if m != nil {
		return m.ChatId
	}
	return ""
}

func (m *SyncClearHistory) GetClearedAt() uint64 {
	if m != nil {
		return m.ClearedAt
	}
	return 0
}

type SyncProfilePicture struct {
	Name                 string   `protobuf:"bytes,1,opt,name=name,proto3" json:"name,omitempty"`
	Payload              []byte   `protobuf:"bytes,2,opt,name=payload,proto3" json:"payload,omitempty"`
	Width                uint32   `protobuf:"varint,3,opt,name=width,proto3" json:"width,omitempty"`
	Height               uint32   `protobuf:"varint,4,opt,name=height,proto3" json:"height,omitempty"`
	FileSize             uint32   `protobuf:"varint,5,opt,name=file_size,json=fileSize,proto3" json:"file_size,omitempty"`
	ResizeTarget         uint32   `protobuf:"varint,6,opt,name=resize_target,json=resizeTarget,proto3" json:"resize_target,omitempty"`
	Clock                uint64   `protobuf:"varint,7,opt,name=clock,proto3" json:"clock,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *SyncProfilePicture) Reset()         { *m = SyncProfilePicture{} }
func (m *SyncProfilePicture) String() string { return proto.CompactTextString(m) }
func (*SyncProfilePicture) ProtoMessage()    {}
func (*SyncProfilePicture) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{16}
}
func (m *SyncProfilePicture) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncProfilePicture) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncProfilePicture.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncProfilePicture) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncProfilePicture.Merge(m, src)
}
func (m *SyncProfilePicture) XXX_Size() int {
	return m.Size()
}
func (m *SyncProfilePicture) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncProfilePicture.DiscardUnknown(m)
}

var xxx_messageInfo_SyncProfilePicture proto.InternalMessageInfo

func (m *SyncProfilePicture) GetName() string {
	if m != nil {
		return m.Name
	}
	return ""
}

func (m *SyncProfilePicture) GetPayload() []byte {
	if m != nil {
		return m.Payload
	}
	return nil
}

func (m *SyncProfilePicture) GetWidth() uint32 {
	if m != nil {
		return m.Width
	}
	return 0
}

func (m *SyncProfilePicture) GetHeight() uint32 {
	if m != nil {
		return m.Height
	}
	return 0
}

func (m *SyncProfilePicture) GetFileSize() uint32 {
	if m != nil {
		return m.FileSize
	}
	return 0
}

func (m *SyncProfilePicture) GetResizeTarget() uint32 {
	if m != nil {
		return m.ResizeTarget
	}
	return 0
}

func (m *SyncProfilePicture) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

type SyncProfilePictures struct {
	KeyUid               string                `protobuf:"bytes,1,opt,name=key_uid,json=keyUid,proto3" json:"key_uid,omitempty"`
	Pictures             []*SyncProfilePicture `protobuf:"bytes,2,rep,name=pictures,proto3" json:"pictures,omitempty"`
	XXX_NoUnkeyedLiteral struct{}              `json:"-"`
	XXX_unrecognized     []byte                `json:"-"`
	XXX_sizecache        int32                 `json:"-"`
}

func (m *SyncProfilePictures) Reset()         { *m = SyncProfilePictures{} }
func (m *SyncProfilePictures) String() string { return proto.CompactTextString(m) }
func (*SyncProfilePictures) ProtoMessage()    {}
func (*SyncProfilePictures) Descriptor() ([]byte, []int) {
	return fileDescriptor_d61ab7221f0b5518, []int{17}
}
func (m *SyncProfilePictures) XXX_Unmarshal(b []byte) error {
	return m.Unmarshal(b)
}
func (m *SyncProfilePictures) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	if deterministic {
		return xxx_messageInfo_SyncProfilePictures.Marshal(b, m, deterministic)
	} else {
		b = b[:cap(b)]
		n, err := m.MarshalToSizedBuffer(b)
		if err != nil {
			return nil, err
		}
		return b[:n], nil
	}
}
func (m *SyncProfilePictures) XXX_Merge(src proto.Message) {
	xxx_messageInfo_SyncProfilePictures.Merge(m, src)
}
func (m *SyncProfilePictures) XXX_Size() int {
	return m.Size()
}
func (m *SyncProfilePictures) XXX_DiscardUnknown() {
	xxx_messageInfo_SyncProfilePictures.DiscardUnknown(m)
}

var xxx_messageInfo_SyncProfilePictures proto.InternalMessageInfo

func (m *SyncProfilePictures) GetKeyUid() string {
	if m != nil {
		return m.KeyUid
	}
	return ""
}

func (m *SyncProfilePictures) GetPictures() []*SyncProfilePicture {
	if m != nil {
		return m.Pictures
	}
	return nil
}

func init() {
	proto.RegisterType((*Backup)(nil), "protobuf.Backup")
	proto.RegisterType((*PairInstallation)(nil), "protobuf.PairInstallation")
	proto.RegisterType((*SyncInstallationContact)(nil), "protobuf.SyncInstallationContact")
	proto.RegisterType((*SyncInstallationContactV2)(nil), "protobuf.SyncInstallationContactV2")
	proto.RegisterType((*SyncInstallationAccount)(nil), "protobuf.SyncInstallationAccount")
	proto.RegisterType((*SyncInstallationPublicChat)(nil), "protobuf.SyncInstallationPublicChat")
	proto.RegisterType((*SyncCommunity)(nil), "protobuf.SyncCommunity")
	proto.RegisterType((*SyncCommunityRequestsToJoin)(nil), "protobuf.SyncCommunityRequestsToJoin")
	proto.RegisterType((*SyncInstallation)(nil), "protobuf.SyncInstallation")
	proto.RegisterType((*SyncChatRemoved)(nil), "protobuf.SyncChatRemoved")
	proto.RegisterType((*SyncChatMessagesRead)(nil), "protobuf.SyncChatMessagesRead")
	proto.RegisterType((*SyncActivityCenterRead)(nil), "protobuf.SyncActivityCenterRead")
	proto.RegisterType((*SyncActivityCenterAccepted)(nil), "protobuf.SyncActivityCenterAccepted")
	proto.RegisterType((*SyncActivityCenterDismissed)(nil), "protobuf.SyncActivityCenterDismissed")
	proto.RegisterType((*SyncBookmark)(nil), "protobuf.SyncBookmark")
	proto.RegisterType((*SyncClearHistory)(nil), "protobuf.SyncClearHistory")
	proto.RegisterType((*SyncProfilePicture)(nil), "protobuf.SyncProfilePicture")
	proto.RegisterType((*SyncProfilePictures)(nil), "protobuf.SyncProfilePictures")
}

func init() { proto.RegisterFile("pairing.proto", fileDescriptor_d61ab7221f0b5518) }

var fileDescriptor_d61ab7221f0b5518 = []byte{
	// 1055 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xd4, 0x56, 0xcd, 0x72, 0x1b, 0x45,
	0x10, 0x66, 0x25, 0x59, 0x5a, 0xb5, 0x56, 0x8e, 0x6b, 0x70, 0xc5, 0x9b, 0x04, 0x3b, 0xca, 0x86,
	0x14, 0x3e, 0x19, 0x2a, 0x1c, 0x80, 0x0a, 0x14, 0xc8, 0x0a, 0x05, 0x0a, 0x10, 0x5c, 0x13, 0x9b,
	0x03, 0x97, 0xad, 0xf1, 0xec, 0x58, 0x1a, 0xb4, 0x7f, 0xec, 0xcc, 0x2a, 0xb5, 0xb9, 0x71, 0xe1,
	0xc0, 0x11, 0x2e, 0x3c, 0x03, 0x4f, 0x92, 0x1b, 0x3c, 0x02, 0x65, 0x6e, 0x3c, 0x05, 0x35, 0x33,
	0x2b, 0x69, 0x65, 0x23, 0x5b, 0x14, 0xa7, 0x9c, 0xb4, 0xfd, 0x4d, 0x77, 0x4f, 0xf7, 0x37, 0xfd,
	0x23, 0xe8, 0xa6, 0x84, 0x67, 0x3c, 0x1e, 0x1d, 0xa4, 0x59, 0x22, 0x13, 0x64, 0xeb, 0x9f, 0xd3,
	0xfc, 0xcc, 0xfb, 0xcd, 0x82, 0xe6, 0x21, 0xa1, 0x93, 0x3c, 0x45, 0xdb, 0xb0, 0x41, 0xc3, 0x84,
	0x4e, 0x5c, 0xab, 0x67, 0xed, 0x37, 0xb0, 0x11, 0xd0, 0x26, 0xd4, 0x78, 0xe0, 0xd6, 0x7a, 0xd6,
	0x7e, 0x1b, 0xd7, 0x78, 0x80, 0x3e, 0x06, 0x9b, 0x26, 0xb1, 0x24, 0x54, 0x0a, 0xb7, 0xde, 0xab,
	0xef, 0x77, 0x1e, 0xde, 0x3f, 0x98, 0x79, 0x3b, 0x78, 0x56, 0xc4, 0x74, 0x18, 0x0b, 0x49, 0xc2,
	0x90, 0x48, 0x9e, 0xc4, 0x03, 0xa3, 0xf9, 0xcd, 0x43, 0x3c, 0x37, 0x42, 0x1f, 0x40, 0x87, 0x26,
	0x51, 0x94, 0xc7, 0x5c, 0x72, 0x26, 0xdc, 0x86, 0xf6, 0xb1, 0xb3, 0xec, 0x63, 0x50, 0x2a, 0x14,
	0xb8, 0xaa, 0xeb, 0xfd, 0x68, 0xc1, 0xd6, 0x11, 0xe1, 0x59, 0xf5, 0x8a, 0x15, 0x61, 0xbf, 0x05,
	0x37, 0x78, 0x45, 0xcb, 0x9f, 0xe7, 0xb0, 0x59, 0x85, 0x87, 0x01, 0xba, 0x0b, 0x9d, 0x80, 0x4d,
	0x39, 0x65, 0xbe, 0x2c, 0x52, 0xe6, 0xd6, 0xb5, 0x12, 0x18, 0xe8, 0xb8, 0x48, 0x19, 0x42, 0xd0,
	0x88, 0x49, 0xc4, 0xdc, 0x86, 0x3e, 0xd1, 0xdf, 0xde, 0xdf, 0x16, 0xec, 0xac, 0xc8, 0x75, 0x4d,
	0x1a, 0xef, 0x43, 0x37, 0xcd, 0x92, 0x33, 0x1e, 0x32, 0x9f, 0x47, 0x64, 0x34, 0xbb, 0xd8, 0x29,
	0xc1, 0xa1, 0xc2, 0xd0, 0x2d, 0xb0, 0x59, 0x2c, 0xfc, 0xca, 0xf5, 0x2d, 0x16, 0x8b, 0xa7, 0x24,
	0x62, 0xe8, 0x1e, 0x38, 0x21, 0x11, 0xd2, 0xcf, 0xd3, 0x80, 0x48, 0x16, 0xb8, 0x1b, 0xfa, 0xb2,
	0x8e, 0xc2, 0x4e, 0x0c, 0xa4, 0x32, 0x13, 0x85, 0x90, 0x2c, 0xf2, 0x25, 0x19, 0x09, 0xb7, 0xd9,
	0xab, 0xab, 0xcc, 0x0c, 0x74, 0x4c, 0x46, 0x02, 0x3d, 0x80, 0xcd, 0x30, 0xa1, 0x24, 0xf4, 0x63,
	0x4e, 0x27, 0xfa, 0x92, 0x96, 0xbe, 0xa4, 0xab, 0xd1, 0xa7, 0x25, 0xe8, 0xfd, 0x54, 0x87, 0x5b,
	0x2b, 0x1f, 0x16, 0xbd, 0x03, 0xdb, 0xd5, 0x40, 0x7c, 0x6d, 0x1b, 0x16, 0x65, 0xf6, 0xa8, 0x12,
	0xd0, 0x97, 0xe6, 0xe4, 0x15, 0xa6, 0x42, 0xbd, 0x2d, 0x09, 0x02, 0x16, 0xb8, 0xed, 0x9e, 0xb5,
	0x6f, 0x63, 0x23, 0x20, 0x17, 0x5a, 0xa7, 0xea, 0x91, 0x59, 0xe0, 0x82, 0xc6, 0x67, 0xa2, 0xd2,
	0x8f, 0x72, 0x15, 0x53, 0xc7, 0xe8, 0x6b, 0x41, 0xe9, 0x67, 0x2c, 0x4a, 0xa6, 0x2c, 0x70, 0x1d,
	0xa3, 0x5f, 0x8a, 0xa8, 0x07, 0xce, 0x98, 0x08, 0x5f, 0xbb, 0xf5, 0x73, 0xe1, 0x76, 0xf5, 0x31,
	0x8c, 0x89, 0xe8, 0x2b, 0xe8, 0x44, 0x78, 0xcf, 0x2f, 0x17, 0x5e, 0x9f, 0xd2, 0x24, 0x8f, 0x57,
	0x15, 0xde, 0x25, 0x76, 0x6b, 0xff, 0xc2, 0xee, 0x45, 0x0a, 0xeb, 0x97, 0x28, 0xf4, 0x0e, 0xe1,
	0xf6, 0xc5, 0x8b, 0x8f, 0xf2, 0xd3, 0x90, 0xd3, 0xc1, 0x98, 0xac, 0x59, 0xf4, 0xde, 0x2f, 0x35,
	0xe8, 0x2e, 0xb5, 0xf7, 0xb5, 0x76, 0x8e, 0xae, 0x90, 0xbb, 0xd0, 0x49, 0x33, 0x3e, 0x25, 0x92,
	0xf9, 0x13, 0x56, 0xe8, 0xe8, 0x1c, 0x0c, 0x25, 0xf4, 0x05, 0x2b, 0x50, 0x4f, 0x35, 0xb1, 0xa0,
	0x19, 0x4f, 0x55, 0x5c, 0xba, 0x40, 0x1c, 0x5c, 0x85, 0xd0, 0x4d, 0x68, 0x7e, 0x97, 0xf0, 0xb8,
	0x2c, 0x0f, 0x1b, 0x97, 0x12, 0xba, 0x0d, 0xf6, 0x94, 0x65, 0xfc, 0x8c, 0xb3, 0xc0, 0x6d, 0xea,
	0x93, 0xb9, 0xbc, 0x78, 0xbd, 0x56, 0xf5, 0xf5, 0xbe, 0x86, 0xad, 0x8c, 0x7d, 0x9f, 0x33, 0x21,
	0x85, 0x2f, 0x13, 0x5f, 0xf9, 0x71, 0x6d, 0x3d, 0xc4, 0x1e, 0xac, 0x1a, 0x62, 0xa5, 0xfa, 0x71,
	0xf2, 0x24, 0xe1, 0x31, 0xde, 0xcc, 0x96, 0x64, 0xef, 0x77, 0x0b, 0xee, 0x5c, 0xa1, 0x5f, 0xb2,
	0x61, 0xcd, 0xd9, 0xd8, 0x05, 0x48, 0x35, 0xf3, 0x9a, 0x0c, 0xc3, 0x6e, 0xdb, 0x20, 0x8a, 0x8b,
	0x39, 0xa5, 0xf5, 0x2a, 0xa5, 0x57, 0xf4, 0xcf, 0x0e, 0xb4, 0xe8, 0x98, 0x48, 0x35, 0x22, 0x37,
	0xf4, 0x49, 0x53, 0x89, 0xc3, 0x40, 0x55, 0xc5, 0x6c, 0xfa, 0x16, 0xea, 0xb4, 0x69, 0x68, 0x9d,
	0x63, 0x43, 0x4d, 0x91, 0x90, 0x44, 0x9a, 0x76, 0x69, 0x60, 0x23, 0x78, 0x3f, 0xd7, 0x60, 0xeb,
	0x62, 0xb1, 0xa0, 0x8f, 0x2a, 0x8b, 0xc3, 0xd2, 0x7c, 0xdd, 0xbb, 0x76, 0x71, 0x54, 0xd6, 0xc6,
	0x67, 0xe0, 0x94, 0x59, 0xab, 0xe8, 0x84, 0x5b, 0xd3, 0x2e, 0xde, 0x5c, 0xed, 0x62, 0x51, 0x9d,
	0xb8, 0x93, 0xce, 0xbf, 0x05, 0x7a, 0x04, 0x2d, 0x62, 0x3a, 0x46, 0x33, 0x74, 0x65, 0x18, 0x65,
	0x6b, 0xe1, 0x99, 0xc5, 0xff, 0x59, 0x5e, 0xef, 0xc1, 0x0d, 0x7d, 0xaa, 0x02, 0x2a, 0xdb, 0x7d,
	0xbd, 0xae, 0xf9, 0x10, 0xb6, 0x67, 0x86, 0x5f, 0x31, 0x21, 0xc8, 0x88, 0x09, 0xcc, 0xc8, 0xba,
	0xd6, 0x9f, 0xc0, 0x4d, 0x65, 0xdd, 0xa7, 0x92, 0x4f, 0xb9, 0x2c, 0x06, 0x2c, 0x96, 0x2c, 0xbb,
	0xc2, 0x7e, 0x0b, 0xea, 0x3c, 0x30, 0xf4, 0x3a, 0x58, 0x7d, 0x7a, 0x8f, 0x4d, 0xe7, 0x2f, 0x7b,
	0xe8, 0x53, 0xca, 0x52, 0xc9, 0xd6, 0xf7, 0xf2, 0xa9, 0x29, 0xf2, 0x65, 0x2f, 0x8f, 0xb9, 0x88,
	0xb8, 0x10, 0xff, 0xc1, 0xcd, 0x0f, 0x16, 0x38, 0xca, 0xcf, 0x61, 0x92, 0x4c, 0x22, 0x92, 0x4d,
	0x56, 0x1b, 0xe6, 0x59, 0x58, 0xd2, 0xa0, 0x3e, 0xe7, 0x6b, 0xbc, 0xbe, 0x58, 0xe3, 0xe8, 0x0e,
	0xb4, 0xf5, 0x4c, 0xf4, 0x95, 0xae, 0xe9, 0x0a, 0x5b, 0x03, 0x27, 0x59, 0x58, 0x9d, 0xd2, 0x1b,
	0x4b, 0x53, 0xda, 0x7b, 0x62, 0xaa, 0x7b, 0x10, 0x32, 0x92, 0x7d, 0xce, 0x85, 0x4c, 0xb2, 0xa2,
	0xda, 0x44, 0xd6, 0x52, 0x13, 0xed, 0x02, 0x50, 0xa5, 0xc8, 0x02, 0x9f, 0x48, 0x1d, 0x50, 0x03,
	0xb7, 0x4b, 0xa4, 0x2f, 0xbd, 0x97, 0x16, 0x20, 0xe5, 0xec, 0xc8, 0x8c, 0xe3, 0x23, 0x4e, 0x65,
	0x9e, 0x2d, 0xfe, 0x74, 0x58, 0x95, 0x68, 0x5d, 0x68, 0xa5, 0xa4, 0x08, 0x13, 0x32, 0x1b, 0x8d,
	0x33, 0x51, 0x71, 0xf0, 0x9c, 0x07, 0x72, 0xac, 0x93, 0xeb, 0x62, 0x23, 0xa8, 0x91, 0x37, 0x66,
	0x7c, 0x34, 0x96, 0x3a, 0xb5, 0x2e, 0x2e, 0x25, 0x95, 0xb5, 0x5e, 0x07, 0x82, 0xbf, 0x60, 0x3a,
	0xb5, 0x2e, 0xb6, 0x15, 0xf0, 0x8c, 0xbf, 0x60, 0x6a, 0x5d, 0x64, 0x4c, 0x9d, 0xf8, 0x92, 0x64,
	0x23, 0x26, 0x75, 0xd3, 0x77, 0xb1, 0x63, 0xc0, 0x63, 0x8d, 0x2d, 0x38, 0x6f, 0x55, 0x38, 0xf7,
	0xc6, 0xf0, 0xfa, 0xe5, 0x4c, 0x84, 0x62, 0x66, 0xc2, 0x0a, 0x3f, 0x5f, 0x30, 0x33, 0x61, 0xc5,
	0x09, 0x0f, 0xd0, 0xfb, 0x60, 0xa7, 0xa5, 0x52, 0xd9, 0xcd, 0x6f, 0x2c, 0x37, 0xd2, 0xb2, 0x27,
	0x3c, 0xd7, 0x3e, 0xdc, 0x7d, 0x79, 0xbe, 0x67, 0xfd, 0x71, 0xbe, 0x67, 0xfd, 0x79, 0xbe, 0x67,
	0xfd, 0xfa, 0xd7, 0xde, 0x6b, 0xdf, 0x76, 0x0e, 0xde, 0x7e, 0x34, 0xb3, 0x3d, 0x6d, 0xea, 0xaf,
	0x77, 0xff, 0x09, 0x00, 0x00, 0xff, 0xff, 0xbe, 0xe1, 0x16, 0x6b, 0xf5, 0x0a, 0x00, 0x00,
}

func (m *Backup) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *Backup) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *Backup) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Communities) > 0 {
		for iNdEx := len(m.Communities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Communities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPairing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if len(m.Contacts) > 0 {
		for iNdEx := len(m.Contacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Contacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPairing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x1a
		}
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *PairInstallation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *PairInstallation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *PairInstallation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.DeviceType) > 0 {
		i -= len(m.DeviceType)
		copy(dAtA[i:], m.DeviceType)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.DeviceType)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.InstallationId) > 0 {
		i -= len(m.InstallationId)
		copy(dAtA[i:], m.InstallationId)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.InstallationId)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncInstallationContact) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncInstallationContact) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncInstallationContact) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.LocalNickname) > 0 {
		i -= len(m.LocalNickname)
		copy(dAtA[i:], m.LocalNickname)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.LocalNickname)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SystemTags) > 0 {
		for iNdEx := len(m.SystemTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SystemTags[iNdEx])
			copy(dAtA[i:], m.SystemTags[iNdEx])
			i = encodeVarintPairing(dAtA, i, uint64(len(m.SystemTags[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if m.LastUpdated != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x28
	}
	if len(m.EnsName) > 0 {
		i -= len(m.EnsName)
		copy(dAtA[i:], m.EnsName)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.EnsName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ProfileImage) > 0 {
		i -= len(m.ProfileImage)
		copy(dAtA[i:], m.ProfileImage)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.ProfileImage)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncInstallationContactV2) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncInstallationContactV2) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncInstallationContactV2) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.HasAddedUs {
		i--
		if m.HasAddedUs {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x68
	}
	if m.Removed {
		i--
		if m.Removed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x60
	}
	if m.Muted {
		i--
		if m.Muted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x58
	}
	if m.Blocked {
		i--
		if m.Blocked {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x50
	}
	if m.Added {
		i--
		if m.Added {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x48
	}
	if len(m.LocalNickname) > 0 {
		i -= len(m.LocalNickname)
		copy(dAtA[i:], m.LocalNickname)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.LocalNickname)))
		i--
		dAtA[i] = 0x3a
	}
	if len(m.SystemTags) > 0 {
		for iNdEx := len(m.SystemTags) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.SystemTags[iNdEx])
			copy(dAtA[i:], m.SystemTags[iNdEx])
			i = encodeVarintPairing(dAtA, i, uint64(len(m.SystemTags[iNdEx])))
			i--
			dAtA[i] = 0x32
		}
	}
	if m.LastUpdated != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x28
	}
	if len(m.EnsName) > 0 {
		i -= len(m.EnsName)
		copy(dAtA[i:], m.EnsName)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.EnsName)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.ProfileImage) > 0 {
		i -= len(m.ProfileImage)
		copy(dAtA[i:], m.ProfileImage)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.ProfileImage)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.LastUpdatedLocally != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.LastUpdatedLocally))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncInstallationAccount) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncInstallationAccount) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncInstallationAccount) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.LastUpdated != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.LastUpdated))
		i--
		dAtA[i] = 0x18
	}
	if len(m.ProfileImage) > 0 {
		i -= len(m.ProfileImage)
		copy(dAtA[i:], m.ProfileImage)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.ProfileImage)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncInstallationPublicChat) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncInstallationPublicChat) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncInstallationPublicChat) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncCommunity) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncCommunity) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncCommunity) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.RequestsToJoin) > 0 {
		for iNdEx := len(m.RequestsToJoin) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.RequestsToJoin[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPairing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x42
		}
	}
	if m.Muted {
		i--
		if m.Muted {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x38
	}
	if m.Verified {
		i--
		if m.Verified {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x30
	}
	if m.Joined {
		i--
		if m.Joined {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.Description) > 0 {
		i -= len(m.Description)
		copy(dAtA[i:], m.Description)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Description)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.PrivateKey) > 0 {
		i -= len(m.PrivateKey)
		copy(dAtA[i:], m.PrivateKey)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.PrivateKey)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncCommunityRequestsToJoin) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncCommunityRequestsToJoin) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncCommunityRequestsToJoin) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.State != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.State))
		i--
		dAtA[i] = 0x38
	}
	if len(m.CommunityId) > 0 {
		i -= len(m.CommunityId)
		copy(dAtA[i:], m.CommunityId)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.CommunityId)))
		i--
		dAtA[i] = 0x32
	}
	if len(m.ChatId) > 0 {
		i -= len(m.ChatId)
		copy(dAtA[i:], m.ChatId)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.ChatId)))
		i--
		dAtA[i] = 0x2a
	}
	if len(m.EnsName) > 0 {
		i -= len(m.EnsName)
		copy(dAtA[i:], m.EnsName)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.EnsName)))
		i--
		dAtA[i] = 0x22
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x18
	}
	if len(m.PublicKey) > 0 {
		i -= len(m.PublicKey)
		copy(dAtA[i:], m.PublicKey)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.PublicKey)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SyncInstallation) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncInstallation) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncInstallation) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Communities) > 0 {
		for iNdEx := len(m.Communities) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Communities[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPairing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x22
		}
	}
	if m.Account != nil {
		{
			size, err := m.Account.MarshalToSizedBuffer(dAtA[:i])
			if err != nil {
				return 0, err
			}
			i -= size
			i = encodeVarintPairing(dAtA, i, uint64(size))
		}
		i--
		dAtA[i] = 0x1a
	}
	if len(m.PublicChats) > 0 {
		for iNdEx := len(m.PublicChats) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.PublicChats[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPairing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.Contacts) > 0 {
		for iNdEx := len(m.Contacts) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Contacts[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPairing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0xa
		}
	}
	return len(dAtA) - i, nil
}

func (m *SyncChatRemoved) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncChatRemoved) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncChatRemoved) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncChatMessagesRead) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncChatMessagesRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncChatMessagesRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Id) > 0 {
		i -= len(m.Id)
		copy(dAtA[i:], m.Id)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Id)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncActivityCenterRead) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncActivityCenterRead) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncActivityCenterRead) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ids) > 0 {
		for iNdEx := len(m.Ids) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Ids[iNdEx])
			copy(dAtA[i:], m.Ids[iNdEx])
			i = encodeVarintPairing(dAtA, i, uint64(len(m.Ids[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncActivityCenterAccepted) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncActivityCenterAccepted) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncActivityCenterAccepted) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ids) > 0 {
		for iNdEx := len(m.Ids) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Ids[iNdEx])
			copy(dAtA[i:], m.Ids[iNdEx])
			i = encodeVarintPairing(dAtA, i, uint64(len(m.Ids[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncActivityCenterDismissed) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncActivityCenterDismissed) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncActivityCenterDismissed) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Ids) > 0 {
		for iNdEx := len(m.Ids) - 1; iNdEx >= 0; iNdEx-- {
			i -= len(m.Ids[iNdEx])
			copy(dAtA[i:], m.Ids[iNdEx])
			i = encodeVarintPairing(dAtA, i, uint64(len(m.Ids[iNdEx])))
			i--
			dAtA[i] = 0x12
		}
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncBookmark) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncBookmark) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncBookmark) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Removed {
		i--
		if m.Removed {
			dAtA[i] = 1
		} else {
			dAtA[i] = 0
		}
		i--
		dAtA[i] = 0x28
	}
	if len(m.ImageUrl) > 0 {
		i -= len(m.ImageUrl)
		copy(dAtA[i:], m.ImageUrl)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.ImageUrl)))
		i--
		dAtA[i] = 0x22
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0x1a
	}
	if len(m.Url) > 0 {
		i -= len(m.Url)
		copy(dAtA[i:], m.Url)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Url)))
		i--
		dAtA[i] = 0x12
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x8
	}
	return len(dAtA) - i, nil
}

func (m *SyncClearHistory) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncClearHistory) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncClearHistory) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.ClearedAt != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.ClearedAt))
		i--
		dAtA[i] = 0x10
	}
	if len(m.ChatId) > 0 {
		i -= len(m.ChatId)
		copy(dAtA[i:], m.ChatId)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.ChatId)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SyncProfilePicture) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncProfilePicture) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncProfilePicture) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if m.Clock != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Clock))
		i--
		dAtA[i] = 0x38
	}
	if m.ResizeTarget != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.ResizeTarget))
		i--
		dAtA[i] = 0x30
	}
	if m.FileSize != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.FileSize))
		i--
		dAtA[i] = 0x28
	}
	if m.Height != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Height))
		i--
		dAtA[i] = 0x20
	}
	if m.Width != 0 {
		i = encodeVarintPairing(dAtA, i, uint64(m.Width))
		i--
		dAtA[i] = 0x18
	}
	if len(m.Payload) > 0 {
		i -= len(m.Payload)
		copy(dAtA[i:], m.Payload)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Payload)))
		i--
		dAtA[i] = 0x12
	}
	if len(m.Name) > 0 {
		i -= len(m.Name)
		copy(dAtA[i:], m.Name)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.Name)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func (m *SyncProfilePictures) Marshal() (dAtA []byte, err error) {
	size := m.Size()
	dAtA = make([]byte, size)
	n, err := m.MarshalToSizedBuffer(dAtA[:size])
	if err != nil {
		return nil, err
	}
	return dAtA[:n], nil
}

func (m *SyncProfilePictures) MarshalTo(dAtA []byte) (int, error) {
	size := m.Size()
	return m.MarshalToSizedBuffer(dAtA[:size])
}

func (m *SyncProfilePictures) MarshalToSizedBuffer(dAtA []byte) (int, error) {
	i := len(dAtA)
	_ = i
	var l int
	_ = l
	if m.XXX_unrecognized != nil {
		i -= len(m.XXX_unrecognized)
		copy(dAtA[i:], m.XXX_unrecognized)
	}
	if len(m.Pictures) > 0 {
		for iNdEx := len(m.Pictures) - 1; iNdEx >= 0; iNdEx-- {
			{
				size, err := m.Pictures[iNdEx].MarshalToSizedBuffer(dAtA[:i])
				if err != nil {
					return 0, err
				}
				i -= size
				i = encodeVarintPairing(dAtA, i, uint64(size))
			}
			i--
			dAtA[i] = 0x12
		}
	}
	if len(m.KeyUid) > 0 {
		i -= len(m.KeyUid)
		copy(dAtA[i:], m.KeyUid)
		i = encodeVarintPairing(dAtA, i, uint64(len(m.KeyUid)))
		i--
		dAtA[i] = 0xa
	}
	return len(dAtA) - i, nil
}

func encodeVarintPairing(dAtA []byte, offset int, v uint64) int {
	offset -= sovPairing(v)
	base := offset
	for v >= 1<<7 {
		dAtA[offset] = uint8(v&0x7f | 0x80)
		v >>= 7
		offset++
	}
	dAtA[offset] = uint8(v)
	return base
}
func (m *Backup) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if len(m.Contacts) > 0 {
		for _, e := range m.Contacts {
			l = e.Size()
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if len(m.Communities) > 0 {
		for _, e := range m.Communities {
			l = e.Size()
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *PairInstallation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.InstallationId)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.DeviceType)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncInstallationContact) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.ProfileImage)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.EnsName)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.LastUpdated != 0 {
		n += 1 + sovPairing(uint64(m.LastUpdated))
	}
	if len(m.SystemTags) > 0 {
		for _, s := range m.SystemTags {
			l = len(s)
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	l = len(m.LocalNickname)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncInstallationContactV2) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.LastUpdatedLocally != 0 {
		n += 1 + sovPairing(uint64(m.LastUpdatedLocally))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.ProfileImage)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.EnsName)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.LastUpdated != 0 {
		n += 1 + sovPairing(uint64(m.LastUpdated))
	}
	if len(m.SystemTags) > 0 {
		for _, s := range m.SystemTags {
			l = len(s)
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	l = len(m.LocalNickname)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.Added {
		n += 2
	}
	if m.Blocked {
		n += 2
	}
	if m.Muted {
		n += 2
	}
	if m.Removed {
		n += 2
	}
	if m.HasAddedUs {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncInstallationAccount) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.ProfileImage)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.LastUpdated != 0 {
		n += 1 + sovPairing(uint64(m.LastUpdated))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncInstallationPublicChat) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncCommunity) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.PrivateKey)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.Description)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.Joined {
		n += 2
	}
	if m.Verified {
		n += 2
	}
	if m.Muted {
		n += 2
	}
	if len(m.RequestsToJoin) > 0 {
		for _, e := range m.RequestsToJoin {
			l = e.Size()
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncCommunityRequestsToJoin) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.PublicKey)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.EnsName)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.ChatId)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.CommunityId)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.State != 0 {
		n += 1 + sovPairing(uint64(m.State))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncInstallation) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if len(m.Contacts) > 0 {
		for _, e := range m.Contacts {
			l = e.Size()
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if len(m.PublicChats) > 0 {
		for _, e := range m.PublicChats {
			l = e.Size()
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.Account != nil {
		l = m.Account.Size()
		n += 1 + l + sovPairing(uint64(l))
	}
	if len(m.Communities) > 0 {
		for _, e := range m.Communities {
			l = e.Size()
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncChatRemoved) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncChatMessagesRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.Id)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncActivityCenterRead) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	if len(m.Ids) > 0 {
		for _, b := range m.Ids {
			l = len(b)
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncActivityCenterAccepted) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	if len(m.Ids) > 0 {
		for _, b := range m.Ids {
			l = len(b)
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncActivityCenterDismissed) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	if len(m.Ids) > 0 {
		for _, b := range m.Ids {
			l = len(b)
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncBookmark) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	l = len(m.Url)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.ImageUrl)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.Removed {
		n += 2
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncClearHistory) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.ChatId)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.ClearedAt != 0 {
		n += 1 + sovPairing(uint64(m.ClearedAt))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncProfilePicture) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.Name)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	l = len(m.Payload)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if m.Width != 0 {
		n += 1 + sovPairing(uint64(m.Width))
	}
	if m.Height != 0 {
		n += 1 + sovPairing(uint64(m.Height))
	}
	if m.FileSize != 0 {
		n += 1 + sovPairing(uint64(m.FileSize))
	}
	if m.ResizeTarget != 0 {
		n += 1 + sovPairing(uint64(m.ResizeTarget))
	}
	if m.Clock != 0 {
		n += 1 + sovPairing(uint64(m.Clock))
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func (m *SyncProfilePictures) Size() (n int) {
	if m == nil {
		return 0
	}
	var l int
	_ = l
	l = len(m.KeyUid)
	if l > 0 {
		n += 1 + l + sovPairing(uint64(l))
	}
	if len(m.Pictures) > 0 {
		for _, e := range m.Pictures {
			l = e.Size()
			n += 1 + l + sovPairing(uint64(l))
		}
	}
	if m.XXX_unrecognized != nil {
		n += len(m.XXX_unrecognized)
	}
	return n
}

func sovPairing(x uint64) (n int) {
	return (math_bits.Len64(x|1) + 6) / 7
}
func sozPairing(x uint64) (n int) {
	return sovPairing(uint64((x << 1) ^ uint64((int64(x) >> 63))))
}
func (m *Backup) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: Backup: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: Backup: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contacts = append(m.Contacts, &SyncInstallationContactV2{})
			if err := m.Contacts[len(m.Contacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Communities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Communities = append(m.Communities, &SyncCommunity{})
			if err := m.Communities[len(m.Communities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *PairInstallation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: PairInstallation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: PairInstallation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field InstallationId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.InstallationId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field DeviceType", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.DeviceType = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncInstallationContact) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncInstallationContact: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncInstallationContact: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfileImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfileImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnsName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnsName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemTags = append(m.SystemTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalNickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalNickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncInstallationContactV2) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncInstallationContactV2: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncInstallationContactV2: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdatedLocally", wireType)
			}
			m.LastUpdatedLocally = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdatedLocally |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfileImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfileImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnsName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnsName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field SystemTags", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.SystemTags = append(m.SystemTags, string(dAtA[iNdEx:postIndex]))
			iNdEx = postIndex
		case 7:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field LocalNickname", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.LocalNickname = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 9:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Added", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Added = bool(v != 0)
		case 10:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Blocked", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Blocked = bool(v != 0)
		case 11:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Muted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Muted = bool(v != 0)
		case 12:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Removed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Removed = bool(v != 0)
		case 13:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field HasAddedUs", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.HasAddedUs = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncInstallationAccount) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncInstallationAccount: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncInstallationAccount: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ProfileImage", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ProfileImage = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field LastUpdated", wireType)
			}
			m.LastUpdated = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.LastUpdated |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncInstallationPublicChat) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncInstallationPublicChat: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncInstallationPublicChat: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncCommunity) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncCommunity: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncCommunity: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id[:0], dAtA[iNdEx:postIndex]...)
			if m.Id == nil {
				m.Id = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PrivateKey", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PrivateKey = append(m.PrivateKey[:0], dAtA[iNdEx:postIndex]...)
			if m.PrivateKey == nil {
				m.PrivateKey = []byte{}
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Description", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Description = append(m.Description[:0], dAtA[iNdEx:postIndex]...)
			if m.Description == nil {
				m.Description = []byte{}
			}
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Joined", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Joined = bool(v != 0)
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Verified", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Verified = bool(v != 0)
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Muted", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Muted = bool(v != 0)
		case 8:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field RequestsToJoin", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.RequestsToJoin = append(m.RequestsToJoin, &SyncCommunityRequestsToJoin{})
			if err := m.RequestsToJoin[len(m.RequestsToJoin)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncCommunityRequestsToJoin) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncCommunityRequestsToJoin: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncCommunityRequestsToJoin: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = append(m.Id[:0], dAtA[iNdEx:postIndex]...)
			if m.Id == nil {
				m.Id = []byte{}
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicKey", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicKey = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field EnsName", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.EnsName = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 6:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field CommunityId", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.CommunityId = append(m.CommunityId[:0], dAtA[iNdEx:postIndex]...)
			if m.CommunityId == nil {
				m.CommunityId = []byte{}
			}
			iNdEx = postIndex
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field State", wireType)
			}
			m.State = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.State |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncInstallation) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncInstallation: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncInstallation: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Contacts", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Contacts = append(m.Contacts, &SyncInstallationContact{})
			if err := m.Contacts[len(m.Contacts)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field PublicChats", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.PublicChats = append(m.PublicChats, &SyncInstallationPublicChat{})
			if err := m.PublicChats[len(m.PublicChats)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Account", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			if m.Account == nil {
				m.Account = &SyncInstallationAccount{}
			}
			if err := m.Account.Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Communities", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Communities = append(m.Communities, &SyncCommunity{})
			if err := m.Communities[len(m.Communities)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncChatRemoved) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncChatRemoved: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncChatRemoved: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncChatMessagesRead) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncChatMessagesRead: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncChatMessagesRead: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Id", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Id = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncActivityCenterRead) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncActivityCenterRead: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncActivityCenterRead: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, make([]byte, postIndex-iNdEx))
			copy(m.Ids[len(m.Ids)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncActivityCenterAccepted) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncActivityCenterAccepted: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncActivityCenterAccepted: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, make([]byte, postIndex-iNdEx))
			copy(m.Ids[len(m.Ids)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncActivityCenterDismissed) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncActivityCenterDismissed: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncActivityCenterDismissed: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Ids", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Ids = append(m.Ids, make([]byte, postIndex-iNdEx))
			copy(m.Ids[len(m.Ids)-1], dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncBookmark) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncBookmark: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncBookmark: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Url", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Url = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 3:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 4:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ImageUrl", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ImageUrl = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Removed", wireType)
			}
			var v int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				v |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			m.Removed = bool(v != 0)
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncClearHistory) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncClearHistory: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncClearHistory: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field ChatId", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.ChatId = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ClearedAt", wireType)
			}
			m.ClearedAt = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ClearedAt |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncProfilePicture) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncProfilePicture: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncProfilePicture: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Name", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Name = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Payload", wireType)
			}
			var byteLen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				byteLen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if byteLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + byteLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Payload = append(m.Payload[:0], dAtA[iNdEx:postIndex]...)
			if m.Payload == nil {
				m.Payload = []byte{}
			}
			iNdEx = postIndex
		case 3:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Width", wireType)
			}
			m.Width = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Width |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 4:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Height", wireType)
			}
			m.Height = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Height |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 5:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field FileSize", wireType)
			}
			m.FileSize = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.FileSize |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 6:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field ResizeTarget", wireType)
			}
			m.ResizeTarget = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.ResizeTarget |= uint32(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		case 7:
			if wireType != 0 {
				return fmt.Errorf("proto: wrong wireType = %d for field Clock", wireType)
			}
			m.Clock = 0
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				m.Clock |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func (m *SyncProfilePictures) Unmarshal(dAtA []byte) error {
	l := len(dAtA)
	iNdEx := 0
	for iNdEx < l {
		preIndex := iNdEx
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= uint64(b&0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		fieldNum := int32(wire >> 3)
		wireType := int(wire & 0x7)
		if wireType == 4 {
			return fmt.Errorf("proto: SyncProfilePictures: wiretype end group for non-group")
		}
		if fieldNum <= 0 {
			return fmt.Errorf("proto: SyncProfilePictures: illegal tag %d (wire type %d)", fieldNum, wire)
		}
		switch fieldNum {
		case 1:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field KeyUid", wireType)
			}
			var stringLen uint64
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				stringLen |= uint64(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			intStringLen := int(stringLen)
			if intStringLen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + intStringLen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.KeyUid = string(dAtA[iNdEx:postIndex])
			iNdEx = postIndex
		case 2:
			if wireType != 2 {
				return fmt.Errorf("proto: wrong wireType = %d for field Pictures", wireType)
			}
			var msglen int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				msglen |= int(b&0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if msglen < 0 {
				return ErrInvalidLengthPairing
			}
			postIndex := iNdEx + msglen
			if postIndex < 0 {
				return ErrInvalidLengthPairing
			}
			if postIndex > l {
				return io.ErrUnexpectedEOF
			}
			m.Pictures = append(m.Pictures, &SyncProfilePicture{})
			if err := m.Pictures[len(m.Pictures)-1].Unmarshal(dAtA[iNdEx:postIndex]); err != nil {
				return err
			}
			iNdEx = postIndex
		default:
			iNdEx = preIndex
			skippy, err := skipPairing(dAtA[iNdEx:])
			if err != nil {
				return err
			}
			if (skippy < 0) || (iNdEx+skippy) < 0 {
				return ErrInvalidLengthPairing
			}
			if (iNdEx + skippy) > l {
				return io.ErrUnexpectedEOF
			}
			m.XXX_unrecognized = append(m.XXX_unrecognized, dAtA[iNdEx:iNdEx+skippy]...)
			iNdEx += skippy
		}
	}

	if iNdEx > l {
		return io.ErrUnexpectedEOF
	}
	return nil
}
func skipPairing(dAtA []byte) (n int, err error) {
	l := len(dAtA)
	iNdEx := 0
	depth := 0
	for iNdEx < l {
		var wire uint64
		for shift := uint(0); ; shift += 7 {
			if shift >= 64 {
				return 0, ErrIntOverflowPairing
			}
			if iNdEx >= l {
				return 0, io.ErrUnexpectedEOF
			}
			b := dAtA[iNdEx]
			iNdEx++
			wire |= (uint64(b) & 0x7F) << shift
			if b < 0x80 {
				break
			}
		}
		wireType := int(wire & 0x7)
		switch wireType {
		case 0:
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				iNdEx++
				if dAtA[iNdEx-1] < 0x80 {
					break
				}
			}
		case 1:
			iNdEx += 8
		case 2:
			var length int
			for shift := uint(0); ; shift += 7 {
				if shift >= 64 {
					return 0, ErrIntOverflowPairing
				}
				if iNdEx >= l {
					return 0, io.ErrUnexpectedEOF
				}
				b := dAtA[iNdEx]
				iNdEx++
				length |= (int(b) & 0x7F) << shift
				if b < 0x80 {
					break
				}
			}
			if length < 0 {
				return 0, ErrInvalidLengthPairing
			}
			iNdEx += length
		case 3:
			depth++
		case 4:
			if depth == 0 {
				return 0, ErrUnexpectedEndOfGroupPairing
			}
			depth--
		case 5:
			iNdEx += 4
		default:
			return 0, fmt.Errorf("proto: illegal wireType %d", wireType)
		}
		if iNdEx < 0 {
			return 0, ErrInvalidLengthPairing
		}
		if depth == 0 {
			return iNdEx, nil
		}
	}
	return 0, io.ErrUnexpectedEOF
}

var (
	ErrInvalidLengthPairing        = fmt.Errorf("proto: negative length found during unmarshaling")
	ErrIntOverflowPairing          = fmt.Errorf("proto: integer overflow")
	ErrUnexpectedEndOfGroupPairing = fmt.Errorf("proto: unexpected end of group")
)
