// Code generated by protoc-gen-go. DO NOT EDIT.
// source: emoji_reaction.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type EmojiReaction_Type int32

const (
	EmojiReaction_UNKNOWN_EMOJI_REACTION_TYPE EmojiReaction_Type = 0
	EmojiReaction_LOVE                        EmojiReaction_Type = 1
	EmojiReaction_THUMBS_UP                   EmojiReaction_Type = 2
	EmojiReaction_THUMBS_DOWN                 EmojiReaction_Type = 3
	EmojiReaction_LAUGH                       EmojiReaction_Type = 4
	EmojiReaction_SAD                         EmojiReaction_Type = 5
	EmojiReaction_ANGRY                       EmojiReaction_Type = 6
)

var EmojiReaction_Type_name = map[int32]string{
	0: "UNKNOWN_EMOJI_REACTION_TYPE",
	1: "LOVE",
	2: "THUMBS_UP",
	3: "THUMBS_DOWN",
	4: "LAUGH",
	5: "SAD",
	6: "ANGRY",
}

var EmojiReaction_Type_value = map[string]int32{
	"UNKNOWN_EMOJI_REACTION_TYPE": 0,
	"LOVE":                        1,
	"THUMBS_UP":                   2,
	"THUMBS_DOWN":                 3,
	"LAUGH":                       4,
	"SAD":                         5,
	"ANGRY":                       6,
}

func (x EmojiReaction_Type) String() string {
	return proto.EnumName(EmojiReaction_Type_name, int32(x))
}

func (EmojiReaction_Type) EnumDescriptor() ([]byte, []int) {
	return fileDescriptor_0a088c907bbc7ed6, []int{0, 0}
}

type EmojiReaction struct {
	// clock Lamport timestamp of the chat message
	Clock uint64 `protobuf:"varint,1,opt,name=clock,proto3" json:"clock,omitempty"`
	// chat_id the ID of the chat the message belongs to, for query efficiency the chat_id is stored in the db even though the
	// target message also stores the chat_id
	ChatId string `protobuf:"bytes,2,opt,name=chat_id,json=chatId,proto3" json:"chat_id,omitempty"`
	// message_id the ID of the target message that the user wishes to react to
	MessageId string `protobuf:"bytes,3,opt,name=message_id,json=messageId,proto3" json:"message_id,omitempty"`
	// message_type is (somewhat confusingly) the ID of the type of chat the message belongs to
	MessageType MessageType `protobuf:"varint,4,opt,name=message_type,json=messageType,proto3,enum=protobuf.MessageType" json:"message_type,omitempty"`
	// type the ID of the emoji the user wishes to react with
	Type EmojiReaction_Type `protobuf:"varint,5,opt,name=type,proto3,enum=protobuf.EmojiReaction_Type" json:"type,omitempty"`
	// whether this is a rectraction of a previously sent emoji
	Retracted bool `protobuf:"varint,6,opt,name=retracted,proto3" json:"retracted,omitempty"`
	// Grant for organisation chat messages
	Grant                []byte   `protobuf:"bytes,7,opt,name=grant,proto3" json:"grant,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *EmojiReaction) Reset()         { *m = EmojiReaction{} }
func (m *EmojiReaction) String() string { return proto.CompactTextString(m) }
func (*EmojiReaction) ProtoMessage()    {}
func (*EmojiReaction) Descriptor() ([]byte, []int) {
	return fileDescriptor_0a088c907bbc7ed6, []int{0}
}

func (m *EmojiReaction) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_EmojiReaction.Unmarshal(m, b)
}
func (m *EmojiReaction) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_EmojiReaction.Marshal(b, m, deterministic)
}
func (m *EmojiReaction) XXX_Merge(src proto.Message) {
	xxx_messageInfo_EmojiReaction.Merge(m, src)
}
func (m *EmojiReaction) XXX_Size() int {
	return xxx_messageInfo_EmojiReaction.Size(m)
}
func (m *EmojiReaction) XXX_DiscardUnknown() {
	xxx_messageInfo_EmojiReaction.DiscardUnknown(m)
}

var xxx_messageInfo_EmojiReaction proto.InternalMessageInfo

func (m *EmojiReaction) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *EmojiReaction) GetChatId() string {
	if m != nil {
		return m.ChatId
	}
	return ""
}

func (m *EmojiReaction) GetMessageId() string {
	if m != nil {
		return m.MessageId
	}
	return ""
}

func (m *EmojiReaction) GetMessageType() MessageType {
	if m != nil {
		return m.MessageType
	}
	return MessageType_UNKNOWN_MESSAGE_TYPE
}

func (m *EmojiReaction) GetType() EmojiReaction_Type {
	if m != nil {
		return m.Type
	}
	return EmojiReaction_UNKNOWN_EMOJI_REACTION_TYPE
}

func (m *EmojiReaction) GetRetracted() bool {
	if m != nil {
		return m.Retracted
	}
	return false
}

func (m *EmojiReaction) GetGrant() []byte {
	if m != nil {
		return m.Grant
	}
	return nil
}

func init() {
	proto.RegisterEnum("protobuf.EmojiReaction_Type", EmojiReaction_Type_name, EmojiReaction_Type_value)
	proto.RegisterType((*EmojiReaction)(nil), "protobuf.EmojiReaction")
}

func init() {
	proto.RegisterFile("emoji_reaction.proto", fileDescriptor_0a088c907bbc7ed6)
}

var fileDescriptor_0a088c907bbc7ed6 = []byte{
	// 339 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x54, 0x8f, 0x5f, 0x4f, 0xb2, 0x50,
	0x1c, 0xc7, 0x1f, 0x14, 0x50, 0x7e, 0xea, 0x13, 0x3b, 0xb3, 0xc5, 0xca, 0x8a, 0x79, 0xc5, 0x15,
	0xb6, 0xba, 0xe9, 0x16, 0x93, 0x29, 0xa5, 0xe0, 0x8e, 0x90, 0xb3, 0x1b, 0x86, 0x70, 0x52, 0x4a,
	0x84, 0xe1, 0xf1, 0xc2, 0x57, 0xdd, 0x5b, 0x68, 0x1c, 0x74, 0xae, 0x2b, 0xf8, 0x7c, 0xff, 0xec,
	0xfc, 0xbe, 0xd0, 0x26, 0x49, 0xfa, 0x15, 0xfb, 0x39, 0x09, 0x42, 0x1a, 0xa7, 0x5b, 0x3d, 0xcb,
	0x53, 0x9a, 0xa2, 0x3a, 0xfb, 0x2c, 0xf7, 0x9f, 0xd7, 0x0d, 0xb2, 0xdd, 0x27, 0xbb, 0x52, 0xee,
	0xfe, 0x54, 0xa0, 0x65, 0x16, 0x79, 0x7c, 0x8c, 0xa3, 0x36, 0x08, 0xe1, 0x26, 0x0d, 0xbf, 0x15,
	0x4e, 0xe5, 0x34, 0x1e, 0x97, 0x80, 0xae, 0xa0, 0x16, 0xae, 0x03, 0xea, 0xc7, 0x91, 0x52, 0x51,
	0x39, 0x4d, 0xc2, 0x62, 0x81, 0x56, 0x84, 0x6e, 0x01, 0x12, 0xb2, 0xdb, 0x05, 0x2b, 0x52, 0x78,
	0x55, 0xe6, 0x49, 0x47, 0xc5, 0x8a, 0xd0, 0x33, 0x34, 0x4f, 0x36, 0x3d, 0x64, 0x44, 0xe1, 0x55,
	0x4e, 0xfb, 0xff, 0x78, 0xa9, 0x9f, 0xae, 0xd1, 0x27, 0xa5, 0xeb, 0x1e, 0x32, 0x82, 0x1b, 0xc9,
	0x19, 0xd0, 0x03, 0xf0, 0xac, 0x21, 0xb0, 0x46, 0xe7, 0xdc, 0xf8, 0x73, 0xae, 0xce, 0x8a, 0x2c,
	0x89, 0x3a, 0x20, 0xe5, 0x84, 0xe6, 0x41, 0x48, 0x49, 0xa4, 0x88, 0x2a, 0xa7, 0xd5, 0xf1, 0x59,
	0x28, 0x76, 0xad, 0xf2, 0x60, 0x4b, 0x95, 0x9a, 0xca, 0x69, 0x4d, 0x5c, 0x42, 0x37, 0x03, 0x9e,
	0xbd, 0x76, 0x0f, 0x37, 0x9e, 0xfd, 0x66, 0x3b, 0x73, 0xdb, 0x37, 0x27, 0xce, 0xab, 0xe5, 0x63,
	0xd3, 0x78, 0x71, 0x2d, 0xc7, 0xf6, 0xdd, 0xc5, 0xd4, 0x94, 0xff, 0xa1, 0x3a, 0xf0, 0x63, 0xe7,
	0xdd, 0x94, 0x39, 0xd4, 0x02, 0xc9, 0x1d, 0x79, 0x93, 0xfe, 0xcc, 0xf7, 0xa6, 0x72, 0x05, 0x5d,
	0x40, 0xe3, 0x88, 0x03, 0x67, 0x6e, 0xcb, 0x55, 0x24, 0x81, 0x30, 0x36, 0xbc, 0xe1, 0x48, 0xe6,
	0x51, 0x0d, 0xaa, 0x33, 0x63, 0x20, 0x0b, 0x85, 0x66, 0xd8, 0x43, 0xbc, 0x90, 0xc5, 0xfe, 0xdd,
	0x47, 0x67, 0x15, 0xd3, 0xf5, 0x7e, 0xa9, 0x87, 0x69, 0xd2, 0x63, 0xab, 0xc2, 0x74, 0xd3, 0x3b,
	0xcd, 0x5b, 0x8a, 0xec, 0xef, 0xe9, 0x37, 0x00, 0x00, 0xff, 0xff, 0xee, 0xea, 0xe5, 0xbf, 0xc7,
	0x01, 0x00, 0x00,
}
