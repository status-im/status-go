// Code generated by protoc-gen-go. DO NOT EDIT.
// source: community_shard_key.proto

package protobuf

import (
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CommunityShardKey struct {
	CommunityID          []byte   `protobuf:"bytes,1,opt,name=communityID,proto3" json:"communityID,omitempty"`
	PrivateKey           []byte   `protobuf:"bytes,2,opt,name=privateKey,proto3" json:"privateKey,omitempty"`
	Topic                string   `protobuf:"bytes,3,opt,name=topic,proto3" json:"topic,omitempty"`
	Clock                uint64   `protobuf:"varint,4,opt,name=clock,proto3" json:"clock,omitempty"`
	ShardCluster         int32    `protobuf:"varint,5,opt,name=shard_cluster,json=shardCluster,proto3" json:"shard_cluster,omitempty"`
	ShardIndex           int32    `protobuf:"varint,6,opt,name=shard_index,json=shardIndex,proto3" json:"shard_index,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CommunityShardKey) Reset()         { *m = CommunityShardKey{} }
func (m *CommunityShardKey) String() string { return proto.CompactTextString(m) }
func (*CommunityShardKey) ProtoMessage()    {}
func (*CommunityShardKey) Descriptor() ([]byte, []int) {
	return fileDescriptor_03da8310cde9b7b2, []int{0}
}

func (m *CommunityShardKey) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CommunityShardKey.Unmarshal(m, b)
}
func (m *CommunityShardKey) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CommunityShardKey.Marshal(b, m, deterministic)
}
func (m *CommunityShardKey) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CommunityShardKey.Merge(m, src)
}
func (m *CommunityShardKey) XXX_Size() int {
	return xxx_messageInfo_CommunityShardKey.Size(m)
}
func (m *CommunityShardKey) XXX_DiscardUnknown() {
	xxx_messageInfo_CommunityShardKey.DiscardUnknown(m)
}

var xxx_messageInfo_CommunityShardKey proto.InternalMessageInfo

func (m *CommunityShardKey) GetCommunityID() []byte {
	if m != nil {
		return m.CommunityID
	}
	return nil
}

func (m *CommunityShardKey) GetPrivateKey() []byte {
	if m != nil {
		return m.PrivateKey
	}
	return nil
}

func (m *CommunityShardKey) GetTopic() string {
	if m != nil {
		return m.Topic
	}
	return ""
}

func (m *CommunityShardKey) GetClock() uint64 {
	if m != nil {
		return m.Clock
	}
	return 0
}

func (m *CommunityShardKey) GetShardCluster() int32 {
	if m != nil {
		return m.ShardCluster
	}
	return 0
}

func (m *CommunityShardKey) GetShardIndex() int32 {
	if m != nil {
		return m.ShardIndex
	}
	return 0
}

func init() {
	proto.RegisterType((*CommunityShardKey)(nil), "protobuf.CommunityShardKey")
}

func init() {
	proto.RegisterFile("community_shard_key.proto", fileDescriptor_03da8310cde9b7b2)
}

var fileDescriptor_03da8310cde9b7b2 = []byte{
	// 203 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0x4c, 0xce, 0xcf, 0xcd,
	0x2d, 0xcd, 0xcb, 0x2c, 0xa9, 0x8c, 0x2f, 0xce, 0x48, 0x2c, 0x4a, 0x89, 0xcf, 0x4e, 0xad, 0xd4,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0xe2, 0x00, 0x53, 0x49, 0xa5, 0x69, 0x4a, 0xc7, 0x19, 0xb9,
	0x04, 0x9d, 0x61, 0xea, 0x82, 0x41, 0xca, 0xbc, 0x53, 0x2b, 0x85, 0x14, 0xb8, 0xb8, 0xe1, 0x9a,
	0x3d, 0x5d, 0x24, 0x18, 0x15, 0x18, 0x35, 0x78, 0x82, 0x90, 0x85, 0x84, 0xe4, 0xb8, 0xb8, 0x0a,
	0x8a, 0x32, 0xcb, 0x12, 0x4b, 0x52, 0xbd, 0x53, 0x2b, 0x25, 0x98, 0xc0, 0x0a, 0x90, 0x44, 0x84,
	0x44, 0xb8, 0x58, 0x4b, 0xf2, 0x0b, 0x32, 0x93, 0x25, 0x98, 0x15, 0x18, 0x35, 0x38, 0x83, 0x20,
	0x1c, 0x90, 0x68, 0x72, 0x4e, 0x7e, 0x72, 0xb6, 0x04, 0x8b, 0x02, 0xa3, 0x06, 0x4b, 0x10, 0x84,
	0x23, 0xa4, 0xcc, 0xc5, 0x0b, 0x71, 0x60, 0x72, 0x4e, 0x69, 0x71, 0x49, 0x6a, 0x91, 0x04, 0xab,
	0x02, 0xa3, 0x06, 0x6b, 0x10, 0x0f, 0x58, 0xd0, 0x19, 0x22, 0x26, 0x24, 0xcf, 0xc5, 0x0d, 0x51,
	0x94, 0x99, 0x97, 0x92, 0x5a, 0x21, 0xc1, 0x06, 0x56, 0xc2, 0x05, 0x16, 0xf2, 0x04, 0x89, 0x38,
	0xf1, 0x46, 0x71, 0xeb, 0xe9, 0x5b, 0xc3, 0x3c, 0x96, 0xc4, 0x06, 0x66, 0x19, 0x03, 0x02, 0x00,
	0x00, 0xff, 0xff, 0xbd, 0x86, 0xf3, 0xc7, 0x06, 0x01, 0x00, 0x00,
}
