// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.31.0
// 	protoc        v3.20.3
// source: gateway.proto

package cbridge

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type WithdrawMethodType int32

const (
	WithdrawMethodType_WD_METHOD_TYPE_UNDEFINED     WithdrawMethodType = 0
	WithdrawMethodType_WD_METHOD_TYPE_ONE_RM        WithdrawMethodType = 1 // for lp one chain liquidity remove
	WithdrawMethodType_WD_METHOD_TYPE_ALL_IN_ONE    WithdrawMethodType = 2 // for lp multi-chain -> one chain liquidity remove
	WithdrawMethodType_WD_METHOD_TYPE_STAKING_CLAIM WithdrawMethodType = 3 // for staking claim lp reward, these entries will not be shown in lp history
)

// Enum value maps for WithdrawMethodType.
var (
	WithdrawMethodType_name = map[int32]string{
		0: "WD_METHOD_TYPE_UNDEFINED",
		1: "WD_METHOD_TYPE_ONE_RM",
		2: "WD_METHOD_TYPE_ALL_IN_ONE",
		3: "WD_METHOD_TYPE_STAKING_CLAIM",
	}
	WithdrawMethodType_value = map[string]int32{
		"WD_METHOD_TYPE_UNDEFINED":     0,
		"WD_METHOD_TYPE_ONE_RM":        1,
		"WD_METHOD_TYPE_ALL_IN_ONE":    2,
		"WD_METHOD_TYPE_STAKING_CLAIM": 3,
	}
)

func (x WithdrawMethodType) Enum() *WithdrawMethodType {
	p := new(WithdrawMethodType)
	*p = x
	return p
}

func (x WithdrawMethodType) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (WithdrawMethodType) Descriptor() protoreflect.EnumDescriptor {
	return file_gateway_proto_enumTypes[0].Descriptor()
}

func (WithdrawMethodType) Type() protoreflect.EnumType {
	return &file_gateway_proto_enumTypes[0]
}

func (x WithdrawMethodType) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use WithdrawMethodType.Descriptor instead.
func (WithdrawMethodType) EnumDescriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

type ErrCode int32

const (
	ErrCode_ERROR_CODE_UNDEFINED        ErrCode = 0
	ErrCode_ERROR_CODE_COMMON           ErrCode = 500
	ErrCode_ERROR_NO_TOKEN_ON_DST_CHAIN ErrCode = 1001
	ErrCode_ERROR_NO_TOKEN_ON_SRC_CHAIN ErrCode = 1002
	ErrCode_ERROR_INIT_WITHDRAW_FAILED  ErrCode = 1003
)

// Enum value maps for ErrCode.
var (
	ErrCode_name = map[int32]string{
		0:    "ERROR_CODE_UNDEFINED",
		500:  "ERROR_CODE_COMMON",
		1001: "ERROR_NO_TOKEN_ON_DST_CHAIN",
		1002: "ERROR_NO_TOKEN_ON_SRC_CHAIN",
		1003: "ERROR_INIT_WITHDRAW_FAILED",
	}
	ErrCode_value = map[string]int32{
		"ERROR_CODE_UNDEFINED":        0,
		"ERROR_CODE_COMMON":           500,
		"ERROR_NO_TOKEN_ON_DST_CHAIN": 1001,
		"ERROR_NO_TOKEN_ON_SRC_CHAIN": 1002,
		"ERROR_INIT_WITHDRAW_FAILED":  1003,
	}
)

func (x ErrCode) Enum() *ErrCode {
	p := new(ErrCode)
	*p = x
	return p
}

func (x ErrCode) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (ErrCode) Descriptor() protoreflect.EnumDescriptor {
	return file_gateway_proto_enumTypes[1].Descriptor()
}

func (ErrCode) Type() protoreflect.EnumType {
	return &file_gateway_proto_enumTypes[1]
}

func (x ErrCode) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use ErrCode.Descriptor instead.
func (ErrCode) EnumDescriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

type Chain struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id               uint32  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`
	Name             string  `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon             string  `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
	BlockDelay       uint32  `protobuf:"varint,4,opt,name=block_delay,json=blockDelay,proto3" json:"block_delay,omitempty"`
	GasTokenSymbol   string  `protobuf:"bytes,5,opt,name=gas_token_symbol,json=gasTokenSymbol,proto3" json:"gas_token_symbol,omitempty"`
	ExploreUrl       string  `protobuf:"bytes,6,opt,name=explore_url,json=exploreUrl,proto3" json:"explore_url,omitempty"`
	ContractAddr     string  `protobuf:"bytes,8,opt,name=contract_addr,json=contractAddr,proto3" json:"contract_addr,omitempty"`                  // bridge contract addr
	DropGasAmt       string  `protobuf:"bytes,9,opt,name=drop_gas_amt,json=dropGasAmt,proto3" json:"drop_gas_amt,omitempty"`                      // how much gas will be dropped on dst chain when transfer(dst chain gas token)
	SuggestedBaseFee float64 `protobuf:"fixed64,10,opt,name=suggested_base_fee,json=suggestedBaseFee,proto3" json:"suggested_base_fee,omitempty"` // only for backend
}

func (x *Chain) Reset() {
	*x = Chain{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Chain) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Chain) ProtoMessage() {}

func (x *Chain) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Chain.ProtoReflect.Descriptor instead.
func (*Chain) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{0}
}

func (x *Chain) GetId() uint32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *Chain) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *Chain) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *Chain) GetBlockDelay() uint32 {
	if x != nil {
		return x.BlockDelay
	}
	return 0
}

func (x *Chain) GetGasTokenSymbol() string {
	if x != nil {
		return x.GasTokenSymbol
	}
	return ""
}

func (x *Chain) GetExploreUrl() string {
	if x != nil {
		return x.ExploreUrl
	}
	return ""
}

func (x *Chain) GetContractAddr() string {
	if x != nil {
		return x.ContractAddr
	}
	return ""
}

func (x *Chain) GetDropGasAmt() string {
	if x != nil {
		return x.DropGasAmt
	}
	return ""
}

func (x *Chain) GetSuggestedBaseFee() float64 {
	if x != nil {
		return x.SuggestedBaseFee
	}
	return 0
}

type ChainTokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token []*TokenInfo `protobuf:"bytes,1,rep,name=token,proto3" json:"token,omitempty"`
}

func (x *ChainTokenInfo) Reset() {
	*x = ChainTokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ChainTokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ChainTokenInfo) ProtoMessage() {}

func (x *ChainTokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ChainTokenInfo.ProtoReflect.Descriptor instead.
func (*ChainTokenInfo) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{1}
}

func (x *ChainTokenInfo) GetToken() []*TokenInfo {
	if x != nil {
		return x.Token
	}
	return nil
}

type TokenInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Token *Token `protobuf:"bytes,1,opt,name=token,proto3" json:"token,omitempty"`
	Name  string `protobuf:"bytes,2,opt,name=name,proto3" json:"name,omitempty"`
	Icon  string `protobuf:"bytes,3,opt,name=icon,proto3" json:"icon,omitempty"`
}

func (x *TokenInfo) Reset() {
	*x = TokenInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TokenInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TokenInfo) ProtoMessage() {}

func (x *TokenInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TokenInfo.ProtoReflect.Descriptor instead.
func (*TokenInfo) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{2}
}

func (x *TokenInfo) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TokenInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *TokenInfo) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

type TransferInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Chain  *Chain `protobuf:"bytes,1,opt,name=chain,proto3" json:"chain,omitempty"`
	Token  *Token `protobuf:"bytes,2,opt,name=token,proto3" json:"token,omitempty"`
	Amount string `protobuf:"bytes,3,opt,name=amount,proto3" json:"amount,omitempty"`
}

func (x *TransferInfo) Reset() {
	*x = TransferInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferInfo) ProtoMessage() {}

func (x *TransferInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferInfo.ProtoReflect.Descriptor instead.
func (*TransferInfo) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{3}
}

func (x *TransferInfo) GetChain() *Chain {
	if x != nil {
		return x.Chain
	}
	return nil
}

func (x *TransferInfo) GetToken() *Token {
	if x != nil {
		return x.Token
	}
	return nil
}

func (x *TransferInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

type GetTransferStatusRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId string `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
}

func (x *GetTransferStatusRequest) Reset() {
	*x = GetTransferStatusRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferStatusRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferStatusRequest) ProtoMessage() {}

func (x *GetTransferStatusRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferStatusRequest.ProtoReflect.Descriptor instead.
func (*GetTransferStatusRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{4}
}

func (x *GetTransferStatusRequest) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

type GetTransferStatusResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err            *ErrMsg               `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Status         TransferHistoryStatus `protobuf:"varint,2,opt,name=status,proto3,enum=cbridge.TransferHistoryStatus" json:"status,omitempty"`
	WdOnchain      []byte                `protobuf:"bytes,3,opt,name=wd_onchain,json=wdOnchain,proto3" json:"wd_onchain,omitempty"`                                   // for refund only
	SortedSigs     [][]byte              `protobuf:"bytes,4,rep,name=sorted_sigs,json=sortedSigs,proto3" json:"sorted_sigs,omitempty"`                                // for refund only
	Signers        [][]byte              `protobuf:"bytes,5,rep,name=signers,proto3" json:"signers,omitempty"`                                                        // for refund only
	Powers         [][]byte              `protobuf:"bytes,6,rep,name=powers,proto3" json:"powers,omitempty"`                                                          // for refund only
	RefundReason   XferStatus            `protobuf:"varint,7,opt,name=refund_reason,json=refundReason,proto3,enum=cbridge.XferStatus" json:"refund_reason,omitempty"` // used only for to_be_refund TransferStatus. BAD_LIQUIDITY, BAD_SLIPPAGE and BAD_TOKEN are used here
	BlockDelay     uint32                `protobuf:"varint,8,opt,name=block_delay,json=blockDelay,proto3" json:"block_delay,omitempty"`                               // waiting
	SrcBlockTxLink string                `protobuf:"bytes,9,opt,name=src_block_tx_link,json=srcBlockTxLink,proto3" json:"src_block_tx_link,omitempty"`
	DstBlockTxLink string                `protobuf:"bytes,10,opt,name=dst_block_tx_link,json=dstBlockTxLink,proto3" json:"dst_block_tx_link,omitempty"`
}

func (x *GetTransferStatusResponse) Reset() {
	*x = GetTransferStatusResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferStatusResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferStatusResponse) ProtoMessage() {}

func (x *GetTransferStatusResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferStatusResponse.ProtoReflect.Descriptor instead.
func (*GetTransferStatusResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{5}
}

func (x *GetTransferStatusResponse) GetErr() *ErrMsg {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetTransferStatusResponse) GetStatus() TransferHistoryStatus {
	if x != nil {
		return x.Status
	}
	return TransferHistoryStatus_TRANSFER_UNKNOWN
}

func (x *GetTransferStatusResponse) GetWdOnchain() []byte {
	if x != nil {
		return x.WdOnchain
	}
	return nil
}

func (x *GetTransferStatusResponse) GetSortedSigs() [][]byte {
	if x != nil {
		return x.SortedSigs
	}
	return nil
}

func (x *GetTransferStatusResponse) GetSigners() [][]byte {
	if x != nil {
		return x.Signers
	}
	return nil
}

func (x *GetTransferStatusResponse) GetPowers() [][]byte {
	if x != nil {
		return x.Powers
	}
	return nil
}

func (x *GetTransferStatusResponse) GetRefundReason() XferStatus {
	if x != nil {
		return x.RefundReason
	}
	return XferStatus_UNKNOWN
}

func (x *GetTransferStatusResponse) GetBlockDelay() uint32 {
	if x != nil {
		return x.BlockDelay
	}
	return 0
}

func (x *GetTransferStatusResponse) GetSrcBlockTxLink() string {
	if x != nil {
		return x.SrcBlockTxLink
	}
	return ""
}

func (x *GetTransferStatusResponse) GetDstBlockTxLink() string {
	if x != nil {
		return x.DstBlockTxLink
	}
	return ""
}

type GetTransferConfigsRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *GetTransferConfigsRequest) Reset() {
	*x = GetTransferConfigsRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[6]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferConfigsRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferConfigsRequest) ProtoMessage() {}

func (x *GetTransferConfigsRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[6]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferConfigsRequest.ProtoReflect.Descriptor instead.
func (*GetTransferConfigsRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{6}
}

type GetTransferConfigsResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err                       *ErrMsg                    `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	Chains                    []*Chain                   `protobuf:"bytes,2,rep,name=chains,proto3" json:"chains,omitempty"`
	ChainToken                map[uint32]*ChainTokenInfo `protobuf:"bytes,3,rep,name=chain_token,json=chainToken,proto3" json:"chain_token,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map<chain_id, ChainTokenInfo>
	FarmingRewardContractAddr string                     `protobuf:"bytes,4,opt,name=farming_reward_contract_addr,json=farmingRewardContractAddr,proto3" json:"farming_reward_contract_addr,omitempty"`
}

func (x *GetTransferConfigsResponse) Reset() {
	*x = GetTransferConfigsResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[7]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTransferConfigsResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTransferConfigsResponse) ProtoMessage() {}

func (x *GetTransferConfigsResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[7]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTransferConfigsResponse.ProtoReflect.Descriptor instead.
func (*GetTransferConfigsResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{7}
}

func (x *GetTransferConfigsResponse) GetErr() *ErrMsg {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetTransferConfigsResponse) GetChains() []*Chain {
	if x != nil {
		return x.Chains
	}
	return nil
}

func (x *GetTransferConfigsResponse) GetChainToken() map[uint32]*ChainTokenInfo {
	if x != nil {
		return x.ChainToken
	}
	return nil
}

func (x *GetTransferConfigsResponse) GetFarmingRewardContractAddr() string {
	if x != nil {
		return x.FarmingRewardContractAddr
	}
	return ""
}

type GetTokenInfoRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId     uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	TokenSymbol string `protobuf:"bytes,2,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
}

func (x *GetTokenInfoRequest) Reset() {
	*x = GetTokenInfoRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[8]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenInfoRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoRequest) ProtoMessage() {}

func (x *GetTokenInfoRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[8]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoRequest.ProtoReflect.Descriptor instead.
func (*GetTokenInfoRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{8}
}

func (x *GetTokenInfoRequest) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *GetTokenInfoRequest) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

type GetTokenInfoResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err       *ErrMsg    `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	TokenInfo *TokenInfo `protobuf:"bytes,2,opt,name=token_info,json=tokenInfo,proto3" json:"token_info,omitempty"`
}

func (x *GetTokenInfoResponse) Reset() {
	*x = GetTokenInfoResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[9]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *GetTokenInfoResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*GetTokenInfoResponse) ProtoMessage() {}

func (x *GetTokenInfoResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[9]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use GetTokenInfoResponse.ProtoReflect.Descriptor instead.
func (*GetTokenInfoResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{9}
}

func (x *GetTokenInfoResponse) GetErr() *ErrMsg {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *GetTokenInfoResponse) GetTokenInfo() *TokenInfo {
	if x != nil {
		return x.TokenInfo
	}
	return nil
}

type EstimateAmtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcChainId        uint32 `protobuf:"varint,1,opt,name=src_chain_id,json=srcChainId,proto3" json:"src_chain_id,omitempty"`
	DstChainId        uint32 `protobuf:"varint,2,opt,name=dst_chain_id,json=dstChainId,proto3" json:"dst_chain_id,omitempty"`
	TokenSymbol       string `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	Amt               string `protobuf:"bytes,4,opt,name=amt,proto3" json:"amt,omitempty"`
	UsrAddr           string `protobuf:"bytes,5,opt,name=usr_addr,json=usrAddr,proto3" json:"usr_addr,omitempty"`
	SlippageTolerance uint32 `protobuf:"varint,6,opt,name=slippage_tolerance,json=slippageTolerance,proto3" json:"slippage_tolerance,omitempty"` // user setting, for ui only, slippage * 1M, eg. 0.5% is 5000
}

func (x *EstimateAmtRequest) Reset() {
	*x = EstimateAmtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[10]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateAmtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateAmtRequest) ProtoMessage() {}

func (x *EstimateAmtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[10]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateAmtRequest.ProtoReflect.Descriptor instead.
func (*EstimateAmtRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{10}
}

func (x *EstimateAmtRequest) GetSrcChainId() uint32 {
	if x != nil {
		return x.SrcChainId
	}
	return 0
}

func (x *EstimateAmtRequest) GetDstChainId() uint32 {
	if x != nil {
		return x.DstChainId
	}
	return 0
}

func (x *EstimateAmtRequest) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *EstimateAmtRequest) GetAmt() string {
	if x != nil {
		return x.Amt
	}
	return ""
}

func (x *EstimateAmtRequest) GetUsrAddr() string {
	if x != nil {
		return x.UsrAddr
	}
	return ""
}

func (x *EstimateAmtRequest) GetSlippageTolerance() uint32 {
	if x != nil {
		return x.SlippageTolerance
	}
	return 0
}

type EstimateAmtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err               *ErrMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	EqValueTokenAmt   string  `protobuf:"bytes,2,opt,name=eq_value_token_amt,json=eqValueTokenAmt,proto3" json:"eq_value_token_amt,omitempty"` // on_dst_chain, to cal minimum_received_amt = eq_value_token_amt*(1-slippage_tolerance) -  fee
	BridgeRate        float32 `protobuf:"fixed32,3,opt,name=bridge_rate,json=bridgeRate,proto3" json:"bridge_rate,omitempty"`
	PercFee           string  `protobuf:"bytes,4,opt,name=perc_fee,json=percFee,proto3" json:"perc_fee,omitempty"`                                // on_dst_chain, percentage fee based on amount
	BaseFee           string  `protobuf:"bytes,7,opt,name=base_fee,json=baseFee,proto3" json:"base_fee,omitempty"`                                // on_dest_chain, independent of amount, to cover relay onchain tx gas cost
	SlippageTolerance uint32  `protobuf:"varint,5,opt,name=slippage_tolerance,json=slippageTolerance,proto3" json:"slippage_tolerance,omitempty"` // user setting, from request, slippage * 1M, eg. 0.5% is 5000
	MaxSlippage       uint32  `protobuf:"varint,6,opt,name=max_slippage,json=maxSlippage,proto3" json:"max_slippage,omitempty"`                   // param for requesting on chain, slippage * 1M, eg. 0.5% is 5000
}

func (x *EstimateAmtResponse) Reset() {
	*x = EstimateAmtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[11]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateAmtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateAmtResponse) ProtoMessage() {}

func (x *EstimateAmtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[11]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateAmtResponse.ProtoReflect.Descriptor instead.
func (*EstimateAmtResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{11}
}

func (x *EstimateAmtResponse) GetErr() *ErrMsg {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *EstimateAmtResponse) GetEqValueTokenAmt() string {
	if x != nil {
		return x.EqValueTokenAmt
	}
	return ""
}

func (x *EstimateAmtResponse) GetBridgeRate() float32 {
	if x != nil {
		return x.BridgeRate
	}
	return 0
}

func (x *EstimateAmtResponse) GetPercFee() string {
	if x != nil {
		return x.PercFee
	}
	return ""
}

func (x *EstimateAmtResponse) GetBaseFee() string {
	if x != nil {
		return x.BaseFee
	}
	return ""
}

func (x *EstimateAmtResponse) GetSlippageTolerance() uint32 {
	if x != nil {
		return x.SlippageTolerance
	}
	return 0
}

func (x *EstimateAmtResponse) GetMaxSlippage() uint32 {
	if x != nil {
		return x.MaxSlippage
	}
	return 0
}

type WithdrawInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ChainId           uint32 `protobuf:"varint,1,opt,name=chain_id,json=chainId,proto3" json:"chain_id,omitempty"`
	Amount            string `protobuf:"bytes,2,opt,name=amount,proto3" json:"amount,omitempty"`
	SlippageTolerance uint32 `protobuf:"varint,3,opt,name=slippage_tolerance,json=slippageTolerance,proto3" json:"slippage_tolerance,omitempty"` // user setting, for ui only, slippage * 1M, eg. 0.5% is 5000
}

func (x *WithdrawInfo) Reset() {
	*x = WithdrawInfo{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[12]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawInfo) ProtoMessage() {}

func (x *WithdrawInfo) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[12]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawInfo.ProtoReflect.Descriptor instead.
func (*WithdrawInfo) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{12}
}

func (x *WithdrawInfo) GetChainId() uint32 {
	if x != nil {
		return x.ChainId
	}
	return 0
}

func (x *WithdrawInfo) GetAmount() string {
	if x != nil {
		return x.Amount
	}
	return ""
}

func (x *WithdrawInfo) GetSlippageTolerance() uint32 {
	if x != nil {
		return x.SlippageTolerance
	}
	return 0
}

type EstimateWithdrawAmtRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SrcWithdraws []*WithdrawInfo `protobuf:"bytes,1,rep,name=src_withdraws,json=srcWithdraws,proto3" json:"src_withdraws,omitempty"`
	DstChainId   uint32          `protobuf:"varint,2,opt,name=dst_chain_id,json=dstChainId,proto3" json:"dst_chain_id,omitempty"`
	TokenSymbol  string          `protobuf:"bytes,3,opt,name=token_symbol,json=tokenSymbol,proto3" json:"token_symbol,omitempty"`
	UsrAddr      string          `protobuf:"bytes,4,opt,name=usr_addr,json=usrAddr,proto3" json:"usr_addr,omitempty"`
}

func (x *EstimateWithdrawAmtRequest) Reset() {
	*x = EstimateWithdrawAmtRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[13]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateWithdrawAmtRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateWithdrawAmtRequest) ProtoMessage() {}

func (x *EstimateWithdrawAmtRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[13]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateWithdrawAmtRequest.ProtoReflect.Descriptor instead.
func (*EstimateWithdrawAmtRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{13}
}

func (x *EstimateWithdrawAmtRequest) GetSrcWithdraws() []*WithdrawInfo {
	if x != nil {
		return x.SrcWithdraws
	}
	return nil
}

func (x *EstimateWithdrawAmtRequest) GetDstChainId() uint32 {
	if x != nil {
		return x.DstChainId
	}
	return 0
}

func (x *EstimateWithdrawAmtRequest) GetTokenSymbol() string {
	if x != nil {
		return x.TokenSymbol
	}
	return ""
}

func (x *EstimateWithdrawAmtRequest) GetUsrAddr() string {
	if x != nil {
		return x.UsrAddr
	}
	return ""
}

type EstimateWithdrawAmtResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    *ErrMsg                         `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	ReqAmt map[uint32]*EstimateWithdrawAmt `protobuf:"bytes,2,rep,name=req_amt,json=reqAmt,proto3" json:"req_amt,omitempty" protobuf_key:"varint,1,opt,name=key,proto3" protobuf_val:"bytes,2,opt,name=value,proto3"` // map<src_chain_id, EstimateWithdrawAmt>
}

func (x *EstimateWithdrawAmtResponse) Reset() {
	*x = EstimateWithdrawAmtResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[14]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateWithdrawAmtResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateWithdrawAmtResponse) ProtoMessage() {}

func (x *EstimateWithdrawAmtResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[14]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateWithdrawAmtResponse.ProtoReflect.Descriptor instead.
func (*EstimateWithdrawAmtResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{14}
}

func (x *EstimateWithdrawAmtResponse) GetErr() *ErrMsg {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *EstimateWithdrawAmtResponse) GetReqAmt() map[uint32]*EstimateWithdrawAmt {
	if x != nil {
		return x.ReqAmt
	}
	return nil
}

type EstimateWithdrawAmt struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	EqValueTokenAmt   string  `protobuf:"bytes,1,opt,name=eq_value_token_amt,json=eqValueTokenAmt,proto3" json:"eq_value_token_amt,omitempty"` // on_dst_chain, to cal minimum_received_amt = eq_value_token_amt*(1-slippage_tolerance) -  fee
	BridgeRate        float32 `protobuf:"fixed32,2,opt,name=bridge_rate,json=bridgeRate,proto3" json:"bridge_rate,omitempty"`
	PercFee           string  `protobuf:"bytes,3,opt,name=perc_fee,json=percFee,proto3" json:"perc_fee,omitempty"`                                // on_dst_chain, percentage fee based on amount
	BaseFee           string  `protobuf:"bytes,4,opt,name=base_fee,json=baseFee,proto3" json:"base_fee,omitempty"`                                // on_dest_chain, independent of amount, to cover relay onchain tx gas cost
	SlippageTolerance uint32  `protobuf:"varint,5,opt,name=slippage_tolerance,json=slippageTolerance,proto3" json:"slippage_tolerance,omitempty"` // user setting, for ui only, slippage * 1M, eg. 0.5% is 5000
	MaxSlippage       uint32  `protobuf:"varint,6,opt,name=max_slippage,json=maxSlippage,proto3" json:"max_slippage,omitempty"`                   // param for requesting on chain, slippage * 1M, eg. 0.5% is 5000
}

func (x *EstimateWithdrawAmt) Reset() {
	*x = EstimateWithdrawAmt{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[15]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *EstimateWithdrawAmt) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*EstimateWithdrawAmt) ProtoMessage() {}

func (x *EstimateWithdrawAmt) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[15]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use EstimateWithdrawAmt.ProtoReflect.Descriptor instead.
func (*EstimateWithdrawAmt) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{15}
}

func (x *EstimateWithdrawAmt) GetEqValueTokenAmt() string {
	if x != nil {
		return x.EqValueTokenAmt
	}
	return ""
}

func (x *EstimateWithdrawAmt) GetBridgeRate() float32 {
	if x != nil {
		return x.BridgeRate
	}
	return 0
}

func (x *EstimateWithdrawAmt) GetPercFee() string {
	if x != nil {
		return x.PercFee
	}
	return ""
}

func (x *EstimateWithdrawAmt) GetBaseFee() string {
	if x != nil {
		return x.BaseFee
	}
	return ""
}

func (x *EstimateWithdrawAmt) GetSlippageTolerance() uint32 {
	if x != nil {
		return x.SlippageTolerance
	}
	return 0
}

func (x *EstimateWithdrawAmt) GetMaxSlippage() uint32 {
	if x != nil {
		return x.MaxSlippage
	}
	return 0
}

type WithdrawLiquidityRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	WithdrawReq          []byte             `protobuf:"bytes,1,opt,name=withdraw_req,json=withdrawReq,proto3" json:"withdraw_req,omitempty"` // serialized WithdrawReq in sgn/cbridge/v1/tx.proto
	Sig                  []byte             `protobuf:"bytes,2,opt,name=sig,proto3" json:"sig,omitempty"`
	EstimatedReceivedAmt string             `protobuf:"bytes,3,opt,name=estimated_received_amt,json=estimatedReceivedAmt,proto3" json:"estimated_received_amt,omitempty"`  // on dst chain
	MethodType           WithdrawMethodType `protobuf:"varint,4,opt,name=method_type,json=methodType,proto3,enum=cbridge.WithdrawMethodType" json:"method_type,omitempty"` // record which type it is
}

func (x *WithdrawLiquidityRequest) Reset() {
	*x = WithdrawLiquidityRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[16]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawLiquidityRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawLiquidityRequest) ProtoMessage() {}

func (x *WithdrawLiquidityRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[16]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawLiquidityRequest.ProtoReflect.Descriptor instead.
func (*WithdrawLiquidityRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{16}
}

func (x *WithdrawLiquidityRequest) GetWithdrawReq() []byte {
	if x != nil {
		return x.WithdrawReq
	}
	return nil
}

func (x *WithdrawLiquidityRequest) GetSig() []byte {
	if x != nil {
		return x.Sig
	}
	return nil
}

func (x *WithdrawLiquidityRequest) GetEstimatedReceivedAmt() string {
	if x != nil {
		return x.EstimatedReceivedAmt
	}
	return ""
}

func (x *WithdrawLiquidityRequest) GetMethodType() WithdrawMethodType {
	if x != nil {
		return x.MethodType
	}
	return WithdrawMethodType_WD_METHOD_TYPE_UNDEFINED
}

type WithdrawLiquidityResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err    *ErrMsg `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	SeqNum uint64  `protobuf:"varint,2,opt,name=seq_num,json=seqNum,proto3" json:"seq_num,omitempty"` // same as WithdrawLiquidityRequest.reqid
}

func (x *WithdrawLiquidityResponse) Reset() {
	*x = WithdrawLiquidityResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[17]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *WithdrawLiquidityResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*WithdrawLiquidityResponse) ProtoMessage() {}

func (x *WithdrawLiquidityResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[17]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use WithdrawLiquidityResponse.ProtoReflect.Descriptor instead.
func (*WithdrawLiquidityResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{17}
}

func (x *WithdrawLiquidityResponse) GetErr() *ErrMsg {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *WithdrawLiquidityResponse) GetSeqNum() uint64 {
	if x != nil {
		return x.SeqNum
	}
	return 0
}

type TransferHistory struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	TransferId      string                `protobuf:"bytes,1,opt,name=transfer_id,json=transferId,proto3" json:"transfer_id,omitempty"`
	SrcSendInfo     *TransferInfo         `protobuf:"bytes,2,opt,name=src_send_info,json=srcSendInfo,proto3" json:"src_send_info,omitempty"`
	DstReceivedInfo *TransferInfo         `protobuf:"bytes,3,opt,name=dst_received_info,json=dstReceivedInfo,proto3" json:"dst_received_info,omitempty"`
	Ts              uint64                `protobuf:"varint,4,opt,name=ts,proto3" json:"ts,omitempty"`
	SrcBlockTxLink  string                `protobuf:"bytes,5,opt,name=src_block_tx_link,json=srcBlockTxLink,proto3" json:"src_block_tx_link,omitempty"`
	DstBlockTxLink  string                `protobuf:"bytes,6,opt,name=dst_block_tx_link,json=dstBlockTxLink,proto3" json:"dst_block_tx_link,omitempty"`
	Status          TransferHistoryStatus `protobuf:"varint,7,opt,name=status,proto3,enum=cbridge.TransferHistoryStatus" json:"status,omitempty"`
	RefundReason    XferStatus            `protobuf:"varint,8,opt,name=refund_reason,json=refundReason,proto3,enum=cbridge.XferStatus" json:"refund_reason,omitempty"` // used only for to_be_refund TransferStatus. BAD_LIQUIDITY, BAD_SLIPPAGE and BAD_TOKEN are used here
}

func (x *TransferHistory) Reset() {
	*x = TransferHistory{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[18]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferHistory) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferHistory) ProtoMessage() {}

func (x *TransferHistory) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[18]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferHistory.ProtoReflect.Descriptor instead.
func (*TransferHistory) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{18}
}

func (x *TransferHistory) GetTransferId() string {
	if x != nil {
		return x.TransferId
	}
	return ""
}

func (x *TransferHistory) GetSrcSendInfo() *TransferInfo {
	if x != nil {
		return x.SrcSendInfo
	}
	return nil
}

func (x *TransferHistory) GetDstReceivedInfo() *TransferInfo {
	if x != nil {
		return x.DstReceivedInfo
	}
	return nil
}

func (x *TransferHistory) GetTs() uint64 {
	if x != nil {
		return x.Ts
	}
	return 0
}

func (x *TransferHistory) GetSrcBlockTxLink() string {
	if x != nil {
		return x.SrcBlockTxLink
	}
	return ""
}

func (x *TransferHistory) GetDstBlockTxLink() string {
	if x != nil {
		return x.DstBlockTxLink
	}
	return ""
}

func (x *TransferHistory) GetStatus() TransferHistoryStatus {
	if x != nil {
		return x.Status
	}
	return TransferHistoryStatus_TRANSFER_UNKNOWN
}

func (x *TransferHistory) GetRefundReason() XferStatus {
	if x != nil {
		return x.RefundReason
	}
	return XferStatus_UNKNOWN
}

type TransferHistoryRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	NextPageToken string `protobuf:"bytes,1,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"` // for first page, it's ""
	PageSize      uint64 `protobuf:"varint,2,opt,name=page_size,json=pageSize,proto3" json:"page_size,omitempty"`
	Addr          string `protobuf:"bytes,3,opt,name=addr,proto3" json:"addr,omitempty"`
}

func (x *TransferHistoryRequest) Reset() {
	*x = TransferHistoryRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[19]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferHistoryRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferHistoryRequest) ProtoMessage() {}

func (x *TransferHistoryRequest) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[19]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferHistoryRequest.ProtoReflect.Descriptor instead.
func (*TransferHistoryRequest) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{19}
}

func (x *TransferHistoryRequest) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *TransferHistoryRequest) GetPageSize() uint64 {
	if x != nil {
		return x.PageSize
	}
	return 0
}

func (x *TransferHistoryRequest) GetAddr() string {
	if x != nil {
		return x.Addr
	}
	return ""
}

type TransferHistoryResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Err           *ErrMsg            `protobuf:"bytes,1,opt,name=err,proto3" json:"err,omitempty"`
	History       []*TransferHistory `protobuf:"bytes,2,rep,name=history,proto3" json:"history,omitempty"`
	NextPageToken string             `protobuf:"bytes,3,opt,name=next_page_token,json=nextPageToken,proto3" json:"next_page_token,omitempty"`
	CurrentSize   uint64             `protobuf:"varint,4,opt,name=current_size,json=currentSize,proto3" json:"current_size,omitempty"`
}

func (x *TransferHistoryResponse) Reset() {
	*x = TransferHistoryResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[20]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *TransferHistoryResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TransferHistoryResponse) ProtoMessage() {}

func (x *TransferHistoryResponse) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[20]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TransferHistoryResponse.ProtoReflect.Descriptor instead.
func (*TransferHistoryResponse) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{20}
}

func (x *TransferHistoryResponse) GetErr() *ErrMsg {
	if x != nil {
		return x.Err
	}
	return nil
}

func (x *TransferHistoryResponse) GetHistory() []*TransferHistory {
	if x != nil {
		return x.History
	}
	return nil
}

func (x *TransferHistoryResponse) GetNextPageToken() string {
	if x != nil {
		return x.NextPageToken
	}
	return ""
}

func (x *TransferHistoryResponse) GetCurrentSize() uint64 {
	if x != nil {
		return x.CurrentSize
	}
	return 0
}

type ErrMsg struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Code ErrCode `protobuf:"varint,1,opt,name=code,proto3,enum=cbridge.ErrCode" json:"code,omitempty"`
	Msg  string  `protobuf:"bytes,2,opt,name=msg,proto3" json:"msg,omitempty"`
}

func (x *ErrMsg) Reset() {
	*x = ErrMsg{}
	if protoimpl.UnsafeEnabled {
		mi := &file_gateway_proto_msgTypes[21]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *ErrMsg) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ErrMsg) ProtoMessage() {}

func (x *ErrMsg) ProtoReflect() protoreflect.Message {
	mi := &file_gateway_proto_msgTypes[21]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ErrMsg.ProtoReflect.Descriptor instead.
func (*ErrMsg) Descriptor() ([]byte, []int) {
	return file_gateway_proto_rawDescGZIP(), []int{21}
}

func (x *ErrMsg) GetCode() ErrCode {
	if x != nil {
		return x.Code
	}
	return ErrCode_ERROR_CODE_UNDEFINED
}

func (x *ErrMsg) GetMsg() string {
	if x != nil {
		return x.Msg
	}
	return ""
}

var File_gateway_proto protoreflect.FileDescriptor

var file_gateway_proto_rawDesc = []byte{
	0x0a, 0x0d, 0x67, 0x61, 0x74, 0x65, 0x77, 0x61, 0x79, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12,
	0x07, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x1a, 0x0b, 0x71, 0x75, 0x65, 0x72, 0x79, 0x2e,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0d, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x22, 0xa6, 0x02, 0x0a, 0x05, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x0e,
	0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x02, 0x69, 0x64, 0x12, 0x12,
	0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f,
	0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x62, 0x6c, 0x6f,
	0x63, 0x6b, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x28, 0x0a, 0x10, 0x67, 0x61, 0x73, 0x5f, 0x74,
	0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x67, 0x61, 0x73, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f,
	0x6c, 0x12, 0x1f, 0x0a, 0x0b, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x5f, 0x75, 0x72, 0x6c,
	0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x65, 0x78, 0x70, 0x6c, 0x6f, 0x72, 0x65, 0x55,
	0x72, 0x6c, 0x12, 0x23, 0x0a, 0x0d, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0c, 0x63, 0x6f, 0x6e, 0x74, 0x72,
	0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x72, 0x6f, 0x70, 0x5f,
	0x67, 0x61, 0x73, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x64,
	0x72, 0x6f, 0x70, 0x47, 0x61, 0x73, 0x41, 0x6d, 0x74, 0x12, 0x2c, 0x0a, 0x12, 0x73, 0x75, 0x67,
	0x67, 0x65, 0x73, 0x74, 0x65, 0x64, 0x5f, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18,
	0x0a, 0x20, 0x01, 0x28, 0x01, 0x52, 0x10, 0x73, 0x75, 0x67, 0x67, 0x65, 0x73, 0x74, 0x65, 0x64,
	0x42, 0x61, 0x73, 0x65, 0x46, 0x65, 0x65, 0x4a, 0x04, 0x08, 0x07, 0x10, 0x08, 0x22, 0x3a, 0x0a,
	0x0e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12,
	0x28, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x12,
	0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e,
	0x66, 0x6f, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x22, 0x59, 0x0a, 0x09, 0x54, 0x6f, 0x6b,
	0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e,
	0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x69, 0x63, 0x6f, 0x6e, 0x22, 0x72, 0x0a, 0x0c, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x49, 0x6e, 0x66, 0x6f, 0x12, 0x24, 0x0a, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x52, 0x05, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x24, 0x0a, 0x05, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0e, 0x2e, 0x63, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x52, 0x05, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x22, 0x3b, 0x0a, 0x18, 0x47, 0x65, 0x74, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x49, 0x64, 0x22, 0x99, 0x03, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x0f, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73,
	0x67, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x1e, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79,
	0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x1d,
	0x0a, 0x0a, 0x77, 0x64, 0x5f, 0x6f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x18, 0x03, 0x20, 0x01,
	0x28, 0x0c, 0x52, 0x09, 0x77, 0x64, 0x4f, 0x6e, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x12, 0x1f, 0x0a,
	0x0b, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x5f, 0x73, 0x69, 0x67, 0x73, 0x18, 0x04, 0x20, 0x03,
	0x28, 0x0c, 0x52, 0x0a, 0x73, 0x6f, 0x72, 0x74, 0x65, 0x64, 0x53, 0x69, 0x67, 0x73, 0x12, 0x18,
	0x0a, 0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x18, 0x05, 0x20, 0x03, 0x28, 0x0c, 0x52,
	0x07, 0x73, 0x69, 0x67, 0x6e, 0x65, 0x72, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x6f, 0x77, 0x65,
	0x72, 0x73, 0x18, 0x06, 0x20, 0x03, 0x28, 0x0c, 0x52, 0x06, 0x70, 0x6f, 0x77, 0x65, 0x72, 0x73,
	0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x58, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52, 0x0c, 0x72, 0x65,
	0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x12, 0x1f, 0x0a, 0x0b, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x64, 0x65, 0x6c, 0x61, 0x79, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x0a, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x44, 0x65, 0x6c, 0x61, 0x79, 0x12, 0x29, 0x0a, 0x11, 0x73,
	0x72, 0x63, 0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b,
	0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x72, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b,
	0x54, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x11, 0x64, 0x73, 0x74, 0x5f, 0x62, 0x6c,
	0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x0a, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x0e, 0x64, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x78, 0x4c, 0x69, 0x6e,
	0x6b, 0x22, 0x1b, 0x0a, 0x19, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72,
	0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x22, 0xd6,
	0x02, 0x0a, 0x1a, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x43, 0x6f,
	0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a,
	0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x65, 0x72, 0x72,
	0x12, 0x26, 0x0a, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b,
	0x32, 0x0e, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e,
	0x52, 0x06, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x73, 0x12, 0x54, 0x0a, 0x0b, 0x63, 0x68, 0x61, 0x69,
	0x6e, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x33, 0x2e,
	0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x47, 0x65, 0x74, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x43, 0x6f, 0x6e, 0x66, 0x69, 0x67, 0x73, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x2e, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x52, 0x0a, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12, 0x3f,
	0x0a, 0x1c, 0x66, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x5f, 0x72, 0x65, 0x77, 0x61, 0x72, 0x64,
	0x5f, 0x63, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x19, 0x66, 0x61, 0x72, 0x6d, 0x69, 0x6e, 0x67, 0x52, 0x65, 0x77,
	0x61, 0x72, 0x64, 0x43, 0x6f, 0x6e, 0x74, 0x72, 0x61, 0x63, 0x74, 0x41, 0x64, 0x64, 0x72, 0x1a,
	0x56, 0x0a, 0x0f, 0x43, 0x68, 0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x45, 0x6e, 0x74,
	0x72, 0x79, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x03, 0x6b, 0x65, 0x79, 0x12, 0x2d, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x0b, 0x32, 0x17, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x05, 0x76, 0x61,
	0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0x53, 0x0a, 0x13, 0x47, 0x65, 0x74, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x19,
	0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d,
	0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x5f, 0x73, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0b, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x22, 0x6c, 0x0a, 0x14,
	0x47, 0x65, 0x74, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x4d,
	0x73, 0x67, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x31, 0x0a, 0x0a, 0x74, 0x6f, 0x6b, 0x65, 0x6e,
	0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x63, 0x62,
	0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52,
	0x09, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x22, 0xd7, 0x01, 0x0a, 0x12, 0x45,
	0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x41, 0x6d, 0x74, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x20, 0x0a, 0x0c, 0x73, 0x72, 0x63, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x73, 0x72, 0x63, 0x43, 0x68, 0x61, 0x69,
	0x6e, 0x49, 0x64, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e,
	0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x43, 0x68,
	0x61, 0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73,
	0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b,
	0x65, 0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6d, 0x74, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x61, 0x6d, 0x74, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73,
	0x72, 0x5f, 0x61, 0x64, 0x64, 0x72, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73,
	0x72, 0x41, 0x64, 0x64, 0x72, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6c, 0x65, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x22, 0x8e, 0x02, 0x0a, 0x13, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74,
	0x65, 0x41, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03,
	0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x62, 0x72, 0x69,
	0x64, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12,
	0x2b, 0x0a, 0x12, 0x65, 0x71, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65, 0x71, 0x56,
	0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x74, 0x12, 0x1f, 0x0a, 0x0b,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x02, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12, 0x19, 0x0a,
	0x08, 0x70, 0x65, 0x72, 0x63, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x07, 0x70, 0x65, 0x72, 0x63, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61, 0x73, 0x65,
	0x5f, 0x66, 0x65, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61, 0x73, 0x65,
	0x46, 0x65, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x5f,
	0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0d, 0x52,
	0x11, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e,
	0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61,
	0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53, 0x6c, 0x69,
	0x70, 0x70, 0x61, 0x67, 0x65, 0x22, 0x70, 0x0a, 0x0c, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x19, 0x0a, 0x08, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f, 0x69,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x07, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x49, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6c, 0x69, 0x70,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x0d, 0x52, 0x11, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x22, 0xb8, 0x01, 0x0a, 0x1a, 0x45, 0x73, 0x74, 0x69,
	0x6d, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x74, 0x52,
	0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x3a, 0x0a, 0x0d, 0x73, 0x72, 0x63, 0x5f, 0x77, 0x69,
	0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x15, 0x2e,
	0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0c, 0x73, 0x72, 0x63, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x73, 0x12, 0x20, 0x0a, 0x0c, 0x64, 0x73, 0x74, 0x5f, 0x63, 0x68, 0x61, 0x69, 0x6e, 0x5f,
	0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0a, 0x64, 0x73, 0x74, 0x43, 0x68, 0x61,
	0x69, 0x6e, 0x49, 0x64, 0x12, 0x21, 0x0a, 0x0c, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x5f, 0x73, 0x79,
	0x6d, 0x62, 0x6f, 0x6c, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0b, 0x74, 0x6f, 0x6b, 0x65,
	0x6e, 0x53, 0x79, 0x6d, 0x62, 0x6f, 0x6c, 0x12, 0x19, 0x0a, 0x08, 0x75, 0x73, 0x72, 0x5f, 0x61,
	0x64, 0x64, 0x72, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x75, 0x73, 0x72, 0x41, 0x64,
	0x64, 0x72, 0x22, 0xe4, 0x01, 0x0a, 0x1b, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e,
	0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32,
	0x0f, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67,
	0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x49, 0x0a, 0x07, 0x72, 0x65, 0x71, 0x5f, 0x61, 0x6d, 0x74,
	0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x30, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65,
	0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x41, 0x6d, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x2e, 0x52, 0x65, 0x71,
	0x41, 0x6d, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x52, 0x06, 0x72, 0x65, 0x71, 0x41, 0x6d, 0x74,
	0x1a, 0x57, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x41, 0x6d, 0x74, 0x45, 0x6e, 0x74, 0x72, 0x79, 0x12,
	0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x03, 0x6b, 0x65,
	0x79, 0x12, 0x32, 0x0a, 0x05, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b,
	0x32, 0x1c, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d, 0x74, 0x52, 0x05,
	0x76, 0x61, 0x6c, 0x75, 0x65, 0x3a, 0x02, 0x38, 0x01, 0x22, 0xeb, 0x01, 0x0a, 0x13, 0x45, 0x73,
	0x74, 0x69, 0x6d, 0x61, 0x74, 0x65, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x41, 0x6d,
	0x74, 0x12, 0x2b, 0x0a, 0x12, 0x65, 0x71, 0x5f, 0x76, 0x61, 0x6c, 0x75, 0x65, 0x5f, 0x74, 0x6f,
	0x6b, 0x65, 0x6e, 0x5f, 0x61, 0x6d, 0x74, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x65,
	0x71, 0x56, 0x61, 0x6c, 0x75, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x41, 0x6d, 0x74, 0x12, 0x1f,
	0x0a, 0x0b, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x5f, 0x72, 0x61, 0x74, 0x65, 0x18, 0x02, 0x20,
	0x01, 0x28, 0x02, 0x52, 0x0a, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x52, 0x61, 0x74, 0x65, 0x12,
	0x19, 0x0a, 0x08, 0x70, 0x65, 0x72, 0x63, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x07, 0x70, 0x65, 0x72, 0x63, 0x46, 0x65, 0x65, 0x12, 0x19, 0x0a, 0x08, 0x62, 0x61,
	0x73, 0x65, 0x5f, 0x66, 0x65, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x07, 0x62, 0x61,
	0x73, 0x65, 0x46, 0x65, 0x65, 0x12, 0x2d, 0x0a, 0x12, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67,
	0x65, 0x5f, 0x74, 0x6f, 0x6c, 0x65, 0x72, 0x61, 0x6e, 0x63, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x0d, 0x52, 0x11, 0x73, 0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6c, 0x65, 0x72,
	0x61, 0x6e, 0x63, 0x65, 0x12, 0x21, 0x0a, 0x0c, 0x6d, 0x61, 0x78, 0x5f, 0x73, 0x6c, 0x69, 0x70,
	0x70, 0x61, 0x67, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x0d, 0x52, 0x0b, 0x6d, 0x61, 0x78, 0x53,
	0x6c, 0x69, 0x70, 0x70, 0x61, 0x67, 0x65, 0x22, 0xc3, 0x01, 0x0a, 0x18, 0x57, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69, 0x74, 0x79, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x21, 0x0a, 0x0c, 0x77, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77,
	0x5f, 0x72, 0x65, 0x71, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0c, 0x52, 0x0b, 0x77, 0x69, 0x74, 0x68,
	0x64, 0x72, 0x61, 0x77, 0x52, 0x65, 0x71, 0x12, 0x10, 0x0a, 0x03, 0x73, 0x69, 0x67, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x0c, 0x52, 0x03, 0x73, 0x69, 0x67, 0x12, 0x34, 0x0a, 0x16, 0x65, 0x73, 0x74,
	0x69, 0x6d, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x72, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f,
	0x61, 0x6d, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x14, 0x65, 0x73, 0x74, 0x69, 0x6d,
	0x61, 0x74, 0x65, 0x64, 0x52, 0x65, 0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x41, 0x6d, 0x74, 0x12,
	0x3c, 0x0a, 0x0b, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x5f, 0x74, 0x79, 0x70, 0x65, 0x18, 0x04,
	0x20, 0x01, 0x28, 0x0e, 0x32, 0x1b, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x57,
	0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70,
	0x65, 0x52, 0x0a, 0x6d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x22, 0x57, 0x0a,
	0x19, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61, 0x77, 0x4c, 0x69, 0x71, 0x75, 0x69, 0x64, 0x69,
	0x74, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x21, 0x0a, 0x03, 0x65, 0x72,
	0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67,
	0x65, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x03, 0x65, 0x72, 0x72, 0x12, 0x17, 0x0a,
	0x07, 0x73, 0x65, 0x71, 0x5f, 0x6e, 0x75, 0x6d, 0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x06,
	0x73, 0x65, 0x71, 0x4e, 0x75, 0x6d, 0x22, 0x88, 0x03, 0x0a, 0x0f, 0x54, 0x72, 0x61, 0x6e, 0x73,
	0x66, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x1f, 0x0a, 0x0b, 0x74, 0x72,
	0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0a, 0x74, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x64, 0x12, 0x39, 0x0a, 0x0d, 0x73,
	0x72, 0x63, 0x5f, 0x73, 0x65, 0x6e, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x0b, 0x32, 0x15, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61,
	0x6e, 0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0b, 0x73, 0x72, 0x63, 0x53, 0x65,
	0x6e, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x41, 0x0a, 0x11, 0x64, 0x73, 0x74, 0x5f, 0x72, 0x65,
	0x63, 0x65, 0x69, 0x76, 0x65, 0x64, 0x5f, 0x69, 0x6e, 0x66, 0x6f, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x15, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e,
	0x73, 0x66, 0x65, 0x72, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x0f, 0x64, 0x73, 0x74, 0x52, 0x65, 0x63,
	0x65, 0x69, 0x76, 0x65, 0x64, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x74, 0x73, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x02, 0x74, 0x73, 0x12, 0x29, 0x0a, 0x11, 0x73, 0x72, 0x63,
	0x5f, 0x62, 0x6c, 0x6f, 0x63, 0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x05,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x73, 0x72, 0x63, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x78,
	0x4c, 0x69, 0x6e, 0x6b, 0x12, 0x29, 0x0a, 0x11, 0x64, 0x73, 0x74, 0x5f, 0x62, 0x6c, 0x6f, 0x63,
	0x6b, 0x5f, 0x74, 0x78, 0x5f, 0x6c, 0x69, 0x6e, 0x6b, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x0e, 0x64, 0x73, 0x74, 0x42, 0x6c, 0x6f, 0x63, 0x6b, 0x54, 0x78, 0x4c, 0x69, 0x6e, 0x6b, 0x12,
	0x36, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x18, 0x07, 0x20, 0x01, 0x28, 0x0e, 0x32,
	0x1e, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66,
	0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x53, 0x74, 0x61, 0x74, 0x75, 0x73, 0x52,
	0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12, 0x38, 0x0a, 0x0d, 0x72, 0x65, 0x66, 0x75, 0x6e,
	0x64, 0x5f, 0x72, 0x65, 0x61, 0x73, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x13,
	0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x58, 0x66, 0x65, 0x72, 0x53, 0x74, 0x61,
	0x74, 0x75, 0x73, 0x52, 0x0c, 0x72, 0x65, 0x66, 0x75, 0x6e, 0x64, 0x52, 0x65, 0x61, 0x73, 0x6f,
	0x6e, 0x22, 0x71, 0x0a, 0x16, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x69, 0x73,
	0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x0f, 0x6e,
	0x65, 0x78, 0x74, 0x5f, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f,
	0x6b, 0x65, 0x6e, 0x12, 0x1b, 0x0a, 0x09, 0x70, 0x61, 0x67, 0x65, 0x5f, 0x73, 0x69, 0x7a, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x04, 0x52, 0x08, 0x70, 0x61, 0x67, 0x65, 0x53, 0x69, 0x7a, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x61, 0x64, 0x64, 0x72, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x61, 0x64, 0x64, 0x72, 0x22, 0xbb, 0x01, 0x0a, 0x17, 0x54, 0x72, 0x61, 0x6e, 0x73, 0x66, 0x65,
	0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x12, 0x21, 0x0a, 0x03, 0x65, 0x72, 0x72, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e,
	0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x52, 0x03,
	0x65, 0x72, 0x72, 0x12, 0x32, 0x0a, 0x07, 0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x18, 0x02,
	0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x63, 0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x2e, 0x54,
	0x72, 0x61, 0x6e, 0x73, 0x66, 0x65, 0x72, 0x48, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x52, 0x07,
	0x68, 0x69, 0x73, 0x74, 0x6f, 0x72, 0x79, 0x12, 0x26, 0x0a, 0x0f, 0x6e, 0x65, 0x78, 0x74, 0x5f,
	0x70, 0x61, 0x67, 0x65, 0x5f, 0x74, 0x6f, 0x6b, 0x65, 0x6e, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x0d, 0x6e, 0x65, 0x78, 0x74, 0x50, 0x61, 0x67, 0x65, 0x54, 0x6f, 0x6b, 0x65, 0x6e, 0x12,
	0x21, 0x0a, 0x0c, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x5f, 0x73, 0x69, 0x7a, 0x65, 0x18,
	0x04, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0b, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x74, 0x53, 0x69,
	0x7a, 0x65, 0x22, 0x40, 0x0a, 0x06, 0x45, 0x72, 0x72, 0x4d, 0x73, 0x67, 0x12, 0x24, 0x0a, 0x04,
	0x63, 0x6f, 0x64, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x10, 0x2e, 0x63, 0x62, 0x72,
	0x69, 0x64, 0x67, 0x65, 0x2e, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x04, 0x63, 0x6f,
	0x64, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6d, 0x73, 0x67, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x03, 0x6d, 0x73, 0x67, 0x2a, 0x8e, 0x01, 0x0a, 0x12, 0x57, 0x69, 0x74, 0x68, 0x64, 0x72, 0x61,
	0x77, 0x4d, 0x65, 0x74, 0x68, 0x6f, 0x64, 0x54, 0x79, 0x70, 0x65, 0x12, 0x1c, 0x0a, 0x18, 0x57,
	0x44, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x55, 0x4e,
	0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x19, 0x0a, 0x15, 0x57, 0x44, 0x5f,
	0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x4f, 0x4e, 0x45, 0x5f,
	0x52, 0x4d, 0x10, 0x01, 0x12, 0x1d, 0x0a, 0x19, 0x57, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f,
	0x44, 0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x41, 0x4c, 0x4c, 0x5f, 0x49, 0x4e, 0x5f, 0x4f, 0x4e,
	0x45, 0x10, 0x02, 0x12, 0x20, 0x0a, 0x1c, 0x57, 0x44, 0x5f, 0x4d, 0x45, 0x54, 0x48, 0x4f, 0x44,
	0x5f, 0x54, 0x59, 0x50, 0x45, 0x5f, 0x53, 0x54, 0x41, 0x4b, 0x49, 0x4e, 0x47, 0x5f, 0x43, 0x4c,
	0x41, 0x49, 0x4d, 0x10, 0x03, 0x2a, 0xa0, 0x01, 0x0a, 0x07, 0x45, 0x72, 0x72, 0x43, 0x6f, 0x64,
	0x65, 0x12, 0x18, 0x0a, 0x14, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f,
	0x55, 0x4e, 0x44, 0x45, 0x46, 0x49, 0x4e, 0x45, 0x44, 0x10, 0x00, 0x12, 0x16, 0x0a, 0x11, 0x45,
	0x52, 0x52, 0x4f, 0x52, 0x5f, 0x43, 0x4f, 0x44, 0x45, 0x5f, 0x43, 0x4f, 0x4d, 0x4d, 0x4f, 0x4e,
	0x10, 0xf4, 0x03, 0x12, 0x20, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e, 0x4f, 0x5f,
	0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x4f, 0x4e, 0x5f, 0x44, 0x53, 0x54, 0x5f, 0x43, 0x48, 0x41,
	0x49, 0x4e, 0x10, 0xe9, 0x07, 0x12, 0x20, 0x0a, 0x1b, 0x45, 0x52, 0x52, 0x4f, 0x52, 0x5f, 0x4e,
	0x4f, 0x5f, 0x54, 0x4f, 0x4b, 0x45, 0x4e, 0x5f, 0x4f, 0x4e, 0x5f, 0x53, 0x52, 0x43, 0x5f, 0x43,
	0x48, 0x41, 0x49, 0x4e, 0x10, 0xea, 0x07, 0x12, 0x1f, 0x0a, 0x1a, 0x45, 0x52, 0x52, 0x4f, 0x52,
	0x5f, 0x49, 0x4e, 0x49, 0x54, 0x5f, 0x57, 0x49, 0x54, 0x48, 0x44, 0x52, 0x41, 0x57, 0x5f, 0x46,
	0x41, 0x49, 0x4c, 0x45, 0x44, 0x10, 0xeb, 0x07, 0x42, 0x0c, 0x5a, 0x0a, 0x2e, 0x2e, 0x2f, 0x63,
	0x62, 0x72, 0x69, 0x64, 0x67, 0x65, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_gateway_proto_rawDescOnce sync.Once
	file_gateway_proto_rawDescData = file_gateway_proto_rawDesc
)

func file_gateway_proto_rawDescGZIP() []byte {
	file_gateway_proto_rawDescOnce.Do(func() {
		file_gateway_proto_rawDescData = protoimpl.X.CompressGZIP(file_gateway_proto_rawDescData)
	})
	return file_gateway_proto_rawDescData
}

var file_gateway_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_gateway_proto_msgTypes = make([]protoimpl.MessageInfo, 24)
var file_gateway_proto_goTypes = []interface{}{
	(WithdrawMethodType)(0),             // 0: cbridge.WithdrawMethodType
	(ErrCode)(0),                        // 1: cbridge.ErrCode
	(*Chain)(nil),                       // 2: cbridge.Chain
	(*ChainTokenInfo)(nil),              // 3: cbridge.ChainTokenInfo
	(*TokenInfo)(nil),                   // 4: cbridge.TokenInfo
	(*TransferInfo)(nil),                // 5: cbridge.TransferInfo
	(*GetTransferStatusRequest)(nil),    // 6: cbridge.GetTransferStatusRequest
	(*GetTransferStatusResponse)(nil),   // 7: cbridge.GetTransferStatusResponse
	(*GetTransferConfigsRequest)(nil),   // 8: cbridge.GetTransferConfigsRequest
	(*GetTransferConfigsResponse)(nil),  // 9: cbridge.GetTransferConfigsResponse
	(*GetTokenInfoRequest)(nil),         // 10: cbridge.GetTokenInfoRequest
	(*GetTokenInfoResponse)(nil),        // 11: cbridge.GetTokenInfoResponse
	(*EstimateAmtRequest)(nil),          // 12: cbridge.EstimateAmtRequest
	(*EstimateAmtResponse)(nil),         // 13: cbridge.EstimateAmtResponse
	(*WithdrawInfo)(nil),                // 14: cbridge.WithdrawInfo
	(*EstimateWithdrawAmtRequest)(nil),  // 15: cbridge.EstimateWithdrawAmtRequest
	(*EstimateWithdrawAmtResponse)(nil), // 16: cbridge.EstimateWithdrawAmtResponse
	(*EstimateWithdrawAmt)(nil),         // 17: cbridge.EstimateWithdrawAmt
	(*WithdrawLiquidityRequest)(nil),    // 18: cbridge.WithdrawLiquidityRequest
	(*WithdrawLiquidityResponse)(nil),   // 19: cbridge.WithdrawLiquidityResponse
	(*TransferHistory)(nil),             // 20: cbridge.TransferHistory
	(*TransferHistoryRequest)(nil),      // 21: cbridge.TransferHistoryRequest
	(*TransferHistoryResponse)(nil),     // 22: cbridge.TransferHistoryResponse
	(*ErrMsg)(nil),                      // 23: cbridge.ErrMsg
	nil,                                 // 24: cbridge.GetTransferConfigsResponse.ChainTokenEntry
	nil,                                 // 25: cbridge.EstimateWithdrawAmtResponse.ReqAmtEntry
	(*Token)(nil),                       // 26: cbridge.Token
	(TransferHistoryStatus)(0),          // 27: cbridge.TransferHistoryStatus
	(XferStatus)(0),                     // 28: cbridge.XferStatus
}
var file_gateway_proto_depIdxs = []int32{
	4,  // 0: cbridge.ChainTokenInfo.token:type_name -> cbridge.TokenInfo
	26, // 1: cbridge.TokenInfo.token:type_name -> cbridge.Token
	2,  // 2: cbridge.TransferInfo.chain:type_name -> cbridge.Chain
	26, // 3: cbridge.TransferInfo.token:type_name -> cbridge.Token
	23, // 4: cbridge.GetTransferStatusResponse.err:type_name -> cbridge.ErrMsg
	27, // 5: cbridge.GetTransferStatusResponse.status:type_name -> cbridge.TransferHistoryStatus
	28, // 6: cbridge.GetTransferStatusResponse.refund_reason:type_name -> cbridge.XferStatus
	23, // 7: cbridge.GetTransferConfigsResponse.err:type_name -> cbridge.ErrMsg
	2,  // 8: cbridge.GetTransferConfigsResponse.chains:type_name -> cbridge.Chain
	24, // 9: cbridge.GetTransferConfigsResponse.chain_token:type_name -> cbridge.GetTransferConfigsResponse.ChainTokenEntry
	23, // 10: cbridge.GetTokenInfoResponse.err:type_name -> cbridge.ErrMsg
	4,  // 11: cbridge.GetTokenInfoResponse.token_info:type_name -> cbridge.TokenInfo
	23, // 12: cbridge.EstimateAmtResponse.err:type_name -> cbridge.ErrMsg
	14, // 13: cbridge.EstimateWithdrawAmtRequest.src_withdraws:type_name -> cbridge.WithdrawInfo
	23, // 14: cbridge.EstimateWithdrawAmtResponse.err:type_name -> cbridge.ErrMsg
	25, // 15: cbridge.EstimateWithdrawAmtResponse.req_amt:type_name -> cbridge.EstimateWithdrawAmtResponse.ReqAmtEntry
	0,  // 16: cbridge.WithdrawLiquidityRequest.method_type:type_name -> cbridge.WithdrawMethodType
	23, // 17: cbridge.WithdrawLiquidityResponse.err:type_name -> cbridge.ErrMsg
	5,  // 18: cbridge.TransferHistory.src_send_info:type_name -> cbridge.TransferInfo
	5,  // 19: cbridge.TransferHistory.dst_received_info:type_name -> cbridge.TransferInfo
	27, // 20: cbridge.TransferHistory.status:type_name -> cbridge.TransferHistoryStatus
	28, // 21: cbridge.TransferHistory.refund_reason:type_name -> cbridge.XferStatus
	23, // 22: cbridge.TransferHistoryResponse.err:type_name -> cbridge.ErrMsg
	20, // 23: cbridge.TransferHistoryResponse.history:type_name -> cbridge.TransferHistory
	1,  // 24: cbridge.ErrMsg.code:type_name -> cbridge.ErrCode
	3,  // 25: cbridge.GetTransferConfigsResponse.ChainTokenEntry.value:type_name -> cbridge.ChainTokenInfo
	17, // 26: cbridge.EstimateWithdrawAmtResponse.ReqAmtEntry.value:type_name -> cbridge.EstimateWithdrawAmt
	27, // [27:27] is the sub-list for method output_type
	27, // [27:27] is the sub-list for method input_type
	27, // [27:27] is the sub-list for extension type_name
	27, // [27:27] is the sub-list for extension extendee
	0,  // [0:27] is the sub-list for field type_name
}

func init() { file_gateway_proto_init() }
func file_gateway_proto_init() {
	if File_gateway_proto != nil {
		return
	}
	file_query_proto_init()
	file_cbridge_proto_init()
	if !protoimpl.UnsafeEnabled {
		file_gateway_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Chain); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ChainTokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TokenInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferStatusRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferStatusResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[6].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferConfigsRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[7].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTransferConfigsResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[8].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenInfoRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[9].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*GetTokenInfoResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[10].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateAmtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[11].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateAmtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[12].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawInfo); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[13].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateWithdrawAmtRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[14].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateWithdrawAmtResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[15].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*EstimateWithdrawAmt); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[16].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawLiquidityRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[17].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*WithdrawLiquidityResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[18].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferHistory); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[19].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferHistoryRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[20].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*TransferHistoryResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_gateway_proto_msgTypes[21].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*ErrMsg); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_gateway_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   24,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_gateway_proto_goTypes,
		DependencyIndexes: file_gateway_proto_depIdxs,
		EnumInfos:         file_gateway_proto_enumTypes,
		MessageInfos:      file_gateway_proto_msgTypes,
	}.Build()
	File_gateway_proto = out.File
	file_gateway_proto_rawDesc = nil
	file_gateway_proto_goTypes = nil
	file_gateway_proto_depIdxs = nil
}
