// Code generated by go-bindata. DO NOT EDIT.
// sources:
// ../config/README.md (3.132kB)
// ../config/cli/fleet-eth.prod.json (3.625kB)
// ../config/cli/fleet-eth.staging.json (1.846kB)
// ../config/cli/fleet-eth.test.json (1.855kB)
// ../config/cli/les-enabled.json (58B)
// ../config/cli/mailserver-enabled.json (176B)
// ../config/status-chain-genesis.json (612B)
// keys/bootnode.key (65B)
// keys/firebaseauthkey (153B)
// keys/test-account1-status-chain.pk (489B)
// keys/test-account1.pk (491B)
// keys/test-account2-status-chain.pk (489B)
// keys/test-account2.pk (491B)
// keys/test-account3-before-eip55.pk (489B)

package static

import (
	"bytes"
	"compress/gzip"
	"crypto/sha256"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes  []byte
	info   os.FileInfo
	digest [sha256.Size]byte
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ConfigReadmeMd = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x94\x56\x5d\x6f\xdb\x3a\x12\x7d\xd7\xaf\x18\xa8\x0f\xdb\x00\xa9\xe4\xc4\x76\x92\xab\x97\x6d\x9a\xa4\x37\xd9\x4d\xd3\xc0\x49\xf7\x3e\x14\x45\x44\x8b\x63\x89\xb7\x14\x47\x97\xa4\xec\xba\x8b\xfe\xf7\xc5\x50\x92\x3f\x92\xec\x02\x8b\x04\xb6\x45\xce\x1c\xce\x9c\x33\x9a\xe1\x1b\xb8\x31\xde\x92\x6c\x0b\xaf\xc8\x44\xd1\x63\xa5\x1c\x48\x2a\xda\x1a\x8d\x07\x89\xae\xb0\x6a\x8e\x0e\x7c\x85\x20\x96\x42\x69\x31\xd7\x08\xd4\xb0\xb5\x03\x65\xc2\xc6\x3f\x1e\x3e\xdf\x41\x41\x66\xa1\x4a\x58\x90\x85\xdc\x79\xe1\x5b\xf7\xae\xa4\x3c\x61\x48\x04\xe7\x6d\x5b\xf8\xd6\x22\xd0\xe2\x85\x0b\x9f\x88\x0b\x65\x50\x0e\x80\x5f\xf3\x46\x58\x51\xbb\xb4\xb3\x48\x4a\xca\xbf\xbd\x4d\x9f\xaf\x1d\xc0\x42\x69\x3c\x84\x55\xa5\x8a\x0a\x84\x76\xc4\x88\x5e\x28\xc3\x80\x5e\x28\x8d\x12\x0a\xaa\x39\x15\x07\x64\xa0\x46\x61\x94\x29\x39\x06\x14\x45\xd5\xa7\x91\x00\x47\x98\xdf\x91\xc4\x8b\x00\x9d\xf7\xe1\xf6\x51\x75\xc9\x97\x68\xd0\x0a\xdd\xc7\xdc\x5a\xc1\xae\xf0\x1d\xd7\x0e\x84\x0f\x16\x4f\x4f\x96\xc8\x3f\x3d\xed\xa5\xc8\x11\x26\x51\x74\xd3\x2d\x75\x7c\xf6\xe4\xd1\x02\x84\x59\x6f\xb8\x14\x16\xc1\x13\xc1\x52\x94\x2d\xc2\x02\x51\xc3\xc2\x22\xaf\xc1\x57\x6a\xd0\x80\x30\xa0\x9c\x6b\xf1\xdb\xdb\xca\xfb\xc6\x65\x69\x5a\x2a\x5f\xb5\xf3\xa4\xa0\x3a\xed\x19\x57\x9b\x5f\x25\xa5\xc1\xda\xa5\x06\x57\x07\x49\x14\x5d\xfd\x10\x75\xa3\x71\xa3\x93\xd2\xe8\xa0\x10\x06\xe6\x08\x4b\x85\xab\x5d\xf6\x3b\x9b\xb4\xd0\x8a\x79\xdf\x3e\x1d\xc0\x82\xb4\x44\x9b\x44\xd1\x1b\xb8\xa9\x1b\xb2\x5e\x18\x0f\x0f\x18\xaa\xc7\x75\x5a\x3f\x93\xd6\x21\xeb\xe6\x03\xbc\x27\x70\xb8\x0c\x3c\xba\xde\xa7\x63\xbf\x26\xe7\x41\x6d\x00\x89\x59\x67\x42\xb4\x72\xec\x39\x47\x4d\x2b\x3e\xf4\xcd\x9e\x4e\xdd\x79\xcc\xfa\x2b\x65\xd5\x4b\x94\x44\xd1\xb9\x01\xec\x93\xa7\xc5\xf3\xa3\x1c\x7a\xaf\x4c\xe9\x60\x45\xad\xe6\x18\x0b\xdd\x4a\xcc\xa2\x3c\xcf\xff\x74\x64\xa2\x7f\x47\x00\x00\xf1\x1d\xfa\x15\xd9\xef\x37\x97\x71\x06\x47\x87\xdd\xda\xa5\xf0\xe2\x52\xd9\x38\x83\x38\xf5\x75\xb3\x65\xfe\x9d\x14\x5e\xc4\xbd\x15\xc7\xfb\x4f\x5c\xb3\xd5\xd1\xf1\xf8\xaf\x15\x3e\xfb\x1c\xec\x66\x68\x24\xfe\x5c\x52\xeb\xe2\x0c\xbc\x6d\x71\xe3\x7f\xa9\x5c\x41\x4b\xb4\x8c\xb1\x10\xda\x0d\x3b\xb7\x4c\x8e\x39\x97\x32\x84\x30\x4a\xc2\x5f\x36\x1e\x8d\x47\x1b\xd0\x73\xb9\x44\xeb\x95\xc3\xc1\xea\xe8\x38\x19\x4f\x92\xe9\x49\x72\x7a\xb6\x3d\xb8\x64\x20\xfb\x48\x8d\x2a\xf8\xf0\xaf\xf1\xaa\x52\xae\x41\x5b\x0b\xa5\xe3\x6f\xd1\x2f\x26\x23\xd4\xf0\x9a\xda\xbf\x49\x58\x31\x6f\x9e\x00\x4d\x68\x06\x81\xf3\xd9\xfd\x05\x30\xa5\xbd\x89\x41\x94\x2f\x38\xbc\x7e\x7c\xbc\xbf\x0a\x3e\x72\x3f\x45\xde\xb8\x26\xe7\x77\xd2\x88\x77\xb6\xee\xc9\xf2\xd6\xd9\x74\x32\x1d\xd2\xba\xbf\xf9\x44\xb2\xd5\xc8\xe1\xc6\xe8\xab\x43\x83\xfe\x70\x85\xf3\xf1\xa1\x90\xb5\x32\xf1\x26\x66\x03\x64\x25\x5a\x0e\x57\xc8\x3f\x5b\xe7\x41\x53\x59\x72\x13\xd8\x08\xff\x3f\x22\xbe\xa5\xf2\xa3\xd2\x18\x14\x5e\x0a\x9b\x6a\x2a\xb7\x2a\x27\x9a\xca\x21\xcc\x5b\x2a\x6f\x71\x89\x9a\x2d\x6f\xee\x3e\x7e\xde\x59\xff\x24\x7e\x3c\xa8\x9f\x8c\x71\x3c\x1a\xed\x2d\x7f\x10\xc5\xf7\xb6\xe1\x14\xa6\xdb\xf5\x0b\xaa\x1b\x8b\xce\xcd\xc8\xf3\x4b\xd3\x13\xd5\xe7\xf3\x2f\xa1\x95\x84\x7c\x38\x2d\xdf\x26\x21\x2c\x66\x90\x5f\xcd\x66\x9f\x67\xf9\x21\xe4\x7f\x9c\xcf\xee\xf8\x9b\x63\xe1\xef\xcb\xab\x0f\x5f\x7e\xe7\x1f\x8f\xb3\xf3\x8b\xab\xbc\x7b\x93\xfe\xe8\x54\x1e\x9a\xde\xa0\x70\xa7\xef\x9a\x5a\x0b\x86\x64\x68\x40\x16\xb5\x58\x43\x6f\xff\xf6\xe1\xfa\xfa\x00\x1a\x4b\x9e\x0a\xd2\x50\xa3\x73\xa2\xc4\x8e\x47\xad\x37\xd5\xd1\xbf\x49\xe0\x2b\xe5\x5e\x10\xbb\x77\x74\x9c\x41\xb7\x1c\xb6\x5e\xab\x90\x9d\x8d\x4f\x42\xe9\x07\xb4\x4b\xb4\x2f\x2d\x6e\x55\x59\xf9\x0b\xad\xd0\xf8\xfd\x57\x25\xec\x6e\x3d\xef\x85\x73\x2b\xb2\x7c\x46\xdc\xcb\x49\x8b\x85\x56\x06\xdf\x29\x33\xa7\x1f\x71\x70\xfa\xd5\x93\x1e\xa6\xc3\x4b\xe7\x9c\x9b\x5b\xeb\x50\x86\x91\xe7\xd6\x75\x8d\xde\xaa\x02\xd0\x14\x76\x1d\x7a\x3a\x77\x9b\x4a\x39\x4f\x76\x0d\x16\xff\x6a\xd1\x79\x97\x44\xd1\x87\x35\x0f\x16\xd1\x6a\x0f\xca\xc3\x4a\x69\xcd\x30\x90\x6b\x96\x54\xce\x73\xc0\x7a\x8e\x52\xa2\x04\x6e\x23\x73\xe1\x30\x81\x47\x0a\x36\x0d\x39\x5f\x5a\xe4\xc1\xeb\x3c\x0a\x19\xe4\xe2\xca\x65\xc2\x23\x21\x65\x60\x9b\x1f\x82\x7c\x5d\x23\xcc\xa2\xe7\xec\x5f\xf6\xb8\x2f\xe8\x8f\xef\x7f\xff\xbf\x24\xf9\x32\xbb\x61\x0e\x87\xb0\xb2\x34\x6d\x1d\xda\xac\xe9\x29\x7a\x5f\x91\xf3\x19\xb7\x85\xbf\xf7\x53\x2e\xee\x7d\x7f\xed\x31\x1c\x3d\x3d\xdd\x7d\x7e\xbc\xca\x9e\x9e\xc2\x30\x18\xd8\x19\x60\x3a\x96\xe7\x6b\x78\x08\x5a\xc1\x79\xd3\x80\x30\x12\xbe\x72\x8e\xdc\xa3\x5c\x10\xc6\x6d\x07\xe3\x42\x23\x7a\x97\x74\xda\x26\xaa\x4e\x0f\x58\xac\xfc\x35\xad\xf3\x7e\xac\x5c\xe8\x96\x9b\xe0\xce\x64\x51\x6e\x98\x62\xb5\x30\xa1\xc2\x57\x95\xf0\xd0\x20\x5a\x17\xce\x9f\x13\x79\xe7\xad\x68\xc2\x7b\xe2\x3a\xce\x77\xee\x3e\x41\x25\x61\x8a\x30\x73\x0d\x16\x9e\x11\xd0\xb0\xea\xce\x0b\xcb\xc5\xb0\x2b\x4c\xbc\x17\xc2\x46\x81\x57\xd9\x8f\x3f\x72\x86\x7d\xf3\x4b\x1a\x4b\x72\xe8\x38\x1f\x88\x3c\x8f\x9c\xd0\xc8\x07\x59\x91\x03\xcc\xd2\x74\x3c\x99\xa2\xf5\xdd\xe7\xfb\xe3\x71\x32\x99\x26\x27\xa7\xc9\xd9\x6f\xd9\x78\x34\x19\x4d\x3a\x71\xbe\xf5\x40\x8f\x96\xa3\x91\xdb\xc2\x7f\x15\x71\x77\x92\xbd\xff\xed\x2c\x39\x3d\x49\xa6\x93\x64\x7c\x9c\x8d\x47\xd3\xe7\x88\x2c\x9f\x2a\xfe\x6b\x70\xbb\x73\xf1\xfd\xce\x9c\x0a\x13\x6d\xba\x0f\xb5\x1d\x96\x2f\xe0\x52\xd5\x4c\xd2\xb3\xd3\xe4\x64\x9a\x4c\xc6\xc9\xf1\x51\xea\x8b\x26\x1d\x8f\x4e\x47\xe3\x14\x7d\xb5\x9c\xa4\x47\x27\x5f\x54\x7b\x7c\x7d\x5e\x8f\x8f\x8e\x5f\xfd\xef\x8f\x8a\xb6\x05\x9a\x6f\x58\xcd\xa1\x42\xdd\x84\xbb\xc6\xab\x4a\x2f\x94\x91\x5d\x89\x84\x8b\xcd\x3a\xdc\x62\x6a\xb2\xb8\x73\xe5\xf0\x04\x95\x58\x72\x67\x14\x06\xf2\x1d\x56\x72\xe0\xcb\xf3\x4b\xe2\xf3\xcd\x1d\xd7\x22\x84\x21\xe6\x82\x93\xd0\x7a\x0d\x22\xb4\x8a\xae\x2a\xc9\x74\x95\x95\x44\x51\xfe\x8c\xa2\x3c\x38\x0b\x03\x42\x7b\xb4\x46\x78\xb5\xc4\x6d\x13\xe7\x16\x26\x89\xc7\x22\x67\xe6\x44\x8d\x01\x11\xe4\x70\xf5\x00\xe1\x60\x97\x05\x49\x49\xf4\x9f\x00\x00\x00\xff\xff\xb7\xa7\x30\xd0\x3c\x0c\x00\x00")

func ConfigReadmeMdBytes() ([]byte, error) {
	return bindataRead(
		_ConfigReadmeMd,
		"../config/README.md",
	)
}

func ConfigReadmeMd() (*asset, error) {
	bytes, err := ConfigReadmeMdBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/README.md", size: 3132, mode: os.FileMode(0644), modTime: time.Unix(1584434371, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd0, 0x71, 0x14, 0x3e, 0x9d, 0x9c, 0x11, 0x40, 0xe1, 0xe9, 0x8b, 0xcc, 0x38, 0x17, 0x69, 0xb, 0xa7, 0xf2, 0x91, 0xa6, 0x4a, 0x9f, 0xd2, 0xc6, 0xf4, 0xff, 0x37, 0x5d, 0xd3, 0xed, 0x7c, 0xbd}}
	return a, nil
}

var _ConfigCliFleetEthProdJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x56\x5d\x6f\x55\xc7\x92\x7d\xcf\xaf\xb0\xfc\x3c\x3a\xd4\x47\x57\x75\x37\x4f\x0c\xb1\x89\x45\x02\x32\x24\x36\x70\x47\xf3\x50\x5f\x0d\xbe\x97\x6b\x83\x6d\x9c\xc0\x28\xff\x7d\xb4\x09\x57\x21\x1f\xe7\xe9\x48\x7d\xb6\x76\xad\xbd\x6a\xad\xd5\xeb\xff\xbe\x39\x38\x38\x7c\x5e\x97\x59\x9f\xee\xae\x3e\xdc\x1c\xde\x3f\xb8\xbd\xfe\x50\xff\xb5\x9d\x3e\xbd\x3a\xba\xb8\x89\xab\xbb\xba\xfe\x78\x78\xff\x60\xd9\xdb\x9b\xdf\xce\xbf\x7d\xfb\xe1\xe6\xb6\xae\xbf\xbd\xba\x5c\x17\xaf\x0f\xef\x1f\x6c\xaf\x38\x38\x38\x3c\xbe\x34\x7f\x5b\xf9\xd5\x1b\x0e\x0e\x0e\x1f\xbd\xad\xba\x3d\xbc\x7f\x70\x58\xb7\x6f\x76\xef\xae\xaf\xf2\xf0\xcb\x1f\x0f\xaf\xae\x6e\x9f\x5e\x65\x6d\x13\xff\xe7\xf3\xd1\xc1\xc1\x61\x5d\x5e\x65\xdd\xbf\x77\x4f\x4b\x45\xda\x72\x06\x6e\x4e\x88\x3c\xc7\x8a\x84\x05\x30\x28\xdc\xd5\x13\x59\x71\x16\x5a\xaf\xae\x6e\xaa\x85\x03\xa6\x99\x41\xc8\x42\x0b\xe1\x98\x56\x7d\xc6\xa2\x95\xcd\xba\x5b\x38\x42\x22\x01\xc2\x98\xd3\xb9\x43\x74\x59\x95\x38\x7d\x4e\xcc\x19\x10\x99\x40\x63\xa2\xb9\xe5\x83\xd6\x77\x5d\x76\x73\xee\x50\xe7\xfd\xd6\xf8\x0b\xea\xaf\x20\x36\xd6\x08\x5d\xda\xdb\xa4\xb1\x32\xa6\xcd\xd5\xe7\x84\x45\xb3\x35\x00\x72\x1d\x92\x18\xdc\x17\x90\x04\x7a\x35\x12\x1c\xe2\xe2\xb8\x60\x02\xac\xb2\x85\x11\x41\xa6\xc8\x40\x3a\xd6\x9c\xb0\x3d\x66\x3d\x49\x68\x71\x67\xa0\x18\xcc\x62\x14\x68\x4a\x9d\xb5\x26\x31\xe9\xc4\x08\xb6\x07\xd8\xc7\x0e\x69\xec\x90\x3f\xff\xfe\x3d\x4a\xa6\xb5\x34\xc7\xe8\x0a\x0e\xb3\x75\xe3\xac\x92\x16\xb5\x56\xcb\x91\x7d\x81\xb7\x00\xe2\xd0\xb4\xe4\x26\x3a\x14\x65\x85\xd5\x98\x45\x1a\x41\x5d\x78\xd1\x58\x48\x6d\x88\x35\x44\x8d\xd9\xbb\xd7\xe4\x6e\x9d\x54\x05\x51\x65\x2a\xa9\x98\x41\x67\x75\xe1\x6c\xea\xd4\x5b\x53\x9a\x6a\x0f\xb8\xed\x3a\x6c\x5c\x12\xec\x81\x48\x9c\xd0\x1b\x38\xe2\xc4\xc9\x32\x94\x24\xfb\xcc\x16\x16\x3d\x05\x8c\x5b\xf6\x59\x33\x74\x16\xea\x60\x0c\x89\x0e\xd2\xb9\x4b\x37\x5c\x92\x3d\xc7\x68\x82\xe0\x21\x53\xb2\x57\xb5\x34\x0e\x14\x18\x96\x6b\x74\xf7\x98\x35\x49\x21\x07\xb4\x5a\xc0\x6b\x04\x16\xf7\x45\xcb\x69\x85\xce\x6d\xd7\x42\x3b\x04\xdd\x21\xf4\xbf\xc7\x28\x3c\xc5\xcc\xfb\x60\x5e\x58\xe1\xda\xd1\x65\xfa\x02\x21\x8c\x45\x40\xd4\x56\x0d\x54\x5a\xc1\x49\xda\x25\xab\x6d\x40\x44\x59\xad\x4b\x05\x53\x22\x6f\x4b\x0e\x1c\x2d\xd7\x48\xcc\x5c\x36\x80\x67\xe3\x09\x3a\x06\xa5\x29\x59\xcb\xd5\x28\xdb\x8a\x58\x9a\xd8\x07\x0c\x14\xb5\xd1\x7f\x5f\x76\x83\x1d\x8e\x3d\x4c\x4a\x03\x09\x81\x99\x4b\x07\xc7\x54\xaa\x1e\xb3\x75\x70\x12\x74\xd7\x3e\x33\x75\xf6\xb1\x06\xa5\x78\xd3\xb9\x70\x69\x68\x4b\xc4\x14\x58\x9e\x92\x39\x57\x1f\x80\xa1\x96\x82\x8b\x9d\xc0\x64\x69\xf4\xb5\x8a\xda\x88\x98\xe6\x44\xbc\x86\x87\xdb\xa6\xdf\xe6\x8e\x01\xb5\x68\xca\x4a\x78\xc0\xb2\x23\xe2\x1d\xa1\xec\x50\xf4\x33\xc8\xcf\x18\xff\xf7\x8b\xe7\x7f\xba\xde\x82\x23\x9f\xd8\xc5\xdb\x1f\xeb\xfa\xae\xae\xff\xde\xfc\xa0\x56\xd0\xac\x63\x49\xfa\xd0\x61\x9d\x28\x7a\x37\xc2\x18\xd4\x9a\x15\x8f\x85\x9e\xba\x31\x3e\x7a\x84\xc6\xaa\x31\x8c\x41\x79\x19\x06\x35\xd1\x49\xc4\xb4\xb4\xad\x26\x9e\xd2\x60\xac\x4a\x41\xe6\x32\x1f\x95\x7d\x40\x9b\xcc\xe4\xd0\xd6\x0c\x44\x28\x8b\xbe\x3a\x06\x7a\xa3\xf9\xc5\xfc\xd4\xfa\x8e\xb0\xfd\x3d\xd5\xd1\x68\xb1\x0e\x23\x5e\x36\xc7\x66\x29\x5d\x49\xad\x13\x41\x97\x09\x4a\x4c\x4c\x6d\xd6\x52\xe9\x49\x9a\x2c\xdd\x7a\xef\xad\xb1\x55\x40\x4b\x47\xa7\x69\x6c\x44\xb5\xb8\x7a\x48\x1b\x85\xa3\x4d\xce\xb4\x25\x68\x8c\x0e\x56\xa9\xd0\xe7\xf6\xa1\x5e\x62\x35\x78\xac\x58\xb6\xd8\xda\xfc\x4a\x10\xb4\x93\x3d\x20\xab\xc8\x85\x1d\x2c\x6a\xea\x24\xd4\x6e\x0d\x41\xb0\x79\x18\x03\x35\x9d\x92\xbe\xa0\xd0\x74\x14\xe6\x5a\xb3\xa3\x6e\x3a\x84\x5a\x8e\x53\x16\x34\x6b\x3e\x6b\x74\x5e\x3e\xbd\x37\x8b\xd1\xb2\x06\x20\x82\x46\x53\xf1\x51\xe4\x1a\x6d\x41\x4e\xf6\xd1\xdb\x4c\x94\x3e\x7c\x85\x2d\xe0\x7a\x80\xd0\x76\x38\xfb\x8e\xb6\x88\x6a\x7b\x50\x52\x8c\x2c\x0e\x77\xda\xd2\x89\x21\xdc\xc5\xb9\x00\xd8\xa3\x13\x39\x92\x2e\xb1\x5a\x83\x8a\x40\xc8\x6c\x33\x31\x85\xcd\x56\x10\xdd\x92\x70\x96\x30\xbb\x8d\xb1\x05\xc3\x90\xf2\x1c\x40\x59\x04\xaa\x93\x49\x84\x59\x1c\x01\x18\xba\x36\x31\x17\xec\x50\x63\x28\x41\x92\x0d\xdc\xd6\x4d\xad\xed\x88\x70\xb7\x6f\xdd\xdd\x4c\xdb\xd8\x14\x27\x32\x05\x9c\x8a\x93\x7d\x11\x41\xb4\xa9\x05\x61\xd5\x2c\x57\xe6\xb6\x4d\x2c\x05\xa5\x52\xc7\xde\xad\x62\xb2\x87\x46\xc6\x42\xda\x2e\xaf\x06\x89\x2a\x1b\xb0\xf2\x95\x29\x2a\x9d\x66\x5a\x6b\xc0\x3a\xb2\x47\x4b\xeb\xe9\xd9\x12\xa0\x39\x5a\x00\xf9\x1a\x7f\x58\x37\xe9\x9e\xac\x07\x42\x0c\xcf\x81\x41\xb2\xa0\x3b\xb0\x01\x4e\x4d\xd1\xd2\xa8\xa6\xb0\xd9\x95\xd3\x7b\xe7\xb5\x36\xdf\x1a\x91\xb0\xb4\xbe\x6c\xa5\x06\x68\x59\xa9\x25\x0b\x73\x91\x1b\xcf\x94\x29\xda\x62\x79\xba\x4b\x51\x54\x0f\xe4\x6e\x52\xee\x43\x6a\xce\x8c\x15\xdd\xba\xac\x39\x97\xc8\x83\xcd\xfa\xac\x3b\x19\xbb\x49\x7b\x14\x39\x64\x61\x36\x82\xb9\x68\xcd\x99\x36\x00\x6d\xe1\x48\x1f\x1d\xb5\x64\x34\xa3\x61\x09\x9e\xd1\xfa\xf2\x8c\x1c\x8b\xd4\x56\x6f\xe9\x39\xfb\x0a\xea\x13\x5b\xd3\x01\x22\x5c\xd1\x23\x27\x4c\xb2\x55\x3a\x38\xb3\x0c\x0b\xd6\x5c\x21\x1d\xcb\xc3\x9b\x63\x0e\xe9\xb1\xf1\x30\xc6\x10\xce\xff\xec\x1a\x69\xee\xc6\x1e\x8c\xc3\xb4\x39\x07\xb7\x69\x54\x50\xab\x19\x53\x59\x9b\x0a\xb3\x36\x2b\x32\x6b\xf3\x42\x44\x20\xe1\x20\xb0\x0c\xec\xc6\x51\xee\xc1\xd3\x3e\xcb\x31\xb9\x90\x1d\x65\x23\xb9\x4a\x72\x6c\xb8\x6c\xb8\x51\x24\x90\x02\xb6\xd2\xee\x0d\xad\x99\xf7\xc4\x2d\x79\xb5\x87\x51\x6f\xd4\xff\xb0\xeb\xb9\x47\x90\xad\xa1\x42\x11\xd5\xf0\x46\x9e\x4c\x06\x1a\x28\x4c\xa8\xb2\x6c\x16\x4c\xad\xf2\xca\xec\xcb\x34\xb5\x64\x0d\xf7\x5a\xd0\x1a\x78\x34\x6b\x32\x71\x15\xab\xa0\x97\x0e\x9c\x6c\xbd\x02\x68\x02\x61\xa4\xb7\xb9\x25\x2a\x66\x5f\x73\x61\x6e\x17\xaf\xcf\x49\xa4\xa5\x8b\xa7\x75\x93\x6c\xbf\x45\xbd\x7c\x36\x0d\x35\xf9\x6b\xd4\xff\x78\x6b\xb7\x17\xb1\xb7\xe0\x79\xef\xbe\x56\xd0\x2c\x92\x49\x8b\x01\x07\x30\x62\xe6\x40\x82\x66\x3e\x9a\x94\xac\x3e\xa6\xb0\x8b\x1b\xc8\xe8\xa1\xca\xe8\x35\x03\xc6\x56\x2d\x38\x6b\x13\xa2\xb6\x98\xa0\xd8\x63\x41\xad\xec\xc2\x30\x8a\xc8\x1a\x15\x6f\x5f\x5a\xce\x91\xe8\x9e\xe9\x89\x69\x3c\xd6\xd2\x36\xb8\xbe\x64\x3c\xc2\x0e\xfb\x9e\x3b\xdf\x86\x6f\x77\x34\xb5\xc2\x9a\x64\x83\x14\xa6\xf3\x84\xae\xba\xcc\x44\x63\x6d\x4e\xa8\x35\xc4\x89\x8c\x5c\xb0\xfa\x74\x66\x8e\x61\x56\x15\xa3\xad\xee\x8d\xb4\x57\x63\xaa\x4c\x8c\xed\x32\x52\x36\xb6\x84\x15\x3d\x35\xd8\x50\x17\x34\x35\x53\x0f\xe8\x5b\xcc\x43\x0d\x70\x65\x1f\xf1\x95\x0e\x36\x8e\xe7\x5f\x39\xfe\xbd\xb5\xff\x85\xe7\x7b\x17\xef\xda\xbd\xaf\x4b\xec\xbd\xdb\x78\x77\x8f\xa1\x03\xdf\xab\xdb\x37\x77\xed\x1e\xea\xd9\xc5\x07\x3a\xf9\xef\x7f\x9f\x8f\x93\xf7\xb3\xf8\xd3\xbf\xe7\x4f\x4f\xce\x4f\xdb\xa7\xeb\xf3\x93\x2b\x7e\xf8\xcf\xf7\x2f\xe4\x48\xfd\xe8\xfc\x5c\xcf\x9f\x5d\xde\x3e\x4b\x1d\xbd\xda\xef\x2c\x7d\x1e\xf0\xa7\x0a\xba\x7f\xc6\xf3\x93\xd3\x4f\x8f\xf8\xfa\xd9\x6b\x91\xd3\xd7\xaf\x4e\xe3\xd9\xbf\x3e\xde\x9d\x9e\x9f\xcc\x4b\x7a\xf3\xe2\xe6\xd5\xe9\x9b\xb3\xc7\x0f\xff\xa1\xff\x3a\xff\xe7\xe3\xd7\x79\xfe\xa7\x19\x5f\x17\xc8\xfd\x03\xf4\x1f\x37\xc7\xcf\x7f\xf8\x85\x1e\xfe\x7c\x7e\x44\x67\x4f\xe6\x8f\xe7\xa7\x97\x97\x4f\xce\xf4\xe9\xc3\x8f\xf1\xdd\x78\x79\x7a\xfb\x61\xbc\xff\xfe\xe3\x8d\xd8\xcf\x37\x67\x7f\x1a\xf0\x87\xfa\xb7\x7f\xc2\xf1\xc9\xc5\xbb\xdb\x8b\xa3\xa3\x9c\xaf\xdf\x3f\x7d\x35\xae\x9e\xbd\xbf\x1a\x6f\x4e\xce\x5e\x3c\x39\x79\xfc\x69\xfd\x7c\x2b\xf6\xc3\xf3\x3c\xd2\x17\xf4\x29\x5e\x3e\xdf\x47\xd3\x6f\xe5\x6d\xff\x8c\x1f\xde\xff\xf4\xf2\xc3\xab\xf6\xa3\xeb\x77\x34\x4e\x9e\x5e\x5d\xd9\xa3\xb3\x97\x67\xdf\x7f\x7a\xf7\xe9\xfb\x97\xdf\xc6\xeb\x8f\x8f\x7f\x79\x6d\xc7\xc7\x74\x21\x77\x97\xeb\xcf\x34\xfd\xa1\x7a\xed\x1f\xf1\xec\xf8\xec\xd1\x31\xbd\xb2\xc7\x57\x6f\xec\xee\xc5\xed\xc9\x2f\xa7\x3f\x1d\x3f\xba\xe3\x9b\xe3\xef\x1e\xdf\x1e\xbd\xbf\xbb\xfd\xee\xf8\xae\x8f\xa3\x47\x57\xc7\x2f\x9e\x3d\xfa\xa2\xb6\x6f\x0e\x0e\x7e\xfd\xe6\xd7\x6f\xfe\x3f\x00\x00\xff\xff\x2c\x93\x21\x22\x29\x0e\x00\x00")

func ConfigCliFleetEthProdJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthProdJson,
		"../config/cli/fleet-eth.prod.json",
	)
}

func ConfigCliFleetEthProdJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthProdJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.prod.json", size: 3625, mode: os.FileMode(0644), modTime: time.Unix(1585559578, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x1c, 0x86, 0x93, 0x3b, 0x8c, 0xb4, 0x1b, 0x8b, 0x70, 0xe6, 0x90, 0x3, 0xc9, 0x93, 0x99, 0x97, 0x18, 0xb7, 0x49, 0xbf, 0x2d, 0x35, 0x98, 0xb8, 0x49, 0xa8, 0x73, 0x30, 0xf5, 0x2d, 0x7f, 0x5c}}
	return a, nil
}

var _ConfigCliFleetEthStagingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x5f\x6f\x54\xc9\xd1\xc6\xef\xf9\x14\xa3\xb9\x7e\x75\x5c\xd5\x5d\x5d\x5d\xe5\x2b\xbf\xb0\x36\xd6\x26\x20\x62\x16\xb2\x22\xca\x45\x77\xfd\xb1\x27\x76\x3c\xec\xcc\x98\x85\x8d\xf6\xbb\x47\x03\x48\x4b\x16\xb8\x3b\xaa\xa3\xae\xe7\xa7\x9f\x1e\xd5\x7f\x1e\xad\x56\xeb\xab\xb8\xf7\xf8\xed\xdd\xf6\x61\xbf\x3e\x5d\x1d\x76\x0f\xf1\x7f\xc7\xe9\xf3\xed\x0f\x9b\xbd\x6d\xdf\xc5\xee\xc3\xfa\x74\x95\xe3\x6e\xff\x69\xfe\xe4\xee\x61\x7f\x88\xdd\x93\xed\x7d\x6e\xae\xd7\xa7\xab\xe3\x8a\xd5\x6a\x7d\x7e\x3f\xe6\x5d\xf8\x17\x1b\x56\xab\xf5\xc5\x5d\xc4\x61\x7d\xba\x5a\xc7\xe1\x66\xd9\x1f\xc6\xf5\xe6\xfe\x7a\xfd\xf9\xdf\xe3\xed\xf6\xf0\x7c\xeb\x71\x0c\xfd\xc7\xc7\xd1\x6a\xb5\x8e\xfb\xad\xc7\xe9\xc9\x09\x57\x98\x50\xa9\xd8\xa0\xd0\xd6\x4a\x36\xe8\x48\x93\x4d\xa2\x88\xb3\xb6\x36\x0d\xd2\x91\xa2\x6b\x83\xd4\x3a\xad\xce\x32\xc5\x4c\x0c\xb3\x4e\x76\x84\xea\xc9\x9c\x0d\x07\x56\xef\xbd\xce\xe6\x13\x12\x2b\x30\x63\xce\x66\x7d\x4a\x8e\x82\x46\x22\x0a\xc6\x64\x5d\x27\xe1\x68\x3c\x48\xe1\x8c\xfa\xa2\xb8\x94\xa2\x0b\xd1\x29\x51\xfd\x4c\xfd\x05\x62\x76\xcd\x59\x15\x35\x7b\xb1\xd1\x18\x86\x03\x55\x72\xb3\x2a\x7d\xcc\x0c\xc2\x00\x66\x2e\x80\x31\x7d\xf8\x90\xf0\x00\xe2\x42\x8d\x8e\x48\x31\xa1\x99\x0f\x6c\x59\xa4\x7b\x31\x9a\x2e\xcd\x87\x60\x42\xcc\xd2\x1c\x06\x09\xcf\x39\x4d\x3c\xa9\xf4\xa9\x1d\x87\x35\x6c\xb5\x4e\x07\xc8\x38\xc3\x4e\x0b\x56\x59\x10\xfa\x52\xaa\x7e\x9b\x12\x61\x74\x31\xec\x5a\x74\x74\x40\x8d\xa4\x31\x4a\x21\xf5\x5e\xa1\x64\xe7\x11\x32\x80\x93\x60\x16\x37\x91\xd9\x67\xc5\x98\x99\x34\xb8\xd4\x9c\x93\x68\x1e\x3f\xfb\xb0\x39\x8a\xb2\xa1\x85\xd7\xde\x9b\x2b\xe6\x0c\x14\xe2\x6a\xd8\x40\xfb\xe0\x51\x39\x7d\x16\x13\xa0\xcc\x9a\xd6\x66\x6d\x67\xb5\x2d\xa5\xca\xa2\x47\xc6\x4f\x26\x3f\x22\xfe\xf3\x73\x0b\x7e\xda\x1d\xdb\xe4\xcf\xc6\xe6\xee\x65\xec\xde\xc5\xee\x9b\x75\x98\x9d\xa4\x29\x76\x36\xed\x0d\xbd\x22\x8d\x88\x4c\x2b\x1c\xa6\x29\xcc\x83\xb0\xf4\x56\xa2\xbb\x87\x29\x4e\x54\x40\x19\x28\xd1\xcd\x86\x38\xd7\x6e\x19\xc5\xc2\x6d\x6a\x2f\x29\x31\x99\x5c\x90\x73\x7a\x9b\x14\xa2\xd6\x43\xac\xa7\x77\x4f\x19\x58\x8b\xe6\xa0\xea\x53\x60\xc2\xcc\x38\xd6\xa1\x95\x45\x61\xc1\xc6\xdf\x16\xcd\xc7\x1e\xcc\x31\x7a\x62\x2f\xc5\x11\x71\x88\xa9\xb1\x58\xd5\x51\x91\x2a\x84\x7a\xe3\xce\xda\x92\x11\x24\x2b\x9a\x4d\x36\x97\x84\xe1\x99\xa4\x8a\xd1\xd3\x6d\x48\x8e\xde\x21\x7a\x9b\x26\xa3\x1d\xf7\x74\x2f\xc4\x0a\x36\x4d\x20\x00\x04\x7b\x4b\x02\xc3\xd6\x9d\x93\xbb\x88\x93\x9c\x15\xe0\x05\x45\x97\x42\xb0\xe0\x77\x20\x83\xd2\x10\x0c\x93\x9b\xc9\x08\x97\x3a\xac\xf0\x34\x9c\x39\x0b\x0e\x6a\x66\x38\xa4\x35\x18\x4d\xa0\x77\x13\x2f\x1e\x65\x40\x80\x39\x4a\x10\xa4\x13\x64\x0f\xce\xee\x50\xdc\xd8\x1c\x58\xa5\x4c\x40\xb2\x10\x71\x0e\x62\xe9\xa5\xe5\xd1\x36\x56\x09\x6d\x72\xe4\x03\x80\x32\x7a\x7e\x6a\x83\x2e\xa8\x75\x21\xfc\xba\x0d\x2f\x0f\xe3\xb0\xb1\xef\x5e\x05\x45\x32\x98\x15\xb2\xf4\x39\x66\x05\x43\x4f\xaf\xe8\xc3\x3b\xb7\x32\x88\xd3\x87\xd6\x0e\x8d\xca\x88\xc0\x09\x5c\x48\x65\x62\xa5\x16\x01\x8a\x95\x91\xa6\x4c\x8d\x1a\x42\x5c\x4a\x08\x8d\x5e\xa0\x5a\x93\x26\x23\xd0\x55\x50\x93\xeb\x08\x0b\xac\x11\xcc\x12\x94\xcc\x2c\xc0\x55\x45\xcf\x90\xfb\xa2\x47\xfc\x05\x49\xbe\xad\xb8\xb8\x68\x37\x3e\x06\x28\x69\xaa\x5b\x22\x94\xae\x09\x10\x3a\xa5\x96\x66\x28\x19\x3d\x47\x2b\xce\x4d\x5a\x81\xe1\x7d\x86\x32\x74\x93\x0a\x20\x93\xca\x04\x1e\x91\xae\xc7\xd6\x62\xfa\x98\xad\x63\xd6\x3a\xca\xd0\x2a\x35\x53\xbb\x35\x05\x0d\x6f\x98\x5c\x8f\x8f\x2a\x29\xd6\x52\x7b\x1c\x15\xa3\x96\x05\x16\xe1\xaf\x05\xff\x71\xea\xbf\x92\x7c\xb2\x79\x4b\x27\x5f\x9e\xbd\x93\x83\xbd\x3d\xa9\xd0\xa1\x9e\xc4\xe1\xe6\x1d\x9d\x20\xbf\xda\x3c\x94\xcb\xff\xff\xf7\xd5\xfd\xa1\x9c\x7f\xd8\xde\xde\xdf\xd4\xf1\xf0\xfe\x86\xf2\xc7\x5f\x6f\xaf\xae\x7f\xb9\xbd\xc4\xeb\x5f\x76\x7f\x7f\x1a\x7b\x79\x71\x8b\xb7\xf5\xd9\x6b\x7a\xff\xf0\x87\xa1\x8f\x01\x7f\x3a\x5a\xdf\xcf\x90\x57\x6f\x7e\x7e\x75\x79\xfe\xe2\xcd\xee\xed\x8f\xd3\xfe\x56\x3f\xbc\xbe\xb8\xe4\x57\x87\xbf\xec\x7e\xdd\x3f\xe5\x7f\x5d\xd2\xd8\xf4\xf2\x62\x3f\xff\x9a\xaf\x2f\xe6\x9f\x32\xfe\xe7\xe4\x7c\x3f\x81\x9f\xea\xfe\x87\x67\xb7\xbb\xc7\xf4\xf3\x68\xe7\x97\xf5\xcd\xfb\xe2\x1f\xf6\x4f\xde\x5f\x5c\x3f\xfe\xe9\xe5\xd5\x6f\xd7\x37\x1b\xab\x6f\xf4\x70\x75\x71\xf5\xfc\xfc\xb3\xc5\x47\xab\xd5\xef\x8f\x7e\x7f\xf4\xdf\x00\x00\x00\xff\xff\x18\x29\xe9\xb8\x36\x07\x00\x00")

func ConfigCliFleetEthStagingJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthStagingJson,
		"../config/cli/fleet-eth.staging.json",
	)
}

func ConfigCliFleetEthStagingJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthStagingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.staging.json", size: 1846, mode: os.FileMode(0644), modTime: time.Unix(1585559578, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xd1, 0xef, 0x3d, 0x5c, 0x41, 0xb1, 0xc8, 0x54, 0xd3, 0x82, 0x60, 0xcf, 0x5f, 0x8b, 0x92, 0xd0, 0x41, 0xa7, 0xff, 0xfd, 0x2c, 0x95, 0x44, 0x68, 0xd3, 0xad, 0x16, 0x8c, 0x49, 0x10, 0x4e, 0xb7}}
	return a, nil
}

var _ConfigCliFleetEthTestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x4b\x6f\x5c\xc7\x11\x85\xf7\xfa\x15\x83\x59\x07\xc3\xee\x7a\x37\x57\x92\x38\x96\x04\x83\x16\x62\xf1\x91\xc4\x41\x16\xdd\x55\xd5\x12\x1d\x8a\x63\x0e\x2f\x19\x48\x81\xff\x7b\x30\x8c\x82\x58\xaf\x6d\xdd\x46\x9f\x73\x4f\x7d\x7d\xfe\xfd\x64\xb5\x5a\x9f\xee\xde\x9e\xe6\x43\x5e\xaf\x8f\x57\xeb\xed\x0f\xcf\x2f\x5e\xae\xff\x74\x18\xbf\xde\x6d\xaf\xee\x7c\xf7\x90\xfb\x0f\xeb\xe3\xd5\xec\xd7\x77\xf9\x38\x3f\xb9\xbe\xbf\x5b\x72\x7f\xb2\xbb\x99\x57\x6f\xd7\xc7\xab\xc3\x1d\xab\xd5\xfa\x87\x9b\x3e\xae\x33\xd6\xc7\xab\x65\x7f\xff\x78\x72\xb5\x5a\xbf\xb8\xce\x5c\x0e\xf7\xe6\xf2\x6e\xb3\xe4\xdd\xb2\xfe\xf4\xe1\xf9\x6e\xb7\xbc\xde\x45\xde\xad\x8f\x57\x7f\x7f\x1c\xad\x56\xeb\xbc\xd9\x45\x1e\x1f\x1d\x45\xef\x09\xa9\x60\x50\xd2\x24\x1b\xc1\xec\xd0\xad\x77\x0d\xc9\xd6\x98\x82\x0a\x61\x57\x46\x32\x0c\x1b\x81\x68\x59\x65\xa4\x81\xcf\x26\x80\x0d\x82\xbd\x64\xed\xc9\xea\x18\xda\xd0\x31\x30\x22\xc2\x66\xb0\x21\x36\x10\x48\x02\xa4\xf0\x26\x32\x1b\xa3\x87\xe2\x60\xe4\xc9\xb3\x3f\x25\xdd\x30\x6c\xaa\xd9\xa6\x52\x3b\x26\xc2\x4f\xb6\xff\xe0\xb1\x65\x69\x66\xac\x9c\x43\xb5\xaa\x03\x47\x76\x85\x19\xb5\xba\x0e\x54\x15\x0d\x2f\xcd\x6b\x57\x31\x99\xea\x90\xce\xaa\x81\xc5\x02\xe8\x70\xc0\x73\x88\x72\x24\x61\x55\x52\xea\xb5\x9b\x96\x24\x35\x03\x45\x68\xa2\x93\x66\x57\xe3\x51\x60\xf4\xc6\x21\xd2\x06\xd6\x20\xa1\x48\x2f\x4f\xa1\xc8\xa6\x5a\xdb\x00\xe1\xa6\x0a\x7d\xdb\xa5\xd7\xe4\x52\xcd\x4c\xdd\x04\x43\xe8\xa0\x36\xa4\x8d\x29\x55\x59\x6a\x31\x35\x60\xc2\x92\x44\xa5\x2a\xe2\xe4\xd1\x55\x5d\x4b\x8c\x4a\x80\x12\x13\xad\xce\x9c\xa3\xe4\xc8\xda\x9d\x00\x1a\x8d\x96\x20\x75\x8c\x04\xc4\x18\x31\x0c\x13\xc1\xd9\xc4\x45\x7a\x82\xb8\x45\x6a\xf1\x41\xfe\x14\xf9\xbf\x31\x8a\x6d\x2a\xea\xa3\xc9\x47\x8f\xff\xf8\xc4\xc1\xf9\xfe\x00\x53\xfc\xd4\xaf\xae\xcf\x72\xff\x90\xfb\x6f\x02\x21\xb5\xc5\x18\x1c\xd1\x2b\xa4\xf1\x98\x25\x07\xc7\xa0\x32\x07\x46\x0a\xb0\x94\x56\x08\x81\x40\x51\xbd\x64\x53\x9e\x1a\x33\x84\x5b\x18\x87\x4b\xb4\x6e\x34\x1b\x49\xed\x0a\xe6\xdc\x87\x98\x17\x85\x99\x81\xe6\x5d\x3a\x63\xab\xea\x1d\x68\x58\x36\x74\x07\x1d\x91\x13\x7b\x4d\x6d\xdd\xff\x08\x44\x93\x6f\x47\x9d\x64\xc2\x33\xc5\xa1\x1f\xb6\xce\x82\x5d\x88\xb4\xb5\x12\x96\xcd\x53\x14\x84\xa8\x27\x66\x31\x38\x6c\x1f\x2d\xbd\xce\xc3\x36\x4a\xe6\x14\x84\xe2\x45\x3b\x87\x14\xc7\x21\xd0\x26\x07\x51\xa3\xd9\x30\x64\x98\x74\x25\xee\x65\x4c\xa1\x3e\xa0\xf1\x18\x53\x58\x5b\xa9\xda\xc3\x25\xc3\xbe\x00\xa2\x7e\xdb\xa5\x16\x4d\x56\x62\xec\x1e\x98\x64\xe6\x44\xa3\x45\xc9\xaa\x4d\x19\xb5\x26\x4c\x9b\x07\x30\x81\xb3\x27\x8f\xee\xbd\x8d\xe6\x96\x45\xdc\xc4\x23\xd5\xb5\x51\x17\x87\x44\x81\x82\x63\xb6\xc9\xe2\x3d\x6d\x94\xe4\x32\x71\x20\x3a\x39\x0c\x69\xd4\x75\xf4\xcc\x5e\x95\x89\x84\x3c\x29\xf1\x11\x88\x06\x1b\x80\xb6\xa9\x0a\x5f\x03\x71\xb6\xf4\xe5\xca\xbf\x5b\x0d\x3d\xd0\x66\xa3\x82\xa5\x1b\x89\xbb\x96\xc2\x43\x7b\x9d\x38\x64\x94\x3a\x26\xe5\xe4\x16\x48\x69\x81\x21\x93\xa2\x42\x4c\xc0\xa8\x34\xba\x09\x8b\x16\xe8\x84\x1c\x48\x3e\x29\x26\x0e\xaa\xe0\xc5\x6b\x03\x8c\xc9\x3d\xdc\xd3\x48\x2a\x42\xed\x25\x6c\xce\xd1\x08\x79\x80\x24\x2b\x38\xfc\xaf\x1a\x80\x0f\xbf\xf1\x9d\x47\x57\xa3\x36\x14\xe4\x2c\x95\x5b\xb5\x39\x8c\xc7\xe8\x53\x95\x0e\x6f\xb0\xc2\x14\x0e\x2d\x2e\x4d\x95\x8b\x54\xd3\x9c\x85\x08\x4a\x28\xa5\x17\xf1\x96\x36\x4b\xf8\x60\xcd\x5e\x08\xa6\x71\x4c\x53\x42\x8c\x3e\xaa\xf6\x0a\x52\x32\x2c\x22\xeb\x88\xd9\x42\x82\x03\x22\x69\xe8\x98\x96\xad\xe1\x17\x24\xe0\xd7\x21\xbf\xc9\x9b\xc8\x8f\x0f\xbb\xfb\xbb\xaf\x82\x3e\xba\xfa\x8d\x8e\x3e\xeb\xbf\xa3\xc5\x7f\x3b\xc2\xa2\x05\x8f\x72\x79\xf7\x40\x47\x55\x2e\xae\xee\xe1\xd5\xb3\xf7\xed\xb2\x2f\xb7\x7b\x7a\x39\x2f\x4f\x6e\x6f\x3e\x64\xff\xf3\x72\xf2\x02\x6f\x6d\x7e\xb4\x7f\x6e\xb7\x17\x6f\x6f\xff\x7a\x39\x5f\xbc\xd4\x5f\xe6\xd9\x33\xfd\xd7\xff\x63\x7a\x54\xf8\xa2\xbd\xbe\xaf\xf1\xfc\xe4\x1d\x8f\xb7\x7f\xdb\xcb\x25\xce\xed\xfd\xe9\xed\xc5\xc7\x87\xe5\xec\xd9\xdd\x8b\xf3\x9f\x7f\x3c\xf9\x19\xcf\x2f\x5f\x9d\xdb\xd2\x6d\x9c\xdf\xc3\x8f\xef\xbf\xd0\xf8\xbc\x7b\xbe\x2f\x81\x3f\x5d\xdc\x2e\x2f\x7f\x7d\x9f\xcb\x87\x5f\xda\x29\x9d\xbd\x86\x37\xb6\x7b\xb5\xfd\xcb\xc3\xb3\x93\x0b\x4f\x07\x3e\xfd\x75\xd9\x6e\x39\xef\xaf\xde\xbc\xfa\x94\xe3\x93\xd5\xea\xf7\x27\xbf\x3f\xf9\x4f\x00\x00\x00\xff\xff\x87\x88\x2f\x8c\x3f\x07\x00\x00")

func ConfigCliFleetEthTestJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthTestJson,
		"../config/cli/fleet-eth.test.json",
	)
}

func ConfigCliFleetEthTestJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthTestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.test.json", size: 1855, mode: os.FileMode(0644), modTime: time.Unix(1585559578, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe4, 0x90, 0x4, 0x6, 0x2b, 0xe4, 0x67, 0x7a, 0xfc, 0x70, 0xa9, 0xb, 0x85, 0x8c, 0xb3, 0x8, 0x8e, 0xee, 0xec, 0x64, 0xb7, 0xac, 0x4c, 0x6, 0x4d, 0xcc, 0x4f, 0xda, 0xbd, 0xed, 0x17, 0x53}}
	return a, nil
}

var _ConfigCliLesEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xf2\xc9\x4c\xcf\x28\x71\x2d\xc9\x70\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x88\x83\xe5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\xc1\xe2\xb5\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xa6\x74\x24\x05\x3a\x00\x00\x00")

func ConfigCliLesEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliLesEnabledJson,
		"../config/cli/les-enabled.json",
	)
}

func ConfigCliLesEnabledJson() (*asset, error) {
	bytes, err := ConfigCliLesEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/les-enabled.json", size: 58, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x7e, 0xee, 0x27, 0xa7, 0x74, 0xa0, 0x46, 0xa1, 0x41, 0xed, 0x4d, 0x16, 0x5b, 0xf3, 0xf0, 0x7c, 0xc8, 0x2f, 0x6f, 0x47, 0xa4, 0xbb, 0x5f, 0x43, 0x33, 0xd, 0x9, 0x9d, 0xea, 0x9e, 0x15, 0xee}}
	return a, nil
}

var _ConfigCliMailserverEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x0a\xcf\xc8\x2c\x2e\x48\x2d\x72\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x08\x83\xa5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\x75\xd0\x25\xfc\x42\x02\x82\x2b\xf3\x92\x71\x49\xfb\x26\x66\xe6\x04\xa7\x16\x95\xa5\x16\x61\xaa\x40\xc8\x05\x24\x16\x17\x97\xe7\x17\x81\x2c\x51\x2a\x2e\x49\x2c\x29\x2d\xd6\xcd\x4f\x4b\xcb\xc9\xcc\x4b\xd5\xcd\xcc\x4b\xca\xaf\x50\x02\x6b\xaa\xe5\xaa\xe5\x02\x04\x00\x00\xff\xff\x7c\x73\xee\xbb\xb0\x00\x00\x00")

func ConfigCliMailserverEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliMailserverEnabledJson,
		"../config/cli/mailserver-enabled.json",
	)
}

func ConfigCliMailserverEnabledJson() (*asset, error) {
	bytes, err := ConfigCliMailserverEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/mailserver-enabled.json", size: 176, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x34, 0xec, 0x81, 0x8b, 0x99, 0xb6, 0xdb, 0xc0, 0x8b, 0x46, 0x97, 0x96, 0xc7, 0x58, 0x30, 0x33, 0xef, 0x54, 0x25, 0x87, 0x7b, 0xb9, 0x94, 0x6b, 0x18, 0xa4, 0x5b, 0x58, 0x67, 0x7c, 0x44, 0xa6}}
	return a, nil
}

var _ConfigStatusChainGenesisJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x6f\x13\x31\x10\x85\xef\xf9\x15\x96\xcf\x1c\xc6\xf6\x78\x66\xbd\x37\x4a\x59\x81\xc4\x8d\x5f\x30\xb6\xc7\xcd\xaa\x9b\x6c\x94\x6c\xa4\x16\xd4\xff\x8e\x92\x2c\xa1\x42\x9c\xf0\xcd\x7e\x33\xef\x7b\x7e\x3f\x37\xc6\x58\x99\xa6\xb9\xd8\xde\x5c\x2e\xc6\x18\x9b\x07\x47\x58\x24\xa0\x0b\x9e\x04\x42\x8e\xc8\x05\xe2\x43\xc0\x90\xfd\x67\xef\x74\xf8\xa8\x1e\x73\xfa\xb3\x62\x6c\x96\x49\xf6\x45\x6d\x6f\x2c\xbc\x38\x18\xe0\xd3\x00\x84\x8f\x8f\x31\x79\xb8\x1c\x7b\x1d\x7c\xfb\xb0\x22\x3c\x44\x89\x15\x94\x7d\x6b\x14\x81\x53\x2b\x92\x33\x0a\x05\x0d\xa1\xfa\x4e\x84\xaa\x36\x5f\xfe\x03\xb1\x59\x31\xb6\xcc\xfb\x36\x3e\xdd\x1d\x6c\xd9\xca\xb8\xff\x5a\x6d\x6f\x98\xf9\x16\xc4\x6e\xe7\x9d\x9e\x16\x95\xfa\x30\xcd\xe5\xd9\xf6\x06\x56\xa1\xca\x3c\xcc\xc7\xe7\xef\xe7\xc3\x61\x3e\x2e\xb6\x37\xcb\xf1\xac\xab\x96\x5f\x7f\xc8\x7e\x19\xcf\xbb\xbf\x97\x74\x3c\xb8\x08\x5f\xe4\xb4\xbd\x85\x8c\xa0\xa4\x35\xa3\x26\xa8\x89\x1c\x49\xe9\x72\x63\xe7\x92\x6a\xe0\x82\x80\x5d\x41\x27\x15\x52\xf0\x1d\x31\xa9\xcb\x21\xd5\x42\x9d\x80\x96\x96\x43\xb5\xef\x7d\xe3\x3f\x69\xdd\xfd\xf5\xfe\xef\x3a\xb6\x36\x96\xf3\xb4\xbc\xfe\xae\xea\xda\xce\x55\xd3\x97\xe5\x28\x8f\xb2\xc8\x1a\x30\x30\x92\x63\xe4\xc8\x01\x03\x75\xe4\x28\x91\x7a\x88\xc0\x9e\x12\xd3\x45\xa3\xe8\x21\x22\x45\xbe\xcc\x26\x52\x62\x0f\xa8\x14\x19\x99\xa9\xb1\xa7\x7c\xb3\x7e\x92\xd3\xb7\x71\x37\x2e\xef\xa1\x60\x37\x6f\x9b\x5f\x01\x00\x00\xff\xff\x91\xc6\xb3\x58\x64\x02\x00\x00")

func ConfigStatusChainGenesisJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigStatusChainGenesisJson,
		"../config/status-chain-genesis.json",
	)
}

func ConfigStatusChainGenesisJson() (*asset, error) {
	bytes, err := ConfigStatusChainGenesisJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/status-chain-genesis.json", size: 612, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xb, 0xf0, 0xc, 0x1, 0x95, 0x65, 0x6, 0x55, 0x48, 0x8f, 0x83, 0xa0, 0xb4, 0x81, 0xda, 0xad, 0x30, 0x6d, 0xb2, 0x78, 0x1b, 0x26, 0x4, 0x13, 0x12, 0x9, 0x6, 0xae, 0x3a, 0x2c, 0x1, 0x71}}
	return a, nil
}

var _keysBootnodeKey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\x4b\x01\x80\x40\x08\x04\xd0\xbb\x69\x58\x96\x6f\x1c\x66\x94\xfe\x11\x7c\xbe\x65\xab\x03\x07\x43\x1b\x87\x5b\x17\x8e\x9e\x23\x02\x11\x1a\x57\x51\x9d\x32\xf7\x24\x99\x1b\x08\xd8\xcb\xcf\x2d\xf4\xba\x3e\x7f\x00\x00\x00\xff\xff\x4a\x3d\x56\xc6\x41\x00\x00\x00")

func keysBootnodeKeyBytes() ([]byte, error) {
	return bindataRead(
		_keysBootnodeKey,
		"keys/bootnode.key",
	)
}

func keysBootnodeKey() (*asset, error) {
	bytes, err := keysBootnodeKeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/bootnode.key", size: 65, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x31, 0xcf, 0x27, 0xd4, 0x96, 0x2e, 0x32, 0xcd, 0x58, 0x96, 0x2a, 0xe5, 0x8c, 0xa0, 0xf1, 0x73, 0x1f, 0xd6, 0xd6, 0x8b, 0xb, 0x73, 0xd3, 0x2c, 0x84, 0x1a, 0x56, 0xa4, 0x74, 0xb6, 0x95, 0x20}}
	return a, nil
}

var _keysFirebaseauthkey = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x04\xc0\xcb\x52\x85\x20\x18\x00\xe0\x7d\xef\xc2\xcc\x71\x4a\xc4\x76\x3f\x29\x43\x5c\x34\x2d\x4d\x59\x6a\xa5\x8d\x24\xde\x42\x7b\xfb\x3e\x00\x00\x9e\x87\xfa\xfe\xf3\xf9\x11\x5e\x20\x0e\x3a\xf6\x7b\xb8\xf2\x03\xc7\xd9\x4a\x10\xec\x46\x74\xa7\x26\x9a\xfd\x71\xec\xeb\xea\x98\x84\xb2\x9b\x6c\x92\x5b\xaa\x0d\x0e\x7c\x71\x71\xb8\xb1\xb1\xf2\x62\xcc\x61\xfb\x59\x91\xa2\x6f\x69\x6f\x29\x09\xdf\x07\x99\xb5\x09\x2a\x5f\x5b\x69\xa2\xa5\x91\x33\xa9\xa5\x67\x2d\x5d\xdd\xe1\xf0\xac\x82\xb0\xcf\xec\xd7\x72\x3d\x9c\x4f\x54\x4c\x3c\x2d\xad\x8b\xac\x32\x57\x8c\x06\xfc\x5d\x24\xd3\x7e\xf7\x1f\x00\x00\xff\xff\xd6\xa2\x00\x4a\x99\x00\x00\x00")

func keysFirebaseauthkeyBytes() ([]byte, error) {
	return bindataRead(
		_keysFirebaseauthkey,
		"keys/firebaseauthkey",
	)
}

func keysFirebaseauthkey() (*asset, error) {
	bytes, err := keysFirebaseauthkeyBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/firebaseauthkey", size: 153, mode: os.FileMode(0644), modTime: time.Unix(1536843582, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0xe, 0x69, 0x23, 0x64, 0x7d, 0xf9, 0x14, 0x37, 0x6f, 0x2b, 0x1, 0xf0, 0xb0, 0xa4, 0xb2, 0xd0, 0x18, 0xcd, 0xf9, 0xeb, 0x57, 0xa3, 0xfd, 0x79, 0x25, 0xa7, 0x9c, 0x3, 0xce, 0x26, 0xec, 0xe1}}
	return a, nil
}

var _keysTestAccount1StatusChainPk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xdd\x8a\xe4\x40\x08\x05\xe0\x77\xf1\x3a\x01\xb5\x4c\x55\x99\xb7\x51\xcb\x62\x9b\xf9\x6b\x92\x66\xd8\x65\xe8\x77\x5f\x32\xcb\x32\x97\x82\x7e\x1c\xcf\x17\x7c\xe6\x71\xde\x3e\xde\x61\x2f\x0b\xdc\x06\xec\xd0\x29\xb2\x25\xe9\xca\xd4\x71\x15\xe4\xbe\xba\x2a\xae\x68\x52\x94\x7c\x56\x33\x84\x05\x6c\x8c\x23\xcf\x13\x76\xf0\x49\x55\xc2\x8a\x50\xe1\x6a\x58\x7c\x93\x16\xb8\x79\x91\xe2\x9c\x4c\x39\x2d\x59\x5c\x61\x81\x38\xfe\xdc\x1f\x1f\xb0\x7f\x41\xdc\xee\xbf\xf2\x78\xe4\xef\x07\xec\xb0\x35\x17\xb1\x6e\xd4\x67\x6f\x8a\xea\xce\xd1\x4c\x95\x98\x5c\x54\x8b\xa9\xb7\x31\x2c\x89\x46\xe9\x53\x23\x31\x91\x42\x9a\x8c\x51\x6d\x9b\xf5\x92\xbf\xbd\xbb\x1d\xf6\x76\x5e\xfe\xed\x13\x76\x30\xc3\xad\x17\xec\x93\x38\x2a\x73\xca\xa8\x38\x34\xb0\x59\x6a\x2f\x2d\xe1\xf9\xff\xf0\x5a\xce\x73\x25\xee\x6b\x3c\x0e\x58\xe0\x65\x4c\xd8\xe1\xfc\x0e\xfc\x6f\xfc\xb1\xc7\xcb\x6b\x5e\x85\xf1\x02\xa7\xbd\x5e\x0f\xb8\x57\xc1\x62\x9e\x8d\xb3\xb6\x9a\xcc\x64\x82\xc6\x81\x6d\x93\xd9\xe8\x4a\xae\x54\x44\xab\x78\x20\x99\x85\x52\x99\x21\x65\x23\x1a\x19\x05\x16\x78\x87\xbd\x93\xf2\x02\x07\xec\x7d\x81\x3b\xec\xf4\x5c\xe0\xcd\x02\x76\x68\x9d\xb1\x0d\xa4\x40\x2f\x51\x49\xad\x4f\x51\x47\xd6\xda\xbd\x56\xaf\xc5\xc2\x37\x66\xec\x41\x45\xc8\xb4\x8c\xd0\x4a\x6d\xe0\x4c\x95\x9e\x09\xcf\xe7\xdf\x00\x00\x00\xff\xff\xd2\xdb\x1b\x65\xe9\x01\x00\x00")

func keysTestAccount1StatusChainPkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount1StatusChainPk,
		"keys/test-account1-status-chain.pk",
	)
}

func keysTestAccount1StatusChainPk() (*asset, error) {
	bytes, err := keysTestAccount1StatusChainPkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account1-status-chain.pk", size: 489, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x8f, 0xba, 0x35, 0x1, 0x2b, 0x9d, 0xad, 0xf0, 0x2d, 0x3c, 0x4d, 0x6, 0xb5, 0x22, 0x2, 0x47, 0xd4, 0x1c, 0xf4, 0x31, 0x2f, 0xb, 0x5b, 0x27, 0x5d, 0x43, 0x97, 0x58, 0x2d, 0xf0, 0xe1, 0xbe}}
	return a, nil
}

var _keysTestAccount1Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4b\x8e\x24\x3b\x08\x45\xf7\xc2\x38\x42\xb2\x31\xd8\xd8\xf3\x57\xfb\xc0\x80\xf5\x52\xf5\x4b\x45\xa4\x4a\xdd\x2a\xd5\xde\x5b\x91\x83\xee\x19\x20\x74\xee\x3d\xdf\xa0\xee\x47\x9c\x27\x0c\x78\x29\xfc\x5f\x2a\xc8\xae\x2e\x2d\xb0\xd6\x6c\x14\x2f\x9d\xb3\xb3\x34\x6c\x51\x9d\xa5\x38\x1b\x6c\x60\xc7\xef\xfb\xe3\x13\xc6\x37\xd8\xed\xfe\x7f\x1c\x30\x40\xe3\xdc\x33\xca\x6e\x8f\xe3\x7a\x78\x9e\x1f\xf1\xeb\x01\x03\x48\x02\x7d\x89\xb7\xb4\x64\xae\x42\xea\x1a\x9c\x66\x9a\x29\x4a\x96\xa4\xa5\x63\xd0\x9c\xb9\x89\x66\xa5\x82\xe4\x66\x92\x08\x5b\x4c\x6a\x95\xd6\x5f\xde\x5d\x0f\x7d\x3f\xaf\xd8\xdb\xd7\xc5\x2d\xc4\xa6\xb4\xb0\xd8\xcc\x19\xbb\xf6\x9e\x5b\x0e\xe9\x5a\x3b\xb2\x24\xf8\xd9\xe0\xd5\x17\x0c\x38\x9f\x85\xe1\xb9\xfe\x83\xf8\xeb\x5b\x7c\xc0\x28\xb8\xc1\x07\x0c\xac\x98\x89\x36\xb8\xc3\xc8\x1b\x1c\x30\x64\x83\x53\xdf\x2e\x81\xdc\x99\xb1\xc9\x9c\x46\xab\x68\x22\xb1\xa4\xe2\xad\x79\x70\xca\x54\x8b\xa1\x08\xf6\x59\x9e\xb3\x06\xad\x1e\xc8\x68\x58\xda\xc2\xa9\xd6\xae\x22\xef\x6a\x30\xa0\xa3\x97\x60\xd2\xde\x22\xbc\x74\xcf\x8b\x6a\xc3\xb6\x12\x13\x55\x26\x4c\xcb\x78\x95\x6c\x6d\x51\xb4\x14\x42\x55\xa7\x75\x76\x5b\x2e\x53\xf0\x49\xba\x39\x0c\x98\x35\x11\x59\x95\xbd\x74\xa3\x9d\xaa\xfb\x2e\x39\xe3\x8e\x16\x8c\xd9\x19\x6d\x31\x6c\xf0\x15\xc7\x79\xfb\xbc\x24\x7f\xfe\x04\x00\x00\xff\xff\x0d\x85\xaf\xaf\xeb\x01\x00\x00")

func keysTestAccount1PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount1Pk,
		"keys/test-account1.pk",
	)
}

func keysTestAccount1Pk() (*asset, error) {
	bytes, err := keysTestAccount1PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account1.pk", size: 491, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0x43, 0xc2, 0xf4, 0x8c, 0xc6, 0x64, 0x25, 0x8c, 0x7, 0x8c, 0xa8, 0x89, 0x2b, 0x7b, 0x9b, 0x4f, 0x81, 0xcb, 0xce, 0x3d, 0xef, 0x82, 0x9c, 0x27, 0x27, 0xa9, 0xc5, 0x46, 0x70, 0x30, 0x38}}
	return a, nil
}

var _keysTestAccount2StatusChainPk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\xd0\xdb\x8a\x1c\x41\x08\x80\xe1\x77\xf1\xba\x1b\x2c\xb5\x8e\x6f\x63\xa9\x45\x86\x3d\x0d\xdd\xc3\x92\xb0\xcc\xbb\x87\xde\x10\xf6\xd2\x8b\xff\x43\xfd\x82\xcf\x38\xce\xdb\xc7\x3b\x0c\xde\xe0\xe6\x30\x60\x9a\x69\xa3\x4c\xfb\x4a\x9a\x76\x59\xa1\xbb\xd6\x25\x3b\x17\x12\x49\x94\x8c\xd0\x60\x03\x75\x3f\xe2\x3c\x61\x00\x61\xd6\xec\x18\x95\xd6\x2a\x19\x6b\x5f\xa6\x73\x8a\x16\x0e\x66\xa7\xa6\x5a\x3c\x16\x5d\x91\x1d\x7f\xee\x8f\x0f\x18\x5f\x60\xb7\xfb\xaf\x38\x1e\xf1\xfb\x01\x03\xa4\xf6\x5c\x3d\x2c\xa8\xba\x4a\x11\x66\x77\xf4\x9c\x27\x77\x5f\x69\x61\xd7\xe0\x1e\x5c\x98\xe6\x42\xed\xc6\xce\x4b\x71\x52\x42\xd1\xa6\x34\x2f\xf9\xdb\xbb\xeb\xa1\x6f\xe7\xe5\xdf\x3e\x61\x80\x75\xae\x91\x7b\x23\x69\xa4\x8e\x3d\x73\x2f\x09\xb5\xf6\x98\xdd\x4a\x15\x78\xfe\x0f\x61\x80\xc6\xb9\x27\x6a\xbb\x3d\x0e\xd8\xe0\xc5\x17\x0c\x38\xbf\x17\xfe\x37\xfe\xd8\xfe\xf2\x1a\xd7\xc3\x68\x83\x53\x5f\xaf\x03\xd8\xb4\x18\xb7\x94\x5b\xc9\x92\x75\x22\x1b\x49\x14\x94\x42\x86\xc9\xc9\x5b\x53\xa9\xc2\x5c\xb4\x7a\x12\xd4\xa6\x4b\x94\x32\x16\x66\xce\x15\x61\x83\x77\x18\x2d\x75\xda\xe0\x80\xd1\x36\xb8\xc3\x48\xcf\x0d\xde\xd4\x60\x00\x56\x47\x67\x6a\xd6\xb1\x36\x2b\xd1\x66\x89\x55\x72\xe5\x54\xa8\xab\x72\x4c\x6a\xd1\x91\x49\x1a\x2f\xa1\x99\x45\xcd\x94\x85\x5c\x22\xb1\x34\x78\x3e\xff\x06\x00\x00\xff\xff\x4e\x39\x80\x7d\xe9\x01\x00\x00")

func keysTestAccount2StatusChainPkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount2StatusChainPk,
		"keys/test-account2-status-chain.pk",
	)
}

func keysTestAccount2StatusChainPk() (*asset, error) {
	bytes, err := keysTestAccount2StatusChainPkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account2-status-chain.pk", size: 489, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9, 0xf8, 0x5c, 0xe9, 0x92, 0x96, 0x2d, 0x88, 0x2b, 0x8e, 0x42, 0x3f, 0xa4, 0x93, 0x6c, 0xad, 0xe9, 0xc0, 0x1b, 0x8a, 0x8, 0x8c, 0x5e, 0x7a, 0x84, 0xa2, 0xf, 0x9f, 0x77, 0x58, 0x2c, 0x2c}}
	return a, nil
}

var _keysTestAccount2Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x8f\x4d\x8a\x1c\x3d\x0c\x40\xef\xa2\x75\x15\xd8\xb2\x6c\x4b\xde\x7d\x7c\xe4\x20\xb2\x24\x93\x66\xfe\x9a\xaa\x66\x48\x18\xe6\xee\xa1\x7a\x91\x2c\x25\xc4\xd3\x7b\x5f\xa0\xee\x47\x9c\x27\x0c\xf8\x2f\x69\x16\xc4\x8c\x8d\x5d\x8a\x58\x51\xe9\x38\x57\xa5\x96\xfd\xff\x9c\x56\x17\x4e\x3f\x38\x13\x6c\x60\xc7\xef\xfb\xe3\x03\xc6\x17\xd8\xed\xfe\x33\x0e\x18\xa0\x71\xee\x19\x79\xb7\xc7\x71\x1d\x3c\xd7\x8f\xf8\xf5\x80\x01\xac\x2b\xc9\x5c\x9a\x50\x69\xf5\xa8\x2b\x17\x2d\xcc\x33\x8a\x64\xb7\x95\xc4\x6a\x36\xa6\x65\x2c\xc8\x84\x19\x31\x45\xea\xd6\x72\x4b\x84\x75\xf1\x5f\xde\x5d\x0f\x7d\x3b\xaf\xb7\xb7\x4f\x18\xd0\x75\x56\xd1\xa0\x2e\xb9\xf6\x1e\x1d\x3d\x9a\xd7\xe9\xac\x14\x48\xa1\xf0\xbd\xc1\x8b\x2f\x18\x70\x3e\x85\xe1\x39\xfe\x83\xf8\xcb\x6b\xbc\xc3\x28\xb8\xc1\x3b\x0c\x6c\x98\x89\x36\xb8\xc3\xc8\x1b\x1c\x30\x78\x83\x53\x5f\xaf\x00\xec\xd1\x6c\x72\xe4\x10\x4f\xd6\xdb\x9a\x73\x39\x91\x99\x22\xd5\xd2\x92\x2f\xa1\x24\xd3\x4c\xd4\x68\x51\x10\xdb\xa5\x35\xeb\x72\x9e\x49\xfa\x25\xf2\xa6\x76\x29\x2f\xf7\x59\x44\x3a\x7a\xcf\xb8\x26\x8a\x52\x59\x39\x72\xd4\x92\x4a\xe4\xc2\x1e\x26\x66\xa8\x2b\x66\xc2\xda\x82\xb5\xa7\x8a\xae\x54\xa4\x5b\xbb\x48\x37\x87\x01\x93\x51\xba\x4a\xde\x25\x05\xed\x24\x5e\x77\x6d\x4b\x76\xb6\x92\x2a\xf5\xc9\xd1\x14\x36\xf8\x8c\xe3\xbc\x7d\x5c\x91\xdf\x7f\x02\x00\x00\xff\xff\x80\x42\xa2\x5c\xeb\x01\x00\x00")

func keysTestAccount2PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount2Pk,
		"keys/test-account2.pk",
	)
}

func keysTestAccount2Pk() (*asset, error) {
	bytes, err := keysTestAccount2PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account2.pk", size: 491, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x9f, 0x72, 0xd5, 0x95, 0x5c, 0x5a, 0x99, 0x9d, 0x2f, 0x21, 0x83, 0xd7, 0x10, 0x17, 0x4a, 0x3d, 0x65, 0xc9, 0x26, 0x1a, 0x2c, 0x9d, 0x65, 0x63, 0xd2, 0xa0, 0xfc, 0x7c, 0x0, 0x87, 0x38, 0x9f}}
	return a, nil
}

var _keysTestAccount3BeforeEip55Pk = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x44\x90\xdb\x8a\x1c\x31\x0c\x44\xff\x45\xcf\xdd\x20\x4b\xbe\xc8\xfe\x1b\x59\x96\xc8\xb0\xb7\xa1\x7b\x58\x12\x96\xf9\xf7\xd0\x59\xc2\x3e\xd6\x43\x1d\x4e\xd5\x17\x7c\xfa\x71\xde\x3e\xde\x61\xf0\x06\xb7\x05\x03\xd0\x96\xb9\x85\xed\x46\x61\x7b\x26\x4d\xbb\xf8\x2a\x7b\x26\x33\xec\xd4\x16\x2f\x81\x0d\x74\xad\xc3\xcf\x13\x06\xb0\x2e\xce\x5e\xbb\xac\x2c\x58\x35\x16\xca\xe4\xd2\x67\x27\x8c\x62\x75\x56\x9a\x55\xdc\x33\x6c\x60\xc7\x9f\xfb\xe3\x03\xc6\x17\xd8\xed\xfe\xcb\x8f\x87\xff\x7e\xc0\x00\xa2\xd2\xbb\x98\x77\x56\x2d\x93\x5a\x6a\xa5\x60\xc9\x9c\xd2\x52\x31\x6b\x53\xa8\x24\x6a\x2b\x23\x5a\xa7\x16\xca\xc2\x0d\x3d\x27\xa6\x4e\x66\x97\xce\x37\xef\xae\x87\xbe\x9d\x17\xff\xf6\x09\x03\xa4\x27\x6a\xd9\x49\x5b\xa3\xb6\x34\xd9\xd2\xb4\xc8\x6c\x12\xfb\x94\x89\xf0\xfc\x5f\x84\x01\xea\xe7\x9e\x48\x76\x7b\x1c\xb0\xc1\xcb\x0a\x18\x70\xfe\x13\xfe\x8e\x3f\xec\xf5\xf2\xea\xd7\x61\xb4\xc1\xa9\xaf\xd7\x80\x45\x93\x50\xb5\xd5\x2c\x11\xd8\xc9\x98\x51\x1a\x51\xc6\xf0\x5c\x83\xc2\xd8\x53\x66\xa6\xc9\x42\x9a\x05\x25\x6a\xc1\xc9\x56\xa5\x4b\x2d\x13\x36\x78\x87\x21\xa9\xd3\x06\x07\x0c\xd9\xe0\x0e\x23\x3d\x37\x78\x53\xbb\xd4\x10\x33\x63\x13\x89\xd5\x66\xa0\x93\xbb\xd7\x48\x5c\x4a\xcb\xa5\x27\x8e\xe2\x14\x25\x65\xaa\x1a\x9d\x58\x8a\x22\xba\x9b\xa6\x28\xd6\x98\x12\x3c\x9f\x7f\x03\x00\x00\xff\xff\x4c\x6d\xd5\xbe\xe9\x01\x00\x00")

func keysTestAccount3BeforeEip55PkBytes() ([]byte, error) {
	return bindataRead(
		_keysTestAccount3BeforeEip55Pk,
		"keys/test-account3-before-eip55.pk",
	)
}

func keysTestAccount3BeforeEip55Pk() (*asset, error) {
	bytes, err := keysTestAccount3BeforeEip55PkBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "keys/test-account3-before-eip55.pk", size: 489, mode: os.FileMode(0644), modTime: time.Unix(1573806410, 0)}
	a := &asset{bytes: bytes, info: info, digest: [32]uint8{0x81, 0x40, 0x56, 0xc1, 0x5e, 0x10, 0x6e, 0x28, 0x15, 0x3, 0x4e, 0xc4, 0xc4, 0x71, 0x4d, 0x16, 0x99, 0xcc, 0x1b, 0x63, 0xee, 0x10, 0x20, 0xe4, 0x59, 0x52, 0x3f, 0xc0, 0xad, 0x15, 0x13, 0x72}}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// AssetString returns the asset contents as a string (instead of a []byte).
func AssetString(name string) (string, error) {
	data, err := Asset(name)
	return string(data), err
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// MustAssetString is like AssetString but panics when Asset would return an
// error. It simplifies safe initialization of global variables.
func MustAssetString(name string) string {
	return string(MustAsset(name))
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetDigest returns the digest of the file with the given name. It returns an
// error if the asset could not be found or the digest could not be loaded.
func AssetDigest(name string) ([sha256.Size]byte, error) {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[canonicalName]; ok {
		a, err := f()
		if err != nil {
			return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s can't read by error: %v", name, err)
		}
		return a.digest, nil
	}
	return [sha256.Size]byte{}, fmt.Errorf("AssetDigest %s not found", name)
}

// Digests returns a map of all known files and their checksums.
func Digests() (map[string][sha256.Size]byte, error) {
	mp := make(map[string][sha256.Size]byte, len(_bindata))
	for name := range _bindata {
		a, err := _bindata[name]()
		if err != nil {
			return nil, err
		}
		mp[name] = a.digest
	}
	return mp, nil
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../config/README.md": ConfigReadmeMd,

	"../config/cli/fleet-eth.prod.json": ConfigCliFleetEthProdJson,

	"../config/cli/fleet-eth.staging.json": ConfigCliFleetEthStagingJson,

	"../config/cli/fleet-eth.test.json": ConfigCliFleetEthTestJson,

	"../config/cli/les-enabled.json": ConfigCliLesEnabledJson,

	"../config/cli/mailserver-enabled.json": ConfigCliMailserverEnabledJson,

	"../config/status-chain-genesis.json": ConfigStatusChainGenesisJson,

	"keys/bootnode.key": keysBootnodeKey,

	"keys/firebaseauthkey": keysFirebaseauthkey,

	"keys/test-account1-status-chain.pk": keysTestAccount1StatusChainPk,

	"keys/test-account1.pk": keysTestAccount1Pk,

	"keys/test-account2-status-chain.pk": keysTestAccount2StatusChainPk,

	"keys/test-account2.pk": keysTestAccount2Pk,

	"keys/test-account3-before-eip55.pk": keysTestAccount3BeforeEip55Pk,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"},
// AssetDir("data/img") would return []string{"a.png", "b.png"},
// AssetDir("foo.txt") and AssetDir("notexist") would return an error, and
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		canonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(canonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}

var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"README.md": &bintree{ConfigReadmeMd, map[string]*bintree{}},
			"cli": &bintree{nil, map[string]*bintree{
				"fleet-eth.prod.json":     &bintree{ConfigCliFleetEthProdJson, map[string]*bintree{}},
				"fleet-eth.staging.json":  &bintree{ConfigCliFleetEthStagingJson, map[string]*bintree{}},
				"fleet-eth.test.json":     &bintree{ConfigCliFleetEthTestJson, map[string]*bintree{}},
				"les-enabled.json":        &bintree{ConfigCliLesEnabledJson, map[string]*bintree{}},
				"mailserver-enabled.json": &bintree{ConfigCliMailserverEnabledJson, map[string]*bintree{}},
			}},
			"status-chain-genesis.json": &bintree{ConfigStatusChainGenesisJson, map[string]*bintree{}},
		}},
	}},
	"keys": &bintree{nil, map[string]*bintree{
		"bootnode.key":                  &bintree{keysBootnodeKey, map[string]*bintree{}},
		"firebaseauthkey":               &bintree{keysFirebaseauthkey, map[string]*bintree{}},
		"test-account1-status-chain.pk": &bintree{keysTestAccount1StatusChainPk, map[string]*bintree{}},
		"test-account1.pk":              &bintree{keysTestAccount1Pk, map[string]*bintree{}},
		"test-account2-status-chain.pk": &bintree{keysTestAccount2StatusChainPk, map[string]*bintree{}},
		"test-account2.pk":              &bintree{keysTestAccount2Pk, map[string]*bintree{}},
		"test-account3-before-eip55.pk": &bintree{keysTestAccount3BeforeEip55Pk, map[string]*bintree{}},
	}},
}}

// RestoreAsset restores an asset under the given directory.
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	return os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
}

// RestoreAssets restores an asset under the given directory recursively.
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	canonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(canonicalName, "/")...)...)
}
