// Code generated by go-bindata.
// sources:
// ../config/cli/fleet-eth.beta.json
// ../config/cli/fleet-eth.staging.json
// ../config/cli/fleet-eth.test.json
// ../config/cli/les-enabled.json
// ../config/cli/mailserver-enabled.json
// ../config/status-chain-genesis.json
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ConfigCliFleetEthBetaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x56\x5b\x8f\x1e\xc5\xd1\xbe\xf7\xaf\x78\xb5\xd7\x9f\xde\xed\x3a\x77\xf9\xca\x1f\x04\x62\x41\x82\xcc\xc1\x04\x12\xe5\xa2\xba\xaa\xda\x76\x70\xbc\x64\xbd\xb6\x82\x23\xfe\x7b\x34\xcb\x46\x60\x60\x2f\x46\x1a\xf5\xcc\x74\x3d\x53\xcf\xa1\xeb\x3f\x0f\x4e\xa7\x8b\x2f\xfa\x55\xf5\xbb\xb7\x57\x6f\x5e\x5f\x3c\x3c\xdd\x5c\xbf\xe9\xff\x3b\x56\x3f\xbb\xfa\xc3\x8b\xd7\x79\xf5\xb6\xaf\x7f\xb8\x78\x78\xda\xf1\xf2\xf5\x4f\xeb\x1f\xbe\x7c\xf3\xfa\xa6\xaf\x3f\xbc\x7a\xb5\x5f\x3c\xbb\x78\x78\x3a\xb6\x38\x9d\x2e\x3e\x7a\x15\xeb\x65\xd7\x2f\x76\x38\x9d\x2e\x3e\x7e\xd9\x7d\x73\xf1\xf0\x74\xd1\x37\xcf\xcf\xab\x6f\xe2\xe2\xee\xc1\x07\x57\x57\x37\x9f\x5d\x55\x1f\x15\xff\x76\xbb\x74\x3a\x5d\xf4\xab\xab\xea\x87\x97\x97\x3d\xc3\x72\xd0\x92\xe9\x00\xed\x73\xad\x52\x8d\xcc\x85\x21\x52\x62\x3a\x69\x93\x2c\xa4\xb5\xbd\x76\xc6\xf4\x96\x46\xe6\x5e\x92\x49\x1b\x65\xc0\x5c\x0c\x80\xb5\x64\xd8\x8e\x0c\xe2\xbd\xd4\xf7\x5e\xcc\x8b\x14\xb7\x79\x57\xb8\x85\xaa\xc7\xac\x8d\x9e\x86\xad\xc2\x0c\x6a\x93\x1f\xb1\x9d\x1d\xce\x88\x7c\x26\x79\x48\x83\x07\xdf\xe1\xfe\x05\x48\x26\xcd\xd4\xad\xc6\x8e\x73\x57\x7a\xf8\x36\xf7\xb1\xd1\x99\xc7\xc0\xa5\x53\x0a\x92\x6c\x0f\x94\x84\xd5\x8c\x02\x53\x96\x2c\xd8\xc3\xc7\xd8\x1d\x1b\x32\x13\x43\x81\x06\xea\xdc\xee\xe3\x78\x2d\xac\x50\x70\x93\xd1\xc0\x9c\x44\x12\x98\x10\x8a\x46\xda\x8e\x84\xea\x90\x49\xf1\x08\x8c\xcf\x40\xf3\x0c\x43\xce\xc8\x74\x1f\x4e\x63\xb4\xda\x4d\x73\x15\xe7\xb6\x94\xb9\x96\x2b\x83\xcd\xa1\x3b\x16\x8a\x4d\xec\xa4\xd6\xc1\x1a\x73\x08\x91\x8d\x81\x98\x2b\x02\x27\x08\x69\xcf\x52\xee\x2c\x58\x03\x1b\xf6\xdc\x86\xa6\xb3\xd1\xa5\x86\xa2\xcc\x15\x4c\x35\x27\x0d\xae\x35\x74\xb6\x6e\x64\xb0\xe8\xb9\x72\x79\xe8\x23\x18\x7c\x06\xe1\xf3\x9c\x67\xc0\x7b\x61\x32\x39\xdb\x54\xca\x1d\x12\x51\x00\x36\x37\x4f\x8c\x24\x89\xd9\x6b\x39\x80\x66\x75\x41\x22\x6d\xdb\x1e\x1b\x82\x6d\x45\xed\x84\x6e\xdb\xa3\xca\x3b\x87\x30\x31\x58\x26\xb1\x21\x4a\x68\xb3\x35\x6b\xea\x34\xda\xca\x26\xe2\xcd\xc4\xc4\xe2\x9a\xc2\x0d\x16\x5c\x14\xd0\xb7\x9c\x0b\x9e\x8f\x9e\xf2\xb8\x0f\xa4\x90\x4b\xc4\xb2\x49\xb4\xa1\x73\xa9\xc1\x12\x5f\x7b\x08\x42\x6e\x1c\x88\xbc\x7b\x82\xe2\x4e\x2a\x54\x93\x6a\xee\xe6\x12\x25\x0d\x93\x4e\xc2\x02\x3a\xb8\x4e\x98\x5c\x7b\x16\x54\xed\x98\x83\x9c\xc9\x87\xce\x89\x15\x8a\xc1\xb5\x19\x8b\x77\xe6\xd6\x3a\x98\x9a\x20\x1a\xd3\x1e\xe1\xd0\x33\x4c\x3f\xf8\x3e\x8b\xdd\x07\xb3\x57\xef\x58\xe4\x4b\x7d\xad\xd5\xca\x35\xb3\xa6\xae\x36\x95\x45\xab\x49\xb4\x66\xf2\x42\x56\x1d\x5b\xa5\xd8\x09\x98\x62\x24\xf3\xa6\x99\x53\x02\xc5\x68\x8c\x83\x04\x9b\x2c\xe2\x18\xb0\x06\x11\x4e\x00\x61\x6c\x0f\x99\x38\x21\x27\xc9\x8a\x55\x65\x72\x7b\xb3\x94\x7b\x27\x3c\x22\x39\xe3\xc0\xb3\xfb\xe1\xa1\x3b\x94\xb7\x20\xff\x7e\x67\xff\xaf\xae\x8f\x0c\xa9\x3f\xc7\x8b\x97\x5f\xf6\xf5\xdb\xbe\xfe\xdd\x1c\xa8\x50\x68\xef\xbd\xa7\x86\xa8\x12\x2d\x25\xd9\x73\x5a\xcd\xe5\xd0\x63\x6f\x41\xd2\xb5\x72\xc8\x9a\xa0\x3e\x89\xd1\xb1\x1d\x63\x2f\x47\x47\xaf\xdc\xda\xbb\xd6\x61\xa6\x20\xf3\x41\x15\x73\xf7\xa0\xc9\x25\x31\x62\x22\x5b\x4f\xda\x90\x8d\x00\x11\xc7\xe7\x63\x2c\x2d\x9c\x29\x3c\xef\x72\x00\x44\xcf\x7e\x08\x57\x7e\xaf\xd9\xc9\xb8\x49\x67\x20\xed\xf0\xd9\x2d\xac\xbb\xf0\x90\xdf\x30\xf1\xa1\x48\x48\xc8\xde\x5b\xc5\x0a\xb5\x48\x2c\xcc\x8c\x99\xa2\xf3\xf0\x0c\x2c\xf4\xa0\x40\xec\x4d\x6d\x47\xdd\x86\xc9\x4e\x55\xb1\x05\x82\x60\x8d\xe8\xd2\x61\xbe\x4a\x7b\xb5\x44\x4f\x9a\x3b\x77\x6c\x0a\xf6\xf7\x34\x01\x8a\xf7\xe1\xb4\x6a\xf7\xe6\x5c\xb0\x48\x90\x56\xa1\x66\x20\x20\xa9\x0b\x0f\x3d\xa4\x60\x69\x08\x51\xbc\xa9\x25\x27\x42\x97\x03\x4f\x90\x91\xad\xd9\xd8\x86\x4a\x60\x48\x47\x3e\xc0\xd8\x91\xb0\x4b\xf0\x10\xf0\x5a\xb5\x49\x44\x7a\x08\x99\xc7\x36\x17\x90\x06\x30\xaf\xa0\xc3\x8e\xb5\x0e\x51\xc0\x91\x01\x7e\x46\x18\xf7\xa2\x64\x1e\x3e\x63\x69\x11\x8d\x19\x5b\xb2\x06\x39\x8e\xe8\xd0\x91\xac\x05\xba\x30\x8b\x8a\x68\x6d\x52\xcb\x15\x1b\x6a\x40\xe2\xce\x1a\xaa\xfb\x90\xc7\x14\xd3\x1a\xae\x36\xdd\xb2\xac\xd6\x1a\xad\xb4\xa7\x51\xe6\x58\xbc\xad\x79\x8d\x0d\x65\x88\xd8\xba\x88\x05\xc2\x66\xf9\xaa\x38\x28\x3f\x7a\x39\xce\x20\xf7\x62\x8c\x50\x9e\xa5\x3d\x45\x5c\xc6\xc2\xa6\xa2\xb5\x11\x47\xb2\x6b\x8f\x8c\xe6\xa8\x5d\x75\x10\x0a\xad\x43\x8f\x2a\x60\x16\x9d\x4e\x2b\x35\x2b\x37\xe0\xc4\x5c\x3c\x0a\x54\xd4\x09\x7b\xed\x2a\x51\x31\xf4\x0a\xe6\x41\x3a\xcb\x92\x2b\xac\x56\x71\x8d\xc1\x0b\x22\x07\xae\x3d\x7f\xc5\xb8\xdf\x87\x73\x80\x34\xe2\xd6\x2c\x5c\xcc\x39\x43\x60\x95\x05\xde\x12\x85\x06\x7d\x08\x34\xad\x6c\x0b\x32\xa1\x81\xab\x4a\x18\xbb\xea\xc6\x0a\x96\xc3\x07\x0d\xc2\x3d\x49\x57\xb7\x0e\xc7\xc5\xa5\x53\x77\xab\x35\x11\xa8\x88\x4c\x4d\xb1\x65\x30\x57\x93\xbb\x25\x28\x7a\xe1\x71\x90\xde\xc6\x00\xea\x19\xe1\x0c\xf7\x82\x34\x76\xb1\x26\x85\x58\xe8\xa3\x35\x36\x4b\x00\xb2\x90\xae\xf4\xa8\x6e\xf2\xbd\x0a\xb7\xbb\x84\x59\x64\x6b\x97\xd5\x90\xf2\x80\xb4\xf4\xb9\x6c\x2e\xac\x2d\x7b\x0e\x83\x64\xf2\xe5\x39\x62\x37\x87\xfa\x74\xea\x3a\xd8\x50\x22\x36\xda\xae\x2b\xc1\xa5\x6a\x13\x6d\xcd\x1e\xe3\x2e\xf7\x51\xe4\x0c\x7e\x2f\xe5\x33\x94\x17\x25\xb1\x07\xf6\xe8\xcd\x41\xd8\xc1\xae\xc3\xfb\x30\x25\x91\xf2\x6a\x00\x18\x28\x94\x38\xa2\x12\x2c\x28\x7b\xad\x24\x0f\x04\x6f\x29\x6a\xa0\x05\x02\x39\xba\x5b\x6a\xf6\xd8\x1e\x73\x05\x66\x0d\xd4\x01\xdc\x6a\x8b\x21\x38\x96\x15\x94\x54\xa9\x65\xe0\x71\x80\xff\x8a\xf2\x79\x1f\x4e\x21\x68\x14\xec\x74\xd5\x75\x1b\x6d\x22\x34\x13\x7c\x6d\xc8\x6a\xa3\x09\x99\xe6\xec\x03\xf5\x38\x1c\xdd\x97\xb6\xfb\x6c\x75\x31\x81\x88\xda\xa8\xc5\xe9\xb3\x24\xb8\x63\xed\x65\xd9\xbb\x08\x92\x72\xce\xd2\x31\xc2\x4c\x36\x70\x97\xd8\x04\xc1\x11\x73\x76\x16\x4a\x05\xa5\xfe\x44\xf9\x71\xd9\xd9\xfe\xc7\xf9\x7b\xc9\xff\xe5\x4d\xdc\xbc\xc8\x7b\x47\x3f\xf0\x69\xb8\x9d\x17\xb4\x99\x56\x50\x00\x35\x4a\xec\x30\x58\x6c\xb5\xc3\xbd\x55\x66\xec\x52\x46\xeb\x38\x7c\x38\x28\x11\xc3\x7d\x03\x89\x0f\x1c\x12\x73\xa2\x32\x53\xbb\x04\x59\x77\x43\x4d\x90\x9d\x4c\x14\xdb\x62\x66\x1c\x63\xdf\xa8\x6d\xce\x54\xb0\x45\x74\xf2\x60\x59\x3f\x69\x96\xe6\x59\xc7\x19\x49\x1f\xd2\xa0\x21\xbf\x6d\xb3\xeb\x30\xb3\x3d\x60\x59\x65\xc5\x31\x54\x11\x78\x53\x54\x17\x81\x05\xa0\x6d\x9d\xaa\x04\x0b\x6c\x60\x18\xe8\x8c\xe2\x31\xd7\xdc\x73\x99\x82\xa2\x61\xcd\x71\x08\x31\x96\x85\x84\xae\xe4\x55\xc3\xa2\x1d\x73\x50\x23\x2d\x5e\x33\x8b\xd7\x9e\x32\x6b\x6c\xbb\x9d\x22\x3a\x4d\xd3\xf7\x9d\x68\x65\x9e\x11\xe8\x0e\xe4\x7b\x5d\xfe\x79\xa2\xff\x4d\xa7\x2f\x5f\x7c\xcf\x97\xbf\x9a\x1d\x2f\x6f\xf2\xfb\x4b\x1a\x36\xe8\xb2\x6f\x9e\xbf\xe5\x4b\xd0\xa7\x2f\xde\xe0\xe3\xff\xff\xe7\x17\x8f\x9f\xbc\xfb\x98\xae\x3f\x7f\x26\xf2\xe4\xd9\xb7\x4f\xf2\xf3\xef\x7e\x78\xfb\xe4\xeb\xc7\xfe\x0a\x9f\xff\xe5\xf5\xb7\x4f\x9e\x3f\xfd\xe4\x83\xbf\xea\x77\x5f\xff\xe3\x93\x67\xf5\xf5\xcf\x7d\xba\xad\xf1\xfe\xac\x72\x7f\x89\x3f\xfd\xeb\xab\x6f\xde\x7c\xcb\x5f\x2e\xfd\x23\xce\xc7\x9f\x5d\x5d\xc5\xc7\x4f\xbf\x79\xfa\xe9\xbb\xef\xdf\x7d\xfa\xcd\x87\xf9\xec\x87\x4f\xfe\xfd\x2c\x3e\xfa\x08\x5f\xc8\xdb\x57\xfb\xee\x2f\x1f\x9c\x4e\x3f\x3e\xf8\xf1\xc1\x7f\x03\x00\x00\xff\xff\x10\xd9\x12\xac\xbd\x0c\x00\x00")

func ConfigCliFleetEthBetaJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthBetaJson,
		"../config/cli/fleet-eth.beta.json",
	)
}

func ConfigCliFleetEthBetaJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthBetaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.beta.json", size: 3261, mode: os.FileMode(420), modTime: time.Unix(1544186285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthStagingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x5d\x6f\x5c\xc7\x0d\x86\xef\xfd\x2b\x16\x7b\x5d\x1c\x91\x33\x1c\x0e\xa9\x2b\xd5\x8e\x64\x21\xad\x0d\x57\x8e\xdd\xc0\x45\x2f\x66\xf8\x21\xa9\x52\xb5\xce\xee\xca\xb1\x53\xe4\xbf\x17\xeb\x28\x88\x9d\x44\x77\x0b\x2e\x0e\xdf\xe7\x3c\x78\x0f\xff\xf7\x64\xb5\x5a\x5f\xc4\x9d\xc7\x4f\x1f\x36\xf7\xbb\xf5\xf1\x6a\xbf\xbd\x8f\xbf\x1c\xa6\x2f\x37\xdf\x5c\xef\x6c\xf3\x21\xb6\x9f\xd6\xc7\xab\x1c\xb7\xbb\x5f\xe6\xcf\x6e\xef\x77\xfb\xd8\x3e\xdb\xdc\xe5\xf5\xe5\xfa\x78\x75\x58\xb1\x5a\xad\x4f\xef\xc6\xbc\x0d\xff\x62\xc3\x6a\xb5\x3e\xbb\x8d\xd8\xaf\x8f\x57\xeb\xd8\x5f\x2d\xbb\xfd\xb8\xbc\xbe\xbb\x5c\x3f\xfc\xf7\x74\xb3\xd9\xbf\xdc\x78\x1c\x42\xff\xf5\x79\xb4\x5a\xad\xe3\x6e\xe3\x71\x7c\x74\xc4\x15\x26\x54\x2a\x36\x28\xb4\xb5\x92\x0d\x3a\xd2\x64\x93\x28\xe2\xac\xad\x4d\x83\x74\xa4\xe8\xda\x20\xb5\x4e\xab\xb3\x4c\x31\x13\xc3\xac\x93\x1d\xa1\x7a\x32\x67\xc3\x81\xd5\x7b\xaf\xb3\xf9\x84\xc4\x0a\xcc\x98\xb3\x59\x9f\x92\xa3\xa0\x91\x88\x82\x31\x59\xd7\x49\x38\x1a\x0f\x52\x38\xa1\xbe\x28\x2e\xa5\xe8\x42\x74\x5c\x81\x80\x1e\xb8\xbf\x80\xcc\xae\x39\xab\xa2\x66\x2f\x36\x1a\xc3\x70\xa0\x4a\x6e\x56\xa5\x8f\x99\x41\x18\xc0\xcc\x05\x30\xa6\x0f\x1f\x12\x1e\x40\x5c\xa8\xd1\x01\x2a\x26\x34\xf3\x81\x2d\x8b\x74\x2f\x46\xd3\xa5\xf9\x10\x4c\x88\x59\x9a\xc3\x20\xe1\x39\xa7\x89\x27\x95\x3e\xb5\xe3\xb0\x86\xad\xd6\xe9\x00\x19\x27\xd8\x69\xc1\x2a\x0b\x42\x5f\x4a\xd5\xc7\x38\x11\x46\x17\xc3\xae\x45\x47\x07\xd4\x48\x1a\xa3\x14\x52\xef\x15\x4a\x76\x1e\x21\x03\x38\x09\x66\x71\x13\x99\x7d\x56\x8c\x99\x49\x83\x4b\xcd\x39\x89\xe6\xe1\x67\x1f\x36\x47\x51\x36\xb4\xf0\xda\x7b\x73\xc5\x9c\x81\x42\x5c\x0d\x1b\x68\x1f\x3c\x2a\xa7\xcf\x62\x02\x94\x59\xd3\xda\xac\xed\xa4\xb6\xa5\x54\x59\xf4\x40\xf9\xab\xcd\xcf\x90\xff\x7e\xe8\xc2\x77\xdb\x43\xa7\xfc\xc5\xb8\xbe\x7d\x1d\xdb\x0f\xb1\xfd\xd3\x52\xcc\x4e\xd2\x14\x3b\x9b\xf6\x86\x5e\x91\x46\x44\xa6\x15\x0e\xd3\x14\xe6\x41\x58\x7a\x2b\xd1\xdd\xc3\x14\x27\x2a\xa0\x0c\x94\xe8\x66\x43\x9c\x6b\xb7\x8c\x62\xe1\x36\xb5\x97\x94\x98\x4c\x2e\xc8\x39\xbd\x4d\x0a\x51\xeb\x21\xd6\xd3\xbb\xa7\x0c\xac\x45\x73\x50\xf5\x29\x30\x61\x66\x1c\x4a\xd1\xca\xa2\xb0\x60\xe3\xe3\x0a\xed\xcf\x64\xf3\xa1\x0d\x73\x8c\x9e\xd8\x4b\x71\x44\x1c\x62\x6a\x2c\x56\x75\x54\xa4\x0a\xa1\xde\xb8\xb3\xb6\x64\x04\xc9\x8a\x66\x93\xcd\x25\x61\x78\x26\xa9\x62\xf4\x74\x1b\x92\xa3\x77\x88\xde\xa6\xc9\x68\x87\x3d\xdd\x0b\xb1\x82\x4d\x13\x08\x00\xc1\xde\x92\xc0\xb0\x75\xe7\xe4\x2e\xe2\x24\x27\x05\x78\x41\xd1\xa5\x10\x2c\xf8\x28\x66\x50\x1a\x82\x61\x72\x33\x19\xe1\x52\x87\x15\x9e\x86\x33\x67\xc1\x41\xcd\x0c\x87\xb4\x06\xa3\x09\xf4\x6e\xe2\xc5\xa3\x0c\x08\x30\x47\x09\x82\x74\x82\xec\xc1\xd9\x1d\x8a\x1b\x9b\x03\xab\x94\x09\x48\x16\x22\xce\x41\x2c\xbd\xb4\x3c\x18\xc7\x2a\xa1\x4d\x0e\x84\x00\x50\x46\xcf\x5f\x3a\xa1\x0b\x6a\x5d\x08\x1f\x28\xbf\xea\xc4\xeb\xfd\xd8\x5f\xdb\xa3\x17\x42\x91\x0c\x66\x85\x2c\x7d\x8e\x59\xc1\xd0\xd3\x2b\xfa\xf0\xce\xad\x0c\xe2\xf4\xa1\xb5\x43\xa3\x32\x22\x70\x02\x17\x52\x99\x58\xa9\x45\x80\x62\x65\xa4\x29\x53\xa3\x86\x10\x97\x12\x42\xa3\x17\xa8\xd6\xa4\xc9\x08\x74\x15\xd4\xe4\x3a\xc2\x02\x6b\x04\xb3\x04\x25\x33\x0b\x70\x55\xd1\x13\xe4\xbe\xe8\xe1\x05\x16\x24\x39\xae\x50\xa1\xfd\x51\x73\x71\xd1\x6e\x7c\x88\x50\xd2\x54\xb7\x44\x28\x5d\x13\x20\x74\x4a\x2d\xcd\x50\x32\x7a\x8e\x56\x9c\x9b\xb4\x02\xc3\xfb\x0c\x65\xe8\x26\x15\x40\x26\x95\x09\x3c\x22\x5d\x0f\xed\xc5\xf4\x31\x5b\xc7\xac\x75\x94\xa1\x55\x6a\xa6\x76\x6b\x0a\x1a\xde\x30\xb9\x1e\x1e\xaa\xa4\x58\x4b\xed\x71\xd0\x8c\x5a\x16\x58\x84\x1f\x18\xbf\x92\xfc\xdb\xe9\xff\x83\xe8\xa3\xeb\xf7\x74\xf4\xd5\x97\x7b\xb4\xb7\xf7\x47\x15\x3a\xd4\xa3\xd8\x5f\x7d\xa0\x23\xe4\x37\xd7\xf7\xe5\xfc\xaf\xff\xe5\xe7\xba\xfb\xe6\xc5\xcd\xf6\x29\x7d\x3f\xda\xe9\x79\x7d\xf7\xb1\xf8\xa7\xdd\xb3\x8f\x67\x97\x4f\xbf\x7b\x7d\xf1\xd3\xe5\xd5\xb5\xd5\x77\xba\xbf\x38\xbb\x78\x79\xfa\x9b\xa4\xcf\x09\xbf\xbb\x61\x8f\x67\xc8\x9b\x77\xdf\xbf\x39\x3f\x7d\xf5\x6e\xfb\xfe\xdb\x69\xff\xa8\x9f\xde\x9e\x9d\xf3\x9b\xfd\xdf\xb6\x3f\xee\x9e\xf3\x7f\xce\x69\x5c\xf7\xf2\x6a\x37\xff\x9e\x6f\xcf\xe6\xef\x32\xbe\x3c\xe6\x8f\x07\x5c\xdc\xed\xcb\xe9\xa7\xcd\xcd\xdd\x55\x1d\xf7\x1f\xaf\x28\xbf\xfd\xf1\xe6\xe2\xf2\x87\x9b\x73\xbc\xfc\x61\xfb\xcf\xe7\xb1\x93\x57\x37\x78\x53\x5f\xbc\xa5\x8f\xf7\x0f\x16\x9f\xac\x56\x3f\x3f\xf9\xf9\xc9\xff\x03\x00\x00\xff\xff\xb8\x10\xb5\xe1\x46\x07\x00\x00")

func ConfigCliFleetEthStagingJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthStagingJson,
		"../config/cli/fleet-eth.staging.json",
	)
}

func ConfigCliFleetEthStagingJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthStagingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.staging.json", size: 1862, mode: os.FileMode(420), modTime: time.Unix(1544186285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthTestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x3d\x8b\x9c\xdd\x0d\x86\xfb\xfd\x15\xc3\xd4\x61\x5e\x1d\x7d\x6b\x2a\xe3\x8f\xa4\x71\xdc\x38\xa9\x42\x8a\xa3\x23\x1d\x67\x61\xf1\xc0\xee\xd8\x10\x82\xff\x7b\x98\xf5\x16\x8e\x63\xb7\xf7\x23\xf4\x5c\xdc\xba\x38\xff\xb9\x3b\x1c\x8e\xef\x2f\x9f\xde\xf7\xd7\x7e\x38\x9e\x0f\xc7\xb7\xef\x5e\xff\xfd\x2f\xc7\x3f\xdd\xe2\x0f\x97\xb7\xf7\x4f\xeb\xf2\xb5\x1f\xff\x7d\x3c\x1f\xf6\x7c\x78\xea\xe7\xfc\xcd\xc3\x97\xa7\x6b\x3f\xbe\xb9\x7c\xde\xf7\x9f\x8e\xe7\xc3\x6d\xc7\xe1\x70\x7c\xf7\x79\xe6\x43\xd7\xf1\x7c\xb8\x3e\x7e\x79\x9e\x3c\x1c\x8e\x7f\x7e\xe8\xbe\xde\xf6\xf6\xf5\x5f\xa7\x6b\x3f\x5d\x8f\x2f\x1f\x5e\x5f\x2e\xd7\x0f\x97\xea\xa7\xe3\xf9\xf0\x8f\xe7\xe8\x70\x38\xf6\xe7\x4b\xf5\xf9\x8f\x3f\x6a\xce\xc6\x36\x74\x84\x76\xed\x60\xdc\x13\xa7\xcf\x69\xa5\x1d\x21\x5c\x0c\x4c\xd3\x84\xd8\xa9\x3c\x8b\xc8\x7b\x68\xb6\xe3\xda\xa1\x48\x81\x25\x0b\x7a\xcc\x16\x5b\x54\x16\xb4\xa8\xa8\xaa\xca\x77\x89\x13\x05\x2a\x36\x23\x71\xad\x50\xdd\x21\xb4\xca\x28\x85\x64\xcb\x9e\xaf\xd8\x4e\x82\xa7\xe1\x7e\x1a\x1c\x67\x02\x06\x7e\x01\xff\x81\x32\x1a\xc2\x5d\x4c\x3a\xcd\x86\x2d\x94\xea\x69\xb8\x6b\x8c\x65\x49\x66\x6a\xb5\x20\xd6\x98\xa6\xae\xdb\x16\xf6\x12\xb3\x22\xf0\x42\xbe\x0d\xac\x4e\x35\xa9\x66\x1a\xc6\xc6\x73\x4c\x37\x68\x36\x77\x34\xc2\x50\xdb\xbc\xa7\xb9\x24\x60\xce\x90\x52\x8d\xa4\x51\xac\x5c\xbd\xe0\x15\x82\x9e\x86\xc7\x09\x99\x4e\x43\xf9\x77\x9c\x6b\xb4\xc0\x70\x77\x5b\xae\x54\xca\xb7\xff\xa5\x46\x6e\x1d\x26\x3a\xc0\xcd\x51\x98\xa0\x99\x61\x18\xd1\x96\x9c\x66\xcb\xa0\x72\x30\x92\xd6\x26\x1f\xbb\x77\x42\x67\x8f\xb9\x18\x31\x38\xa3\x51\x47\x66\x23\x51\x65\xa5\x53\x13\x2e\x71\x5d\xaa\xb3\x51\x97\x57\x1b\xac\xe4\xf5\x8a\xe4\x7b\x95\xea\xa7\x41\xf6\x82\xf9\x4c\xf9\xcf\x17\x1b\xfe\xf6\x78\x53\xaa\xfe\x3a\xef\x1f\x3e\xf6\xe3\xd7\x7e\xfc\xa5\x16\x21\xbc\x40\x15\x68\x6a\x9b\x48\xee\xdd\x11\x81\x3a\x64\xb3\x89\x38\x7b\xd6\x8c\x39\xab\xa6\x71\x05\xc2\x9c\x34\x6a\x94\x37\x6f\x05\xc4\x5a\x22\x5a\x6b\xaa\xa9\x6f\x9f\xb0\x83\x25\xb6\x58\x1a\x86\x40\x54\xd2\xf2\xa4\x4c\x87\xb9\x76\x96\x4f\x1c\x48\xe0\xb6\x75\x65\x59\xd6\x8f\x5a\x84\x9e\x09\xe4\x57\x75\x37\xbb\xca\x6e\x5d\x38\x6f\xb7\x17\xa5\xa9\xcc\x16\x01\xe5\x1d\xab\xd5\x50\x99\x67\x53\x83\xe3\xcd\x01\xf2\x5e\x63\xdf\x2e\x02\xdd\x5b\x09\x61\x81\x4d\x29\x85\x45\xa9\x18\x5b\x8a\x39\x78\x07\x95\xa6\xeb\x34\x96\x09\xb9\x95\x67\x62\x48\xe6\x56\xb1\x80\x61\xb3\x96\x76\xf9\x4f\x5a\x8c\xdf\x71\x1a\x58\x8b\xb1\xd0\x5c\x45\xcd\xee\x8b\x39\xa3\xa0\x87\x85\x09\xd9\x68\xdc\xbe\x6f\x82\xa2\xf4\x6c\xc9\xb9\x66\x64\x2c\x6f\xd0\xe5\xba\xaa\x6d\x59\xf0\xd4\x85\x4d\x8a\x40\xb9\x63\x8b\xae\xd9\x9e\xd0\x02\x9b\x92\x68\xf1\xc2\xd4\xe0\x69\x39\xbb\xe7\x30\x61\x56\x5e\xcd\x4d\xcf\x5a\x04\x9e\x10\xe3\x34\x0c\x5f\x30\xff\x47\x8b\x8f\xd7\x79\xbd\x5f\xbf\x7d\x26\x46\x8d\x20\x25\x69\x18\x12\xc3\x77\xba\x64\xce\x6d\xc6\x37\xcf\x07\x6e\x95\x32\x58\x1a\x66\x02\x3a\xdc\x7a\x03\x33\x42\x19\xf7\x02\x5d\xd1\xbe\xa1\x56\x8a\xf5\x04\xc6\xed\x52\xdb\x8d\x89\x6a\xe6\xb0\x39\x50\xa1\xcb\xab\x7a\x64\xed\x28\x2d\x29\xac\xe6\xb4\xdc\xde\x11\xf4\x53\xd3\x74\x26\x20\x90\xff\x6f\x7a\x4b\xd0\x44\x33\x1a\xb9\x60\x7b\x27\xb8\x37\x16\x05\x22\x2e\x2c\x89\xda\x19\xb9\x21\x29\x04\xca\xa6\xa3\x97\x8c\xf6\x99\xd1\xe0\x7b\xef\xac\x88\xa1\xd3\x71\x57\x04\xad\x31\xc1\x61\x89\x2d\xcc\x32\xe8\xd2\x45\xba\xd9\x63\x86\x46\xb5\x86\xcd\xbd\x83\xc0\xbd\xb2\x7b\xcc\xf8\xde\x34\x9f\x68\x9c\x06\xf8\x0b\xe5\xf7\xa2\xef\x0e\x87\x6f\x77\xdf\xee\xfe\x1b\x00\x00\xff\xff\xfb\xc2\xfb\xfc\x07\x06\x00\x00")

func ConfigCliFleetEthTestJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthTestJson,
		"../config/cli/fleet-eth.test.json",
	)
}

func ConfigCliFleetEthTestJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthTestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.test.json", size: 1543, mode: os.FileMode(420), modTime: time.Unix(1544186285, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliLesEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xf2\xc9\x4c\xcf\x28\x71\x2d\xc9\x70\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x88\x83\xe5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\xc1\xe2\xb5\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xa6\x74\x24\x05\x3a\x00\x00\x00")

func ConfigCliLesEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliLesEnabledJson,
		"../config/cli/les-enabled.json",
	)
}

func ConfigCliLesEnabledJson() (*asset, error) {
	bytes, err := ConfigCliLesEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/les-enabled.json", size: 58, mode: os.FileMode(420), modTime: time.Unix(1541418081, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliMailserverEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\x0a\xcf\xc8\x2c\x2e\x48\x2d\x72\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x08\x83\xa5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\x75\xd0\x25\xfc\x42\x02\x82\x2b\xf3\x92\x71\x49\xfb\x26\x66\xe6\x04\xa7\x16\x95\xa5\x16\x61\xaa\x40\xc8\x05\x24\x16\x17\x97\xe7\x17\x81\x2c\x51\x2a\x2e\x49\x2c\x29\x2d\xd6\xcd\x4f\x4b\xcb\xc9\xcc\x4b\xd5\xcd\xcc\x4b\xca\xaf\x50\x02\x6b\xaa\xe5\xaa\xe5\x02\x04\x00\x00\xff\xff\x7c\x73\xee\xbb\xb0\x00\x00\x00")

func ConfigCliMailserverEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliMailserverEnabledJson,
		"../config/cli/mailserver-enabled.json",
	)
}

func ConfigCliMailserverEnabledJson() (*asset, error) {
	bytes, err := ConfigCliMailserverEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/mailserver-enabled.json", size: 176, mode: os.FileMode(420), modTime: time.Unix(1541418081, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigStatusChainGenesisJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x6f\x13\x31\x10\x85\xef\xf9\x15\x96\xcf\x1c\xc6\xf6\x78\x66\xbd\x37\x4a\x59\x81\xc4\x8d\x5f\x30\xb6\xc7\xcd\xaa\x9b\x6c\x94\x6c\xa4\x16\xd4\xff\x8e\x92\x2c\xa1\x42\x9c\xf0\xcd\x7e\x33\xef\x7b\x7e\x3f\x37\xc6\x58\x99\xa6\xb9\xd8\xde\x5c\x2e\xc6\x18\x9b\x07\x47\x58\x24\xa0\x0b\x9e\x04\x42\x8e\xc8\x05\xe2\x43\xc0\x90\xfd\x67\xef\x74\xf8\xa8\x1e\x73\xfa\xb3\x62\x6c\x96\x49\xf6\x45\x6d\x6f\x2c\xbc\x38\x18\xe0\xd3\x00\x84\x8f\x8f\x31\x79\xb8\x1c\x7b\x1d\x7c\xfb\xb0\x22\x3c\x44\x89\x15\x94\x7d\x6b\x14\x81\x53\x2b\x92\x33\x0a\x05\x0d\xa1\xfa\x4e\x84\xaa\x36\x5f\xfe\x03\xb1\x59\x31\xb6\xcc\xfb\x36\x3e\xdd\x1d\x6c\xd9\xca\xb8\xff\x5a\x6d\x6f\x98\xf9\x16\xc4\x6e\xe7\x9d\x9e\x16\x95\xfa\x30\xcd\xe5\xd9\xf6\x06\x56\xa1\xca\x3c\xcc\xc7\xe7\xef\xe7\xc3\x61\x3e\x2e\xb6\x37\xcb\xf1\xac\xab\x96\x5f\x7f\xc8\x7e\x19\xcf\xbb\xbf\x97\x74\x3c\xb8\x08\x5f\xe4\xb4\xbd\x85\x8c\xa0\xa4\x35\xa3\x26\xa8\x89\x1c\x49\xe9\x72\x63\xe7\x92\x6a\xe0\x82\x80\x5d\x41\x27\x15\x52\xf0\x1d\x31\xa9\xcb\x21\xd5\x42\x9d\x80\x96\x96\x43\xb5\xef\x7d\xe3\x3f\x69\xdd\xfd\xf5\xfe\xef\x3a\xb6\x36\x96\xf3\xb4\xbc\xfe\xae\xea\xda\xce\x55\xd3\x97\xe5\x28\x8f\xb2\xc8\x1a\x30\x30\x92\x63\xe4\xc8\x01\x03\x75\xe4\x28\x91\x7a\x88\xc0\x9e\x12\xd3\x45\xa3\xe8\x21\x22\x45\xbe\xcc\x26\x52\x62\x0f\xa8\x14\x19\x99\xa9\xb1\xa7\x7c\xb3\x7e\x92\xd3\xb7\x71\x37\x2e\xef\xa1\x60\x37\x6f\x9b\x5f\x01\x00\x00\xff\xff\x91\xc6\xb3\x58\x64\x02\x00\x00")

func ConfigStatusChainGenesisJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigStatusChainGenesisJson,
		"../config/status-chain-genesis.json",
	)
}

func ConfigStatusChainGenesisJson() (*asset, error) {
	bytes, err := ConfigStatusChainGenesisJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/status-chain-genesis.json", size: 612, mode: os.FileMode(420), modTime: time.Unix(1541418081, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../config/cli/fleet-eth.beta.json": ConfigCliFleetEthBetaJson,
	"../config/cli/fleet-eth.staging.json": ConfigCliFleetEthStagingJson,
	"../config/cli/fleet-eth.test.json": ConfigCliFleetEthTestJson,
	"../config/cli/les-enabled.json": ConfigCliLesEnabledJson,
	"../config/cli/mailserver-enabled.json": ConfigCliMailserverEnabledJson,
	"../config/status-chain-genesis.json": ConfigStatusChainGenesisJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"fleet-eth.beta.json": &bintree{ConfigCliFleetEthBetaJson, map[string]*bintree{}},
				"fleet-eth.staging.json": &bintree{ConfigCliFleetEthStagingJson, map[string]*bintree{}},
				"fleet-eth.test.json": &bintree{ConfigCliFleetEthTestJson, map[string]*bintree{}},
				"les-enabled.json": &bintree{ConfigCliLesEnabledJson, map[string]*bintree{}},
				"mailserver-enabled.json": &bintree{ConfigCliMailserverEnabledJson, map[string]*bintree{}},
			}},
			"status-chain-genesis.json": &bintree{ConfigStatusChainGenesisJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

