// Code generated by go-bindata.
// sources:
// ../config/cli/fleet-eth.beta.json
// ../config/cli/fleet-eth.staging.json
// ../config/cli/fleet-eth.test.json
// ../config/cli/les-enabled.json
// ../config/status-chain-genesis.json
// DO NOT EDIT!

package static

import (
	"bytes"
	"compress/gzip"
	"fmt"
	"io"
	"io/ioutil"
	"os"
	"path/filepath"
	"strings"
	"time"
)

func bindataRead(data []byte, name string) ([]byte, error) {
	gz, err := gzip.NewReader(bytes.NewBuffer(data))
	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}

	var buf bytes.Buffer
	_, err = io.Copy(&buf, gz)
	clErr := gz.Close()

	if err != nil {
		return nil, fmt.Errorf("Read %q: %v", name, err)
	}
	if clErr != nil {
		return nil, err
	}

	return buf.Bytes(), nil
}

type asset struct {
	bytes []byte
	info  os.FileInfo
}

type bindataFileInfo struct {
	name    string
	size    int64
	mode    os.FileMode
	modTime time.Time
}

func (fi bindataFileInfo) Name() string {
	return fi.name
}
func (fi bindataFileInfo) Size() int64 {
	return fi.size
}
func (fi bindataFileInfo) Mode() os.FileMode {
	return fi.mode
}
func (fi bindataFileInfo) ModTime() time.Time {
	return fi.modTime
}
func (fi bindataFileInfo) IsDir() bool {
	return false
}
func (fi bindataFileInfo) Sys() interface{} {
	return nil
}

var _ConfigCliFleetEthBetaJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x79\xcb\xae\xa4\xc7\xd1\xdc\x9e\x4f\x31\x98\xb5\xd1\x93\xf7\x0b\x57\xf4\x2f\x4b\x26\xf4\xdb\x02\x75\xa1\x2c\xd9\xf0\x22\xab\x32\x8b\xa4\x45\x73\x64\x72\x48\x58\x34\xf4\xee\x46\x0d\x47\x12\x39\x52\x2f\xce\xc1\xc1\xd7\xdd\x55\xd1\x15\x99\x91\x11\x75\xfe\xdf\x07\x2f\x5e\xbc\xfc\xd5\xeb\xff\xf4\xc5\x37\xfb\xf5\x77\xf3\xf5\x5f\x5e\x7e\xf8\xe2\xcd\xd7\xdf\xce\x7f\xb8\x8f\x7f\x33\x5f\xf5\x7c\xff\xdd\xeb\x6f\xbf\xf9\xf1\xd3\x9f\x7d\xf9\xed\x37\x6f\xe6\xeb\x9f\xbd\xfe\xea\x7c\xf1\xd9\xcb\x0f\x5f\xdc\x15\x5e\xbc\x78\xf9\xf3\xaf\x6a\x7d\x39\xfd\xa3\x77\xbe\x78\xf1\xf2\x17\x5f\xce\xbc\x79\xf9\xe1\x8b\x97\xf3\xe6\xf3\xc7\x9a\x37\xf5\xf2\xdd\x0b\xff\xf6\xfa\xf5\x9b\x5f\xbd\xee\xb9\x2b\xff\x8f\xb7\x8f\x5e\xbc\x78\x39\x5f\xbd\xee\xf9\xf0\xd5\xab\x89\xf2\x0d\xbc\x34\x12\x71\x32\xd6\x6a\xb3\xda\x7b\x51\xa9\xb6\xba\x05\x1f\xd6\x45\xbc\x4e\xf6\xd9\x15\x39\x3a\x24\x32\x4b\xf7\xe6\x43\x0a\x18\x4b\x10\xa9\x97\x82\x9f\xda\xc5\x72\x96\xe5\x39\x4b\x64\xb1\xd1\xf1\x9c\xae\xf4\x32\xcb\x8a\x3e\x94\xdb\x69\x4c\x45\xd0\x3c\xe4\x23\xf1\x47\xe2\x83\x48\x1e\xac\x1f\x32\x08\xc8\x3b\xdc\x3f\x02\x29\x6c\x7b\xdb\x31\x97\xa4\x38\xbd\xb3\xf2\x78\x26\x1c\x4a\x11\x00\x5a\x16\xda\xb8\xd9\x0f\x90\x6e\x5c\x23\xa4\x18\xba\x74\xe1\x81\x04\x38\x53\x07\xf7\xde\x54\x86\x0c\x64\x71\x32\xe1\xbe\xad\xbc\x49\xe9\xb0\x33\xd0\x0e\x66\x2d\xda\x58\x46\xce\x36\x49\x4c\x96\xb8\x37\xd7\x47\xe8\xf2\x40\x8e\x07\x82\x3e\x48\xf8\x19\x4e\x17\xf2\x3e\xc3\xb1\x5a\xf6\xf1\xad\xb1\x56\x9a\xa0\x07\xd8\xa9\x45\xea\x41\xb3\x79\x0c\xc4\x2a\x40\x99\x1d\x80\x68\xaf\x2a\x0a\x54\xb6\x89\x36\x99\xdd\xb8\x80\x06\x4f\x1c\x27\xb7\x18\x4a\x6d\x30\xd2\x58\x25\xdc\x11\x0c\xd2\x0b\x2c\xc6\x0e\x09\x7a\x4d\xac\xbd\xb2\xec\x23\x04\x79\xa0\xca\x23\xe2\x81\xf4\x14\xa6\x70\x8a\x87\xf1\x3e\xa5\x55\x8d\xe8\x71\x24\xa8\x36\x6b\xc5\xac\x95\x88\xb6\x7b\x1a\x37\xf1\xf1\x93\x75\xb0\xc4\x57\xf5\xd9\x38\xe3\x07\xba\x73\x36\xa8\xb0\xa0\xef\xcd\xe2\x44\x5a\x36\xe2\x23\xb6\x2d\x9c\x8f\x89\xab\xe6\x08\x0b\x8b\xa6\x6d\x95\x41\x2f\x69\x2e\x9c\xb7\x9c\x2b\x3d\xee\x99\x0a\x3c\x03\xa9\x9c\x5a\xb5\x3c\x98\x0f\xce\x5e\xe6\xb8\x34\xd7\x01\x25\xdc\x87\x80\x48\xce\x04\x1a\x9d\xcd\x4d\xe6\xda\x23\x33\xd2\x6a\x6c\xe5\x3a\x9b\xa9\x91\x2f\xd7\x1b\x43\xfa\x44\x63\xf7\xa9\x00\x4e\xe1\x04\x8b\xa0\x2e\xa3\x92\x3e\x42\x2d\x67\xef\x63\x7d\x99\x0a\x54\xab\xf0\x8f\x08\xec\x81\x91\x97\xef\x87\xfa\x33\x98\xb3\xe6\xd4\xe2\x5c\x96\x6b\xad\x31\xe9\xd8\x1d\xb6\xc6\x4d\x17\xaf\x61\xb5\x8e\x2d\x8b\xc4\x0c\x8e\x69\x4b\x32\x0a\x17\x6c\x91\xc3\xb1\x43\x8b\xd4\x19\xe0\x92\xe0\x21\xaa\x49\x85\x0b\x98\x29\x10\x55\x68\xb2\x34\x28\x70\x07\xeb\xaa\xd5\xed\xfa\xf6\x8f\x65\x32\x67\xe3\x47\xac\x0f\x02\x7a\x64\xde\x1e\x7a\x87\xf2\x2d\xc8\xff\xf9\xae\xfd\x7f\xf7\xf5\xd5\x90\xfe\xaf\xf5\xc5\x97\xbf\x9d\xaf\xbf\x9b\xaf\xff\xa5\x0e\x74\x19\x4e\xce\x39\x61\xa5\x66\xcc\xcb\x58\x4f\x84\x77\xac\xc4\x81\x73\x94\xd8\xd6\xda\xa0\x2b\xd0\x32\x58\x28\x69\x92\xea\xac\xa4\xa4\xec\x7d\x6c\x4e\xaf\xdb\x4c\xc5\x9e\xc0\x5d\x71\x06\x38\xa4\xb5\xa0\x82\xc4\x27\xf8\xe0\x1e\x42\xac\xba\x1f\x07\x58\xd6\x14\x5b\x25\xde\xe9\x00\xaa\x3d\xf2\x16\xae\xfe\xab\xc3\xde\x42\x87\x2d\x8a\xf8\x54\xc6\x8c\x8a\x9d\xa6\x5b\x7e\xe0\x9a\x60\xc4\xc4\x24\x39\xc7\xd4\x9b\xac\x59\xbd\xdc\x5d\x84\x6b\xf6\xed\x19\x5c\x94\xc5\x45\x34\x87\xc7\xef\xbe\x83\x21\xc9\xdd\x75\x14\x8b\x71\x41\x4d\x1b\x78\xae\xb6\x59\xa3\x35\xc1\x71\xf6\xa9\xc3\x25\xf9\x93\x9a\x40\xa3\x67\x38\xbd\x27\x73\x64\x2f\x5c\xac\xc4\xab\xc9\x76\x11\x12\x5b\xaa\x80\xdd\x52\xf0\xed\x84\xd5\x72\x78\x74\x07\xe1\x74\xa2\x04\x2a\xec\xb1\x3d\x34\x4e\xc6\xe8\xc4\x57\x1f\x10\x4e\x6d\x3c\xad\x74\x0b\x78\xad\x3e\xac\xaa\x03\xca\x9e\x75\x3c\x15\x75\x10\x3d\xbb\xf8\xb6\x63\xaf\x5b\x14\x78\x35\x20\x1f\x84\xf0\x14\xa5\x08\x64\xd4\xb2\x66\x86\xa8\xa3\xbb\x81\x93\xa0\xa6\x0c\xb6\x58\xa3\x2d\xda\xcd\xcd\xbc\x0e\x9b\xef\x55\x07\x1b\x70\xd3\xd9\x0d\x66\xe7\x96\x47\xa8\x5b\x43\x9a\x47\xfa\x6e\xef\xb5\x60\x8c\x4f\x38\xef\x0d\x4b\x8e\x8f\x2c\x38\xd8\x4e\x44\x63\x8b\x45\xb1\x3c\x3a\x57\xd7\xa5\xfc\x9e\x25\x3c\x50\x9f\x62\xac\x32\x89\xb6\x09\xd5\x54\x58\x34\xdc\xbc\x0e\x11\x6c\x49\x1b\xd8\x35\x52\x7d\xba\x2f\xa1\x38\x06\x76\x77\x41\xf7\x9a\x9d\xbc\xb6\xed\xde\x07\x29\x68\x2f\x81\x46\x53\x4b\xa6\x59\xa7\x5b\x4d\x9d\xb2\x4b\x04\xd8\xa2\x7d\x4b\x97\xf7\x6a\x69\x00\x59\x58\x1b\x68\x9d\x78\x8f\xf1\x7c\x86\x13\x50\x87\xe8\xd8\x6e\x5a\x22\x3b\x4a\x71\xb5\x17\xbd\x25\x8a\x1c\xe7\x16\xe8\xf6\xf6\xa3\x24\x4c\x8e\x69\xa6\xe5\x92\x66\x87\xba\x44\x6f\x1f\x0c\xaa\x4c\xb0\xad\x19\x83\xa4\x25\x6d\x61\x67\xcc\x87\x19\x4d\x55\xc3\xb6\xfa\x72\x8c\x35\x9c\xe9\x1b\x8d\xb2\xe9\x0e\xd2\xb7\x32\x40\xf6\x20\x7c\xe0\x53\x90\x2e\xa9\x3e\x6c\x58\x8b\x12\xc6\xea\x88\x16\x92\x28\xdb\xda\x59\x3d\xc3\x79\x56\xd3\xc9\xd4\x72\xaf\x3d\x36\xed\x0d\xda\x59\xb8\x7d\x67\x2c\x8f\x45\x7d\xf4\x04\x38\x6e\xe1\x5c\xb9\xa1\xce\x48\x59\x46\xf2\xf4\x65\xc3\x98\xc5\xf9\xa4\xad\x8d\xa9\xdd\x87\xf9\xd8\x1e\x80\x77\xba\x4f\xaa\x0f\xcc\xa7\x94\x47\x99\x2c\xde\x2c\x59\x34\x30\x47\x8a\x69\x4a\xd2\x20\xe7\x36\x25\xb3\xc9\x1a\x44\x04\x52\xde\x04\xd5\x1b\xbd\x78\xcf\x5a\x9b\xb3\x08\x73\xb4\x79\x90\x17\x2a\x6e\x98\x19\xed\x18\x38\x59\xb1\x8a\x76\x03\x19\xa0\x8c\xf9\x12\x2c\xa9\xe5\x8d\xad\xdd\xe6\xbb\xe8\x0e\xf0\xf7\x28\x8f\x67\x38\x95\x71\x48\x69\x76\x9a\xad\xb7\xd2\xa6\xca\xb1\x31\xd7\xc1\xdd\xe3\x1c\xb8\xb7\xa7\x24\x90\xdd\xe1\x98\xb9\x6c\x32\x63\x2c\xd5\x15\xab\xfa\x90\xb5\xec\x8c\xd6\x92\xa9\x75\x96\xef\x39\xcd\xb8\x79\x47\xb4\x01\x94\xbb\x1e\x94\x69\xf5\x40\x25\xa8\x88\xd9\x4d\xda\xc5\xdb\x7e\xa0\xfc\xfe\xf8\xc3\xff\xc6\xf9\x4f\x94\xff\xb7\x6f\xea\xcd\x17\xfb\xa9\xf5\xcb\x4d\x2b\xe8\x7a\x89\x8c\xd8\xed\xb1\x0e\x25\x14\xe4\xb2\x13\xb8\xad\x26\x72\x1c\x4f\x6e\x38\x96\x5b\xb0\x09\x57\xeb\xae\xb5\x1a\x01\x53\x89\x5a\xdb\xb9\xdd\x1d\xa7\x92\xb9\xfa\x80\x93\xf7\xe8\x84\xf8\xbe\x1f\xbf\x7d\x10\xe0\xab\xf0\xf8\xb1\xb3\xef\xe4\xeb\x88\xce\xf4\x77\xe5\x70\xdd\x1f\x5f\xfc\x0c\xfa\xcf\xa7\x6c\xb6\x0a\xd5\x00\x76\x57\x18\x40\x5a\x24\xab\x6c\x2e\xf7\xd5\x07\x2b\xfd\xc8\x91\xb3\xb8\x96\xc2\x39\xc3\xd2\x6b\x27\xc8\xa9\xad\x86\x77\x1c\xa6\x05\x05\xa7\xaf\xc1\xe8\x74\x91\xed\x1a\x81\xe7\x6c\xab\xad\x7c\x55\xa0\x57\xd3\xee\xd5\xd5\x5b\x8f\xe8\x16\x80\x21\x23\x3a\xef\x55\x83\xdb\x33\x9c\x20\x02\x88\x5e\xba\xb6\xf9\xa6\x84\x38\xd5\x29\xab\xae\xdf\x5d\x7e\x68\xbf\xf5\x77\x69\x95\x7d\x52\xe1\x30\x99\x56\xaa\xd9\x3a\x5c\xce\x60\x53\x51\x4b\x0b\x4f\x7a\x4a\x41\x99\x60\xef\x85\x23\xa9\xb8\xc7\x37\x24\x6f\xc3\x0d\x4d\xaa\xe7\xd6\x44\xd3\xf4\xb5\xad\x67\x0f\xf1\x0f\xd5\x70\xdd\xdf\xc3\xf4\x19\xc8\x0a\x98\x05\x21\xe7\x6e\x7a\x32\xd6\xb1\x92\xa4\xd3\xb6\x8a\x7b\x19\x5b\xc6\x55\x4f\x93\x3b\xa9\x8e\xf9\x51\x61\x44\xed\xe4\xb6\x4c\x82\xb3\x9c\x86\x25\x07\xb6\xa1\x17\xa0\x8a\xb8\xc9\x81\x64\xd7\xb5\xe2\x1e\x1e\xad\xdc\xae\x50\x91\xd4\x80\x0d\x63\xe4\x9d\x9b\x14\xe7\x9d\xe2\xa3\x3d\x90\x9e\x82\x94\x29\x56\x56\x72\x20\x20\xcf\x90\x42\x26\x97\xeb\x74\x4b\xad\xc4\x43\xa5\xfc\xb4\x2c\x5e\x65\x2e\x75\xfd\xe5\x39\x89\xde\xbc\x83\x54\xc1\x84\x71\x1f\x94\x3c\x79\x88\x91\x8a\x92\xd7\xf2\x4d\x0b\xf7\xbe\xb1\x66\xb9\xdc\xb5\x21\x21\xd1\x1a\x50\x29\xcf\x80\x53\x9a\xf0\x7a\x8f\xf1\x78\x86\x53\x95\x52\x68\x6f\x09\x0d\x70\x46\xa0\xb2\xb5\x1b\xfa\xe4\x19\xe9\xb1\xce\xb3\x95\xba\x8f\xb3\xf1\xc4\x80\x8b\xcd\x2a\xc2\x05\x27\xe3\x2c\xf6\x09\x72\x58\xdb\x28\x8f\xd3\x3e\x43\x39\x70\x1d\x03\xd5\xb9\x7e\x64\x18\xb2\x40\x33\xe3\xe6\x11\xda\xd0\xd5\x4a\x11\x99\x88\x12\x1f\x21\xc3\x83\x10\x1f\x84\xfa\x40\xe6\xa7\xa4\x57\xba\xeb\x15\x63\xf1\x76\x59\x63\x0d\x7e\xbd\xbc\x98\x92\xd9\xe0\x7d\x95\x39\x9b\x1b\x43\x13\x8f\xac\xc9\xc6\x45\x13\xb0\xc2\x56\x1d\x46\xa9\x69\xcf\xea\x35\x81\x42\x6b\xaf\xfb\xcb\xd7\x16\x98\xe0\x19\x5e\xab\x61\x05\x5d\x3f\xa5\xa9\xeb\xc4\xcd\x8e\x12\x09\x56\xf8\xae\xcd\xaf\x1f\x21\xc1\x67\x28\xf7\xa8\x66\xb1\x57\x6e\x16\x69\x47\xc8\xd5\x92\xe0\x01\xd4\x6d\x09\x00\xc1\x81\xad\x78\x4c\x63\x0b\x83\xda\x6c\xb6\xda\x20\xcc\x37\x71\x25\x1d\xac\x6d\x20\x3c\x26\xba\x4c\x52\x79\x81\x1d\x72\x02\x6a\xf3\x74\xb5\xca\xed\xfb\x18\x9d\x9e\x53\x70\xbf\xe3\x95\x00\xc8\x98\xf7\x58\x7f\xaa\x47\x8b\xb9\xb7\x79\x68\x64\x32\x3a\x72\x41\x68\x53\x9e\xec\x0d\x73\x66\xd0\x83\xbb\xf6\x1e\x6c\x64\x4b\x9b\xa5\xcd\xa5\x62\x94\x8c\x19\xe2\xd0\xe9\x41\xb4\x05\x16\x86\x33\x5f\xcf\xb2\x38\x4f\xb3\x98\x4c\x06\xdc\xc5\x11\xd2\x95\xdc\xbc\x25\x6c\xca\x32\xcb\x6a\x71\xcf\x5b\x6b\x97\xfc\x40\xc5\x07\x86\x3c\x83\x79\x58\x44\x31\x88\x17\x3a\x5f\x51\xa3\xba\xa3\x70\xa3\x59\x9c\x5e\xc8\xbd\x2a\x6f\xaf\xa2\x0b\x49\x96\x0f\x90\x53\x5b\xef\x41\x3b\x2b\x10\x0b\x70\x8c\x98\x01\x1a\x97\xd7\x15\x35\x81\x1a\x50\x2a\x31\x5a\xe7\xf0\x31\x18\x29\xd0\x91\x2d\xab\x89\xf7\xbe\xd2\x5f\xea\xa0\x7f\x27\xdd\xf9\x61\x4f\x35\x53\x06\x2a\x7a\xe5\x72\x16\xe0\x9d\x7c\xc7\x37\xb8\x4f\x22\x86\xa2\x2b\x9c\x9d\xb7\x5d\xf1\x06\x4f\xc8\x13\x77\x60\xab\x39\x69\x8a\x45\x48\xb7\x8e\x34\x22\x69\x4c\xed\x34\x3c\xb7\x60\x8a\x93\xb7\xe8\xda\x37\x3d\x76\xc3\xf0\xda\x2e\xc3\xbe\xc7\x9d\x17\x8b\x63\xd3\x50\xee\xf7\x38\x7f\x5a\x9b\xb3\x64\x6f\xe6\x8d\x29\xb1\x6e\x7f\xe4\x5e\x81\xea\xae\x6e\xa2\xed\x51\xbb\x9d\x71\xef\x38\x17\x57\x75\xe2\x9e\x13\xe5\x40\x3c\xb9\x73\x1b\xad\xc4\xee\x5a\x08\x0e\xc2\x55\x6b\x4b\xb0\x0b\xd5\x46\xdd\x4b\xd8\x09\xc1\x17\x71\x1a\x5d\x7b\x5b\x86\xbe\x40\x35\xf8\x10\x19\x7c\x84\x62\x0f\x94\x78\x98\x3d\x08\x9e\x96\xa6\xef\x80\x61\x3f\x4c\xb2\xd6\xbe\xb5\x13\xd7\xe5\x71\x60\xa8\xcc\xc9\x0c\x6d\xe6\x14\xa0\x50\x41\x66\xc4\x89\xa5\x49\xbe\x8e\xb8\xc3\x15\x1d\x81\xdd\xda\x7c\x15\xa0\xca\x30\xb8\xb6\x98\x03\xe4\x4a\x15\x1d\x92\x05\x0d\xeb\xa6\xf9\x43\xcb\x9d\x55\x7c\xad\xd8\xe4\x82\x49\x7f\x8f\x70\xfa\x78\x1b\x8d\x9e\x8c\xa0\x75\x63\x38\xc9\xe0\x0d\x8f\x41\x06\xb9\x38\xc1\xcd\x4e\x95\xda\x3e\x5e\x3a\x73\x42\x17\x51\xd1\x52\x1c\xcf\xc5\xcc\x3b\xaa\x66\x76\xc8\xf1\x25\x64\x3e\xc2\x34\xdd\xb8\xcf\x6d\x76\x2e\xae\x86\xb3\xbd\x6d\x73\xa1\x1d\x10\xab\xab\xc7\xe0\x37\xc6\xc1\xd5\x32\xe3\x15\xef\x73\xfe\x14\xe7\xf6\x01\x18\x2d\xe6\x3b\x8a\x36\x40\x56\xae\x38\xae\xa6\xd9\x39\x02\x75\xa2\xa3\xe3\x36\x78\x95\xf6\xea\x16\x3b\xb4\x35\xce\x06\x84\x11\xbd\x72\x75\x2b\xef\x6c\xeb\xca\x1b\x22\xe5\xe4\x2e\xb7\xf0\xbe\xb5\xd8\xc1\x09\xcc\x30\x47\x1d\x9a\x61\xa9\x27\x5b\x52\xb8\x42\xf0\x0f\x7d\x4e\x0f\x24\x7e\x90\x3e\x15\x77\x59\xa4\x0c\x0d\xa2\x0b\x3b\xe7\xee\x5b\xa7\x2e\xde\xa0\x24\x17\x39\xe3\x6e\x7e\xe5\x07\x12\x96\x00\xe0\x09\x3d\x75\x80\x57\x78\x95\x27\x69\xee\x28\x6e\x6b\x93\x13\xa8\xd7\x66\x6e\xb7\x14\x19\x4f\xdd\xeb\x30\x9d\x93\x43\x7b\x72\x15\xc7\x51\xaf\x73\x35\x61\x6f\x50\xfb\x21\xb6\xc3\x83\xf2\x81\xf4\xf4\x2c\x23\x7c\x5f\x7d\xee\xd4\x3a\x9b\xb6\x1e\x1c\x22\x67\xb5\x3b\x59\x94\xdf\x4e\x9e\x50\x8d\x80\xda\xa0\x70\xed\x05\x84\x03\x1b\xd5\x0c\x70\x72\xb6\x80\xcb\x58\x35\x23\x9b\x26\x6a\x1d\xc1\x66\x61\x82\xa5\x90\xb2\xce\xde\x48\x57\xa5\x38\xd0\xdf\xda\x59\xca\x68\xb0\x1d\xae\xef\x71\xee\xcf\x70\x52\x9d\x38\x72\xbc\x60\x69\xd5\xaa\x23\x39\xcb\x69\xe5\xd2\x14\x97\x85\x4b\x4a\xdd\x4e\x66\x85\xe5\x00\x9c\x1f\xee\x6b\xe2\xd6\x33\x39\x69\x98\xec\xb0\xd5\xe7\xa4\x1a\x47\xc5\xf5\x52\xea\x20\xb0\x08\xdd\xb1\xae\xf1\x6c\x8c\x05\x87\x15\xd9\x3d\x5c\x8f\x2e\x31\x21\xd3\x94\xb7\x1e\x8e\xef\xa8\xf4\xc7\x53\x65\x77\x9b\xb9\x39\xd6\xce\x12\xbd\xe5\x74\xe3\x66\xcf\xf6\xda\x2e\xbb\x7a\xd5\x15\x10\x58\x49\x5b\xcd\xaa\xc1\xd7\x5e\xce\x94\x77\xd7\x33\xc8\xa8\xa7\x3d\x7c\xf0\x04\xe5\x24\xf4\x2a\xdd\xcd\x47\xe6\xba\xa1\x01\xcb\x1b\x39\x14\x26\xf7\x9a\x8d\x12\x6b\xaa\x39\xbd\x76\x20\x51\xff\xfd\xc2\xd6\x1e\xfe\xd4\xc3\xd1\xba\xf9\x40\xdb\x07\x71\x28\x7b\x0f\x38\x0b\x2f\x51\x1b\x99\xb4\x0d\x81\x6e\x00\x44\x37\x93\x5f\x5f\x26\xcb\x04\xa7\x0e\xd3\xd5\x30\xf1\x70\x0c\x87\x53\x16\x34\x39\xb9\xcf\x0a\x5d\x81\xb9\x27\x65\x9a\xee\xa0\xad\x2d\x1a\x09\xd2\x2a\xa7\x61\xa5\x37\xf3\x4d\x78\x52\xf2\x23\xc6\xe1\xe1\xf0\x0c\x26\x66\x38\x9d\x94\x85\xb7\x4b\xba\xb8\x90\x87\xde\x76\x10\x2e\xf1\x3e\x95\x39\xa6\x51\xa7\x4d\xc8\xa7\xa2\x6d\x80\x37\x51\x65\x1e\x64\x4d\x20\xd0\x8a\x20\x13\xe1\x49\x2d\xf6\x99\xc1\x0e\xd4\xb3\x85\xb9\x8e\x57\xec\xca\x8a\xeb\x0b\x3d\x85\x1b\x8f\xaa\x85\xdc\x8e\xfd\x21\xb5\x73\x3c\x0c\x1e\xc4\x7f\x1b\x93\x3f\x89\x70\xff\xf8\xb7\xc0\x3f\xc5\xb8\x57\x5f\xfc\x59\x5e\xbd\x77\x31\xfd\xea\xcd\xfe\xf3\x2b\x06\x07\x7e\x35\x6f\x3e\xff\x4e\x5e\xa1\x7d\xfa\xc5\xb7\xf4\xf1\x7f\xfc\xdf\xbf\xf9\xf8\x93\xef\x7f\xc1\x5f\xff\xfa\x33\xd5\x4f\x3e\xfb\xe3\x27\xfb\xd7\x7f\xfa\xcb\x77\x9f\xfc\xfe\xe3\xfc\x8a\x3e\xff\x6f\xdf\xfc\xf1\x93\xcf\x3f\xfd\xe5\xbf\xfd\x77\xfb\xd3\xef\xff\xd7\x2f\x3f\xeb\xdf\xff\xe3\xa0\xde\xee\xf1\xd3\x8b\xd0\xe7\x5b\xfc\x97\xff\xf3\xbb\x3f\x7c\xfb\x47\xf9\xed\xb2\xff\x4c\xf1\xf1\xaf\x5e\xbf\xae\x5f\x7c\xfa\x87\x4f\xff\xfd\xfb\x3f\x7f\xff\xef\x7f\xf8\xd9\xfe\xec\x2f\xbf\xfc\xbf\x9f\xd5\xcf\x7f\x4e\x5f\xe8\x77\x5f\x9d\x77\xdf\xf2\x83\x17\x2f\xfe\xfa\xc1\x5f\x3f\xf8\xff\x01\x00\x00\xff\xff\x8d\x73\x86\x99\x19\x19\x00\x00")

func ConfigCliFleetEthBetaJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthBetaJson,
		"../config/cli/fleet-eth.beta.json",
	)
}

func ConfigCliFleetEthBetaJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthBetaJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.beta.json", size: 6425, mode: os.FileMode(420), modTime: time.Unix(1536857798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthStagingJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x95\x4d\x6f\x1d\x59\x11\x86\xf7\xf9\x15\x57\x5e\xa3\x76\xd5\xf9\xa8\x53\xe5\x95\x49\x3c\x10\x81\x62\x69\x32\x0c\x30\x20\x16\xf5\x99\x31\xc9\xf8\x3a\xf6\xb5\x45\x82\xe6\xbf\xa3\x1b\x8c\x26\x61\xe2\x5d\xab\xba\xbb\xea\xe9\x57\x4f\xd7\xf9\xf7\xb3\xdd\xee\xe4\x72\x7f\x71\x75\xe7\xfb\x87\xbc\xfd\x70\x72\xb6\x3b\xdc\xde\xe7\x6f\x8e\xe5\xd7\x79\x1d\xf9\xf1\x61\x7f\x7f\xf7\x79\xf5\xc5\xbb\xfb\xbb\x43\xde\xbe\xd8\x5f\xd7\xd5\x9b\x93\xb3\xdd\xb1\xc3\x6e\x77\xf2\xcd\xb5\xda\xbb\x8c\xcf\x9e\xdc\xed\x4e\x7e\xf7\x2e\xf3\x70\x72\xb6\x3b\xc9\xc3\x8f\xdb\xdd\x41\xdf\x5c\x5d\xbf\x39\x79\xbc\xf7\x7c\xbf\x3f\x5c\xee\x23\x8f\xcd\xff\xfe\xa9\xb4\xdb\x9d\xe4\xf5\x3e\xf2\xec\xf4\x94\x3a\x18\xf4\xd1\x5c\x47\xca\x9c\xad\x26\x2c\x1c\x46\xce\xd9\x38\x48\xe6\x34\x87\x0a\x1c\xb9\x64\x42\x49\x37\xef\xd6\x8c\xdd\xd9\xb1\xba\x51\x20\xf4\x28\xa2\x9a\xa8\xd8\x63\xad\x6e\x33\x0c\x0a\x3b\x10\x61\xd9\xf4\x65\x5c\xda\xd0\x07\xb3\x80\xd3\xf0\x25\x36\x50\x27\xe9\x10\x38\x1f\x6b\x13\xdc\x5a\x93\x6d\x8c\xb3\x0e\x03\xc6\x23\xf7\x67\x90\xb5\xa4\xac\x0b\x4a\xad\xe6\x3a\x09\x34\x60\xf4\x11\xee\x9d\x97\x5a\xe5\xc0\x04\x22\x6a\x80\x69\xa1\xa1\x9c\x91\x30\xa8\x8d\x39\x8e\x50\x69\x30\x3d\x14\x67\x35\x5e\xd1\x7c\x58\xf0\x0c\x65\x2c\x48\x6b\x33\x40\x07\x93\x99\x39\x47\x8d\xb6\x4c\x16\xaa\x4f\x9c\xbd\x5b\x00\x54\x9e\xe3\x1a\x1b\x76\xde\x10\xd6\xd6\xba\x3c\xc5\x89\xa0\x8b\x1d\x97\x34\xd1\x05\x28\x59\x43\xb5\xb5\x21\xb1\x3a\xb4\x5a\xa4\xc9\x0a\x54\x03\xac\x85\x33\xdb\xb2\x8e\x69\x55\x43\xa9\xf5\x32\x1b\xc3\x8e\x97\x4b\xdd\xb4\x09\x39\x7a\x46\x5f\x6b\x86\x60\x59\x22\x0f\xea\x8e\x13\x64\x29\x69\xa7\x0a\x6b\xce\x30\xaa\x7a\xf9\xb4\x3e\xcf\xfb\xdc\x5a\xe7\x4d\x8e\x94\xff\x4b\xf3\x13\xe4\x3f\x1e\x5d\xf8\xd3\xed\xd1\xa9\x78\xa5\x57\xef\xbe\xcb\xdb\x87\xbc\xfd\xaa\x14\xb6\x06\x4f\xc1\x45\x2e\x6b\x62\x74\x1c\x9a\x59\xe5\x8d\xd2\xa5\x98\x48\x07\xb6\x35\x5b\xae\x88\x74\x41\x43\x01\x64\x45\xce\xe5\xae\x1c\xd4\x97\x57\x36\xcf\x70\x93\xd5\x8a\xd3\x68\x04\x23\x95\xc5\xb4\x91\x2c\xbe\x92\x7d\x55\xac\x28\x56\xec\x4d\x4a\x47\x0f\x63\x30\xb0\xca\xa3\x14\xb3\x6d\x02\x1b\x4e\x3a\xeb\x30\xbf\x16\x36\x1d\x6d\x30\xd5\x55\xb8\x5a\x0b\x44\x54\x76\x71\x62\xef\xa2\x1d\x47\x87\x94\x98\xb4\x48\x66\x11\x02\x57\x47\x77\x23\x0f\x2e\xd0\xa8\x1a\x22\x98\xab\xc2\x95\x4b\xd7\x82\x5c\xd3\x9c\x75\x1e\xfb\xac\x68\x83\x04\xdc\x9c\x21\x01\x18\xd7\xac\x01\x8e\x73\x05\x15\x2d\xe6\x18\x7c\xde\x80\x36\x64\xd9\xda\x80\x0d\x9f\xc4\xcc\x51\x8e\xe0\x58\x34\x9d\x35\x83\xbb\x7a\x23\x73\xb4\xb2\x86\x3a\xa6\x3b\x2a\xcf\x09\x3a\x19\xd6\x72\x8e\x16\xd9\x14\x12\x3c\x90\x73\x40\xc5\x80\x5a\x49\xb5\x02\x5a\x38\x79\x00\x09\x37\x03\x1c\x9e\xcc\x41\x39\x88\x57\x9b\x75\x4c\x1c\x3b\xa7\x4c\x3e\x12\x02\x40\xd3\x55\xff\x75\x42\x36\x94\xbe\x0d\x7c\xa4\xfc\xc2\x89\xef\x0e\x7a\xb8\xf2\x27\x37\x04\x40\x97\x49\x4c\x35\x65\x0e\xa2\xa6\x7d\x09\x25\x2e\x30\x49\x5e\x66\x5a\xc4\x0a\x13\x62\xae\x14\xe1\x65\x8b\xb5\x35\x69\x13\x5a\x68\x8e\xa1\x9a\xcd\x98\xa1\x37\x06\x05\x5c\xe9\xa2\x25\x96\x60\x1d\x1b\x86\x49\x90\x75\x92\xae\xd6\x15\xc6\x44\x65\x22\x73\xcb\x88\xc9\x15\xea\x8f\x32\xb4\x46\x1b\xf6\x75\xd6\xa1\xc3\xfc\x75\xcc\x82\xc3\xc1\x3a\x54\x5b\xa6\xd6\xc1\x31\x2a\x3a\x86\xc6\xa2\xd9\x74\x50\x85\x4a\x5f\x30\x47\xd3\x4c\x34\xa0\x36\x84\x0d\xfb\x98\x99\x20\xd8\x09\x87\xb1\x49\xf6\xe4\x41\xad\x25\x0f\x5d\x0d\xba\x4f\x9e\xac\x89\x21\x8c\x52\xd4\x35\x3d\xb1\x67\x12\x71\x8e\x22\x22\x06\xea\xc2\x72\x8e\xb4\x36\x39\xc6\xbc\xe1\xe0\xa7\x28\x5b\xb0\x2c\xa7\xe3\x08\x19\x52\x12\x5e\x08\x6d\x49\x01\xa4\x18\xf7\x36\x1d\xb9\x72\x95\xce\x16\x34\x79\x36\xd0\x58\x96\x42\xb0\x9c\x3b\x00\xdb\x68\x06\xa4\x59\x21\xc7\x7f\x0c\x2b\xd4\xe6\xc2\xea\x5d\x9b\x4a\xe7\x5e\x25\xcb\xa7\x80\x64\x4c\x2c\xea\xc7\x97\xfa\x10\xec\xad\xaf\x3c\xca\x80\xd2\x36\xd8\x98\x1e\x19\xbf\x50\xe1\x97\x83\xe8\x57\x3a\x9c\x5e\xdd\x8c\xd3\xff\xdb\x83\xa7\x07\xbf\x39\xed\xb0\xa0\x9f\xe6\xe1\xc7\x87\x71\x8a\xf4\xfd\xd5\x7d\x7b\xf9\xdb\xb7\x1f\xfe\xf0\x32\xf3\xf0\xed\xb8\xb8\xbc\x89\x71\xf9\xb7\x76\x7d\xf8\xf8\xaf\x57\xfb\x36\x3f\x7a\xdc\x3c\xfc\xfe\xdb\xd7\xef\xdf\x5e\xcc\x9b\xe7\xf2\xfc\x1b\x7a\xfd\xfd\x2f\x31\x7d\x9a\xf1\xc5\x0e\x7b\x72\xc2\x4f\x78\xf7\xe7\x0f\x7f\xfd\xe9\xed\xab\xcb\x7f\x46\x5e\xfc\xe5\xfd\x1f\xdb\xfd\xad\x7d\x78\xd1\xf7\xcf\x5f\x5e\xf1\xab\x8b\x9b\x17\xf1\xc3\xdb\xeb\x3b\xbc\xfe\x41\xeb\xfd\xc7\xc7\x8f\x7c\xb6\xdb\xfd\xfc\xec\xe7\x67\xff\x09\x00\x00\xff\xff\x50\x12\xe6\x05\x8a\x07\x00\x00")

func ConfigCliFleetEthStagingJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthStagingJson,
		"../config/cli/fleet-eth.staging.json",
	)
}

func ConfigCliFleetEthStagingJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthStagingJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.staging.json", size: 1930, mode: os.FileMode(420), modTime: time.Unix(1536857798, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliFleetEthTestJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x74\x94\x3d\x6f\x24\xc9\x0d\x86\x73\xfd\x8a\xc1\xc4\xc6\x1c\x8b\xdf\x54\xb4\xb8\x0f\x3b\x39\x5f\xe0\xb5\x23\xc3\x41\xb1\xc8\x5a\x0b\x10\x34\x80\x34\x2b\xc0\x36\xf6\xbf\x1b\x23\xc9\xc0\x7a\x6f\x95\xbe\xdd\x5d\xf5\x34\xf9\x90\xff\xb9\x39\x1c\x8e\xbf\x9d\x7f\xbe\x7b\x5a\xe7\xe7\x7e\xfc\xd7\xf1\xf6\x70\x79\xfc\xdc\x7f\xb8\xc6\x7f\xe9\x87\xea\x7f\x3f\x9f\x3f\x3f\x1d\x6f\x0f\x7b\xde\x3f\xbd\xc6\xbf\x9e\x3f\xfd\xda\xcf\x7d\x7f\xbc\x3d\x1c\x7f\xfe\xe5\xc7\xbf\xfd\xe9\xf8\x12\xff\x74\xff\xf9\xe9\xd2\x8f\x3f\x9d\x1f\xf6\xdd\xa7\xe3\xed\xe1\x7a\xf2\xe1\x70\xfc\xe5\x61\xe6\x7d\xd7\x57\xe7\x1e\x0e\xc7\x3f\xde\x77\x5f\xae\xdf\xf7\xe5\x9f\xa7\x4b\x3f\x5d\x8e\x6f\x0f\x7e\x3c\x9f\x2f\xbf\x9d\xab\xaf\x37\xfe\xfd\x25\x3a\x1c\x8e\xfd\x70\xae\xbe\xfd\xe1\x87\x9a\xb3\xb1\x0d\x1d\xa1\x5d\x3b\x18\xf7\xc4\xe9\x73\x5a\x69\x47\x08\x17\x03\xd3\x34\x21\x76\x2a\xcf\x22\xf2\x1e\x9a\xed\xb8\x76\x28\x52\x60\xc9\x82\x1e\xb3\xc5\x16\x95\x05\x2d\x2a\xaa\xaa\xf2\x5d\xe2\x44\x81\x8a\xcd\x48\x5c\x2b\x54\x77\x08\xad\x32\x4a\x21\xd9\xb2\xe7\x07\xb6\x93\xe0\x69\xb8\x9f\x06\xc7\x2d\x01\x03\xbf\x81\x7f\x45\x19\x0d\xe1\x2e\x26\x9d\x66\xc3\x16\x4a\xf5\x34\xdc\x35\xc6\xb2\x24\x33\xb5\x5a\x10\x6b\x4c\x53\xd7\x6d\x0b\x7b\x89\x59\x11\x78\x21\x5f\x5f\x58\x9d\x6a\x52\xcd\x34\x8c\x8d\xe7\x98\x6e\xd0\x6c\xee\x68\x84\xa1\xb6\x79\x4f\x73\x49\xc0\x9c\x21\xa5\x1a\x49\xa3\x58\xb9\x7a\xc1\x07\x04\x3d\x0d\x8f\x13\x32\x9d\x86\xf2\x7b\x9c\x6b\xb4\xc0\x70\x77\x5b\xae\x54\xca\xd7\xfb\x52\x23\xb7\x0e\x13\x1d\xe0\xe6\x28\x4c\xd0\xcc\x30\x8c\x68\x4b\x4e\xb3\x65\x50\x39\x18\x49\x6b\x93\x8f\xdd\x3b\xa1\xb3\xc7\x5c\x8c\x18\x9c\xd1\xa8\x23\xb3\x91\xa8\xb2\xd2\xa9\x09\x97\xb8\x2e\xd5\xd9\xa8\xcb\xab\x0d\x56\xf2\xfa\x40\xf2\x5a\x4a\xf5\xd3\x20\x7b\xc3\x7c\xa1\xfc\xc7\x9b\x0d\x7f\x7d\xbc\x2a\x55\x7f\x9e\x77\xf7\x1f\xfb\xf1\xb9\x1f\xbf\xab\x45\x08\x2f\x50\x05\x9a\xda\x26\x92\x7b\x77\x44\xa0\x0e\xd9\x6c\x22\xce\x9e\x35\x63\xce\xaa\x69\x5c\x81\x30\x27\x8d\x1a\xe5\xcd\x5b\x01\xb1\x96\x88\xd6\x9a\x6a\xea\xdb\x27\xec\x60\x89\x2d\x96\x86\x21\x10\x95\xb4\x3c\x29\xd3\x61\xae\x9d\xe5\x13\x07\x12\xb8\x6d\x5d\x59\x96\xf5\xb5\x16\xa1\xb7\x04\xf2\xbd\x72\x37\xbb\xca\x6e\x5d\x38\xaf\xbd\x17\xa5\xa9\xcc\x16\x01\xe5\x1d\xab\xd5\x50\x99\x67\x53\x83\xe3\xd5\x01\xf2\x5e\x63\x5f\x3b\x02\xdd\x5b\x09\x61\x81\x4d\x29\x85\x45\xa9\x18\x5b\x8a\x39\x78\x07\x95\xa6\xeb\x34\x96\x09\xb9\x95\x67\x62\x48\xe6\x56\xb1\x80\x61\xb3\x96\x76\xf9\x37\x5a\x8c\xf7\x38\x0d\xac\xc5\x58\x68\xae\xa2\x66\xf7\xc5\x9c\x51\xd0\xc3\xc2\x84\x6c\x34\x6e\xdf\x57\x41\x51\x7a\xb6\xe4\x5c\x33\x32\x96\x37\xe8\x72\x5d\xd5\xb6\x2c\x78\xea\xc2\x26\x45\xa0\xdc\xb1\x45\xd7\x6c\x4f\x68\x81\x4d\x49\xb4\x78\x61\x6a\xf0\xb4\x9c\xdd\x73\x98\x30\x2b\xaf\xe6\xa6\x17\x2d\x02\x4f\x88\x71\x1a\x86\x6f\x98\xff\xa7\xc5\xc7\xcb\xbc\xdc\xad\x77\xd7\xc4\x2c\xf2\x1d\x0c\x04\xd3\x59\xd7\x32\x00\x49\x9b\x63\x53\x6a\xc2\xc8\xcd\xbd\x25\x8a\xb8\xbd\xa8\x74\x73\x0d\xac\x8d\x54\x83\x73\xba\x8a\x1a\xe0\x64\x92\x22\x5e\x9b\x6b\x53\xf2\xc0\x05\x6b\x04\x52\x6d\x99\xb5\x56\x3b\xeb\x20\x1c\x13\xca\xf7\xce\x60\x92\x44\x6d\x31\x5c\xf8\xbf\x35\x81\x72\xfd\x91\xeb\xf8\x11\xc8\xef\xeb\x3c\x6a\x04\x29\x49\xc3\x90\x18\xbe\xd3\x25\x73\x6e\x33\xbe\x4e\xe3\xc0\xad\x52\x06\x4b\xc3\x4c\x40\x87\x5b\x6f\x60\x46\x28\xe3\x5e\xa0\x2b\xda\x37\xd4\x4a\xb1\x9e\xc0\xb8\x5d\x6a\xbb\x31\x51\xcd\x1c\x36\x07\x2a\x74\x79\x55\x8f\xac\x1d\xa5\x25\x85\xd5\x9c\x96\xdb\x3b\x82\xbe\xf1\x81\xde\xe3\xdc\x12\x34\xd1\x8c\x46\x2e\xd8\xde\x09\xee\x8d\x45\x81\x88\x0b\x4b\xa2\x76\x46\x6e\x48\x0a\x81\xb2\xe9\xe8\x25\xa3\x7d\x66\x34\xf8\xde\x3b\x2b\x62\xe8\x74\xdc\x15\x41\x6b\x4c\x70\x58\x62\x0b\xb3\x0c\xba\x74\x91\x6e\xf6\x98\xa1\x51\xad\x61\x73\xef\x20\x70\xaf\xec\x1e\x33\x5e\x7d\xe0\x13\x8d\xd3\x00\x7f\xa3\x7c\xd5\xe1\xe6\x70\xf8\x72\xf3\xe5\xe6\xbf\x01\x00\x00\xff\xff\xe4\x99\x54\x5c\xc3\x06\x00\x00")

func ConfigCliFleetEthTestJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliFleetEthTestJson,
		"../config/cli/fleet-eth.test.json",
	)
}

func ConfigCliFleetEthTestJson() (*asset, error) {
	bytes, err := ConfigCliFleetEthTestJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/fleet-eth.test.json", size: 1731, mode: os.FileMode(420), modTime: time.Unix(1536857799, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigCliLesEnabledJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\xaa\xe6\x52\x50\x50\x50\x50\xf2\xc9\x4c\xcf\x28\x71\x2d\xc9\x70\xce\xcf\x4b\xcb\x4c\x57\xb2\x52\x80\x88\x83\xe5\x5c\xf3\x12\x93\x72\x52\x53\x94\xac\x14\x4a\x8a\x4a\x53\xc1\xe2\xb5\x5c\xb5\x5c\x80\x00\x00\x00\xff\xff\xa6\x74\x24\x05\x3a\x00\x00\x00")

func ConfigCliLesEnabledJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigCliLesEnabledJson,
		"../config/cli/les-enabled.json",
	)
}

func ConfigCliLesEnabledJson() (*asset, error) {
	bytes, err := ConfigCliLesEnabledJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/cli/les-enabled.json", size: 58, mode: os.FileMode(420), modTime: time.Unix(1536857705, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

var _ConfigStatusChainGenesisJson = []byte("\x1f\x8b\x08\x00\x00\x00\x00\x00\x00\xff\x9c\x90\x41\x6f\x13\x31\x10\x85\xef\xf9\x15\x96\xcf\x1c\xc6\xf6\x78\x66\xbd\x37\x4a\x59\x81\xc4\x8d\x5f\x30\xb6\xc7\xcd\xaa\x9b\x6c\x94\x6c\xa4\x16\xd4\xff\x8e\x92\x2c\xa1\x42\x9c\xf0\xcd\x7e\x33\xef\x7b\x7e\x3f\x37\xc6\x58\x99\xa6\xb9\xd8\xde\x5c\x2e\xc6\x18\x9b\x07\x47\x58\x24\xa0\x0b\x9e\x04\x42\x8e\xc8\x05\xe2\x43\xc0\x90\xfd\x67\xef\x74\xf8\xa8\x1e\x73\xfa\xb3\x62\x6c\x96\x49\xf6\x45\x6d\x6f\x2c\xbc\x38\x18\xe0\xd3\x00\x84\x8f\x8f\x31\x79\xb8\x1c\x7b\x1d\x7c\xfb\xb0\x22\x3c\x44\x89\x15\x94\x7d\x6b\x14\x81\x53\x2b\x92\x33\x0a\x05\x0d\xa1\xfa\x4e\x84\xaa\x36\x5f\xfe\x03\xb1\x59\x31\xb6\xcc\xfb\x36\x3e\xdd\x1d\x6c\xd9\xca\xb8\xff\x5a\x6d\x6f\x98\xf9\x16\xc4\x6e\xe7\x9d\x9e\x16\x95\xfa\x30\xcd\xe5\xd9\xf6\x06\x56\xa1\xca\x3c\xcc\xc7\xe7\xef\xe7\xc3\x61\x3e\x2e\xb6\x37\xcb\xf1\xac\xab\x96\x5f\x7f\xc8\x7e\x19\xcf\xbb\xbf\x97\x74\x3c\xb8\x08\x5f\xe4\xb4\xbd\x85\x8c\xa0\xa4\x35\xa3\x26\xa8\x89\x1c\x49\xe9\x72\x63\xe7\x92\x6a\xe0\x82\x80\x5d\x41\x27\x15\x52\xf0\x1d\x31\xa9\xcb\x21\xd5\x42\x9d\x80\x96\x96\x43\xb5\xef\x7d\xe3\x3f\x69\xdd\xfd\xf5\xfe\xef\x3a\xb6\x36\x96\xf3\xb4\xbc\xfe\xae\xea\xda\xce\x55\xd3\x97\xe5\x28\x8f\xb2\xc8\x1a\x30\x30\x92\x63\xe4\xc8\x01\x03\x75\xe4\x28\x91\x7a\x88\xc0\x9e\x12\xd3\x45\xa3\xe8\x21\x22\x45\xbe\xcc\x26\x52\x62\x0f\xa8\x14\x19\x99\xa9\xb1\xa7\x7c\xb3\x7e\x92\xd3\xb7\x71\x37\x2e\xef\xa1\x60\x37\x6f\x9b\x5f\x01\x00\x00\xff\xff\x91\xc6\xb3\x58\x64\x02\x00\x00")

func ConfigStatusChainGenesisJsonBytes() ([]byte, error) {
	return bindataRead(
		_ConfigStatusChainGenesisJson,
		"../config/status-chain-genesis.json",
	)
}

func ConfigStatusChainGenesisJson() (*asset, error) {
	bytes, err := ConfigStatusChainGenesisJsonBytes()
	if err != nil {
		return nil, err
	}

	info := bindataFileInfo{name: "../config/status-chain-genesis.json", size: 612, mode: os.FileMode(420), modTime: time.Unix(1536857662, 0)}
	a := &asset{bytes: bytes, info: info}
	return a, nil
}

// Asset loads and returns the asset for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func Asset(name string) ([]byte, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("Asset %s can't read by error: %v", name, err)
		}
		return a.bytes, nil
	}
	return nil, fmt.Errorf("Asset %s not found", name)
}

// MustAsset is like Asset but panics when Asset would return an error.
// It simplifies safe initialization of global variables.
func MustAsset(name string) []byte {
	a, err := Asset(name)
	if err != nil {
		panic("asset: Asset(" + name + "): " + err.Error())
	}

	return a
}

// AssetInfo loads and returns the asset info for the given name.
// It returns an error if the asset could not be found or
// could not be loaded.
func AssetInfo(name string) (os.FileInfo, error) {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	if f, ok := _bindata[cannonicalName]; ok {
		a, err := f()
		if err != nil {
			return nil, fmt.Errorf("AssetInfo %s can't read by error: %v", name, err)
		}
		return a.info, nil
	}
	return nil, fmt.Errorf("AssetInfo %s not found", name)
}

// AssetNames returns the names of the assets.
func AssetNames() []string {
	names := make([]string, 0, len(_bindata))
	for name := range _bindata {
		names = append(names, name)
	}
	return names
}

// _bindata is a table, holding each asset generator, mapped to its name.
var _bindata = map[string]func() (*asset, error){
	"../config/cli/fleet-eth.beta.json": ConfigCliFleetEthBetaJson,
	"../config/cli/fleet-eth.staging.json": ConfigCliFleetEthStagingJson,
	"../config/cli/fleet-eth.test.json": ConfigCliFleetEthTestJson,
	"../config/cli/les-enabled.json": ConfigCliLesEnabledJson,
	"../config/status-chain-genesis.json": ConfigStatusChainGenesisJson,
}

// AssetDir returns the file names below a certain
// directory embedded in the file by go-bindata.
// For example if you run go-bindata on data/... and data contains the
// following hierarchy:
//     data/
//       foo.txt
//       img/
//         a.png
//         b.png
// then AssetDir("data") would return []string{"foo.txt", "img"}
// AssetDir("data/img") would return []string{"a.png", "b.png"}
// AssetDir("foo.txt") and AssetDir("notexist") would return an error
// AssetDir("") will return []string{"data"}.
func AssetDir(name string) ([]string, error) {
	node := _bintree
	if len(name) != 0 {
		cannonicalName := strings.Replace(name, "\\", "/", -1)
		pathList := strings.Split(cannonicalName, "/")
		for _, p := range pathList {
			node = node.Children[p]
			if node == nil {
				return nil, fmt.Errorf("Asset %s not found", name)
			}
		}
	}
	if node.Func != nil {
		return nil, fmt.Errorf("Asset %s not found", name)
	}
	rv := make([]string, 0, len(node.Children))
	for childName := range node.Children {
		rv = append(rv, childName)
	}
	return rv, nil
}

type bintree struct {
	Func     func() (*asset, error)
	Children map[string]*bintree
}
var _bintree = &bintree{nil, map[string]*bintree{
	"..": &bintree{nil, map[string]*bintree{
		"config": &bintree{nil, map[string]*bintree{
			"cli": &bintree{nil, map[string]*bintree{
				"fleet-eth.beta.json": &bintree{ConfigCliFleetEthBetaJson, map[string]*bintree{}},
				"fleet-eth.staging.json": &bintree{ConfigCliFleetEthStagingJson, map[string]*bintree{}},
				"fleet-eth.test.json": &bintree{ConfigCliFleetEthTestJson, map[string]*bintree{}},
				"les-enabled.json": &bintree{ConfigCliLesEnabledJson, map[string]*bintree{}},
			}},
			"status-chain-genesis.json": &bintree{ConfigStatusChainGenesisJson, map[string]*bintree{}},
		}},
	}},
}}

// RestoreAsset restores an asset under the given directory
func RestoreAsset(dir, name string) error {
	data, err := Asset(name)
	if err != nil {
		return err
	}
	info, err := AssetInfo(name)
	if err != nil {
		return err
	}
	err = os.MkdirAll(_filePath(dir, filepath.Dir(name)), os.FileMode(0755))
	if err != nil {
		return err
	}
	err = ioutil.WriteFile(_filePath(dir, name), data, info.Mode())
	if err != nil {
		return err
	}
	err = os.Chtimes(_filePath(dir, name), info.ModTime(), info.ModTime())
	if err != nil {
		return err
	}
	return nil
}

// RestoreAssets restores an asset under the given directory recursively
func RestoreAssets(dir, name string) error {
	children, err := AssetDir(name)
	// File
	if err != nil {
		return RestoreAsset(dir, name)
	}
	// Dir
	for _, child := range children {
		err = RestoreAssets(dir, filepath.Join(name, child))
		if err != nil {
			return err
		}
	}
	return nil
}

func _filePath(dir, name string) string {
	cannonicalName := strings.Replace(name, "\\", "/", -1)
	return filepath.Join(append([]string{dir}, strings.Split(cannonicalName, "/")...)...)
}

