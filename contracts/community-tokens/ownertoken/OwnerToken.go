// Code generated - DO NOT EDIT.
// This file is a generated binding and any manual changes will be lost.

package ownertoken

import (
	"errors"
	"math/big"
	"strings"

	ethereum "github.com/ethereum/go-ethereum"
	"github.com/ethereum/go-ethereum/accounts/abi"
	"github.com/ethereum/go-ethereum/accounts/abi/bind"
	"github.com/ethereum/go-ethereum/common"
	"github.com/ethereum/go-ethereum/core/types"
	"github.com/ethereum/go-ethereum/event"
)

// Reference imports to suppress errors if they are not otherwise used.
var (
	_ = errors.New
	_ = big.NewInt
	_ = strings.NewReader
	_ = ethereum.NotFound
	_ = bind.Bind
	_ = common.Big1
	_ = types.BloomLookup
	_ = event.NewSubscription
	_ = abi.ConvertType
)

// OwnerTokenMetaData contains all meta data concerning the OwnerToken contract.
var OwnerTokenMetaData = &bind.MetaData{
	ABI: "[{\"inputs\":[{\"internalType\":\"string\",\"name\":\"_name\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_symbol\",\"type\":\"string\"},{\"internalType\":\"string\",\"name\":\"_baseTokenURI\",\"type\":\"string\"},{\"internalType\":\"address\",\"name\":\"_receiver\",\"type\":\"address\"},{\"internalType\":\"bytes\",\"name\":\"_signerPublicKey\",\"type\":\"bytes\"}],\"stateMutability\":\"nonpayable\",\"type\":\"constructor\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"approved\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Approval\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"ApprovalForAll\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"Transfer\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"approve\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"}],\"name\":\"balanceOf\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"baseTokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"getApproved\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"}],\"name\":\"isApprovedForAll\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"masterToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"maxSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address[]\",\"name\":\"addresses\",\"type\":\"address[]\"}],\"name\":\"mintTo\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"mintedCount\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"name\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"ownerOf\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"ownerToken\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256[]\",\"name\":\"tokenIds\",\"type\":\"uint256[]\"}],\"name\":\"remoteBurn\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"remoteBurnable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"},{\"internalType\":\"bytes\",\"name\":\"data\",\"type\":\"bytes\"}],\"name\":\"safeTransferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"operator\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"approved\",\"type\":\"bool\"}],\"name\":\"setApprovalForAll\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"_newMaxSupply\",\"type\":\"uint256\"}],\"name\":\"setMaxSupply\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes\",\"name\":\"_newSignerPublicKey\",\"type\":\"bytes\"}],\"name\":\"setSignerPublicKey\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"signerPublicKey\",\"outputs\":[{\"internalType\":\"bytes\",\"name\":\"\",\"type\":\"bytes\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"bytes4\",\"name\":\"interfaceId\",\"type\":\"bytes4\"}],\"name\":\"supportsInterface\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"symbol\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"owner\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"tokenOfOwnerByIndex\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"tokenURI\",\"outputs\":[{\"internalType\":\"string\",\"name\":\"\",\"type\":\"string\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"totalSupply\",\"outputs\":[{\"internalType\":\"uint256\",\"name\":\"\",\"type\":\"uint256\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"from\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"to\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"tokenId\",\"type\":\"uint256\"}],\"name\":\"transferFrom\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"transferable\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"}]",
	Bin: "0x60806040523480156200001157600080fd5b506040516200391238038062003912833981016040819052620000349162000adb565b848460016000818730808787866200004d838262000c44565b5060016200005c828262000c44565b505050600b869055600d805461ffff60a01b1916600160a01b8715150260ff60a81b191617600160a81b86151502179055600e6200009b848262000c44565b50600c80546001600160a01b038085166001600160a01b03199283168117909355600d805491851691909216179055151580620000e25750600d546001600160a01b031615155b620001345760405162461bcd60e51b815260206004820152601f60248201527f6f776e6572206f72206d617374657220746f6b656e732072657175697265640060448201526064015b60405180910390fd5b505050505050505080600f90816200014d919062000c44565b5060408051600180825281830190925260009160208083019080368337019050509050828160008151811062000187576200018762000d10565b6001600160a01b0390921660209283029190910190910152620001aa81620001b6565b50505050505062000e13565b60005b81518110156200023c5762000210828281518110620001dc57620001dc62000d10565b6020026020010151620001fb600a6200024060201b6200125a1760201c565b60408051602081019091526000815262000244565b62000227600a620002bc60201b6200125e1760201c565b80620002338162000d3c565b915050620001b9565b5050565b5490565b620002508383620002c5565b6200025f600084848462000466565b620002b75760405162461bcd60e51b81526020600482015260326024820152600080516020620038f283398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016200012b565b505050565b80546001019055565b6001600160a01b0382166200031d5760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f206164647265737360448201526064016200012b565b6000818152600260205260409020546001600160a01b031615620003845760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016200012b565b62000394600083836001620005c2565b6000818152600260205260409020546001600160a01b031615620003fb5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e7465640000000060448201526064016200012b565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080546001600160a01b0319168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b600062000487846001600160a01b03166200065b60201b620012671760201c565b15620005b657604051630a85bd0160e11b81526001600160a01b0385169063150b7a0290620004c190339089908890889060040162000d58565b6020604051808303816000875af1925050508015620004ff575060408051601f3d908101601f19168201909252620004fc9181019062000dae565b60015b6200059b573d80801562000530576040519150601f19603f3d011682016040523d82523d6000602084013e62000535565b606091505b508051600003620005935760405162461bcd60e51b81526020600482015260326024820152600080516020620038f283398151915260448201527131b2b4bb32b91034b6b83632b6b2b73a32b960711b60648201526084016200012b565b805181602001fd5b6001600160e01b031916630a85bd0160e11b149050620005ba565b5060015b949350505050565b6001600160a01b03841615801590620005e357506001600160a01b03831615155b8015620005fa5750600d54600160a81b900460ff16155b156200063c5760405162461bcd60e51b815260206004820152601060248201526f6e6f74207472616e7366657261626c6560801b60448201526064016200012b565b62000655848484846200066a60201b620012761760201c565b50505050565b6001600160a01b03163b151590565b62000683848484846200065560201b62000fdc1760201c565b6001811115620006fc5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f72746564000000000000000000000060648201526084016200012b565b816001600160a01b0385166200075b576200075581600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b62000781565b836001600160a01b0316856001600160a01b0316146200078157620007818582620007ce565b6001600160a01b038416620007a1576200079b816200087b565b620007c7565b846001600160a01b0316846001600160a01b031614620007c757620007c7848262000935565b5050505050565b60006001620007e8846200098660201b62000d0c1760201c565b620007f4919062000de1565b60008381526007602052604090205490915080821462000848576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b6008546000906200088f9060019062000de1565b60008381526009602052604081205460088054939450909284908110620008ba57620008ba62000d10565b906000526020600020015490508060088381548110620008de57620008de62000d10565b600091825260208083209091019290925582815260099091526040808220849055858252812055600880548062000919576200091962000dfd565b6001900381819060005260206000200160009055905550505050565b60006200094d836200098660201b62000d0c1760201c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60006001600160a01b038216620009f25760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f7420612076616044820152683634b21037bbb732b960b91b60648201526084016200012b565b506001600160a01b031660009081526003602052604090205490565b634e487b7160e01b600052604160045260246000fd5b60005b8381101562000a4157818101518382015260200162000a27565b50506000910152565b600082601f83011262000a5c57600080fd5b81516001600160401b038082111562000a795762000a7962000a0e565b604051601f8301601f19908116603f0116810190828211818310171562000aa45762000aa462000a0e565b8160405283815286602085880101111562000abe57600080fd5b62000ad184602083016020890162000a24565b9695505050505050565b600080600080600060a0868803121562000af457600080fd5b85516001600160401b038082111562000b0c57600080fd5b62000b1a89838a0162000a4a565b9650602088015191508082111562000b3157600080fd5b62000b3f89838a0162000a4a565b9550604088015191508082111562000b5657600080fd5b62000b6489838a0162000a4a565b606089015190955091506001600160a01b038216821462000b8457600080fd5b60808801519193508082111562000b9a57600080fd5b5062000ba98882890162000a4a565b9150509295509295909350565b600181811c9082168062000bcb57607f821691505b60208210810362000bec57634e487b7160e01b600052602260045260246000fd5b50919050565b601f821115620002b757600081815260208120601f850160051c8101602086101562000c1b5750805b601f850160051c820191505b8181101562000c3c5782815560010162000c27565b505050505050565b81516001600160401b0381111562000c605762000c6062000a0e565b62000c788162000c71845462000bb6565b8462000bf2565b602080601f83116001811462000cb0576000841562000c975750858301515b600019600386901b1c1916600185901b17855562000c3c565b600085815260208120601f198616915b8281101562000ce15788860151825594840194600190910190840162000cc0565b508582101562000d005787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b634e487b7160e01b600052603260045260246000fd5b634e487b7160e01b600052601160045260246000fd5b60006001820162000d515762000d5162000d26565b5060010190565b600060018060a01b03808716835280861660208401525083604083015260806060830152825180608084015262000d978160a085016020870162000a24565b601f01601f19169190910160a00195945050505050565b60006020828403121562000dc157600080fd5b81516001600160e01b03198116811462000dda57600080fd5b9392505050565b8181038181111562000df75762000df762000d26565b92915050565b634e487b7160e01b600052603160045260246000fd5b612acf8062000e236000396000f3fe608060405234801561001057600080fd5b50600436106101c45760003560e01c806365371883116100f9578063b88d4fde11610097578063cf721b1511610071578063cf721b15146103d0578063d547cfb7146103d8578063d5abeb01146103e0578063e985e9c5146103e957600080fd5b8063b88d4fde14610397578063c87b56dd146103aa578063ce7c8b49146103bd57600080fd5b806392ff0d31116100d357806392ff0d31146103435780639404c91a1461036957806395d89b411461037c578063a22cb4651461038457600080fd5b8063653718831461030a5780636f8b44b01461031d57806370a082311461033057600080fd5b80632bb5e31e116101665780634f6ccce7116101405780634f6ccce7146102c95780634fb95e02146102dc578063549a95ea146102ef5780636352211e146102f757600080fd5b80632bb5e31e146102905780632f745c59146102a357806342842e0e146102b657600080fd5b8063095ea7b3116101a2578063095ea7b314610231578063101639f51461024657806318160ddd1461026b57806323b872dd1461027d57600080fd5b806301ffc9a7146101c957806306fdde03146101f1578063081812fc14610206575b600080fd5b6101dc6101d7366004612322565b610425565b60405190151581526020015b60405180910390f35b6101f9610436565b6040516101e891906123ad565b6102196102143660046123c0565b6104c8565b6040516001600160a01b0390911681526020016101e8565b61024461023f3660046123f5565b6104ef565b005b600d546101dc9074010000000000000000000000000000000000000000900460ff1681565b6008545b6040519081526020016101e8565b61024461028b36600461241f565b610625565b600d54610219906001600160a01b031681565b61026f6102b13660046123f5565b6106ac565b6102446102c436600461241f565b610754565b61026f6102d73660046123c0565b61076f565b6102446102ea3660046124fd565b610813565b6101f9610a49565b6102196103053660046123c0565b610ad7565b600c54610219906001600160a01b031681565b61024461032b3660046123c0565b610b3c565b61026f61033e366004612593565b610d0c565b600d546101dc907501000000000000000000000000000000000000000000900460ff1681565b61024461037736600461263c565b610da6565b6101f9610f3a565b610244610392366004612671565b610f49565b6102446103a53660046126ad565b610f54565b6101f96103b83660046123c0565b610fe2565b6102446103cb366004612715565b611049565b61026f61123d565b6101f961124d565b61026f600b5481565b6101dc6103f73660046127a2565b6001600160a01b03918216600090815260056020908152604080832093909416825291909152205460ff1690565b6000610430826113b2565b92915050565b606060008054610445906127d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610471906127d5565b80156104be5780601f10610493576101008083540402835291602001916104be565b820191906000526020600020905b8154815290600101906020018083116104a157829003601f168201915b5050505050905090565b60006104d382611408565b506000908152600460205260409020546001600160a01b031690565b60006104fa82610ad7565b9050806001600160a01b0316836001600160a01b0316036105885760405162461bcd60e51b815260206004820152602160248201527f4552433732313a20617070726f76616c20746f2063757272656e74206f776e6560448201527f720000000000000000000000000000000000000000000000000000000000000060648201526084015b60405180910390fd5b336001600160a01b03821614806105a457506105a481336103f7565b6106165760405162461bcd60e51b815260206004820152603d60248201527f4552433732313a20617070726f76652063616c6c6572206973206e6f7420746f60448201527f6b656e206f776e6572206f7220617070726f76656420666f7220616c6c000000606482015260840161057f565b610620838361146c565b505050565b61062f33826114f2565b6106a15760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161057f565b610620838383611571565b60006106b783610d0c565b821061072b5760405162461bcd60e51b815260206004820152602b60248201527f455243373231456e756d657261626c653a206f776e657220696e646578206f7560448201527f74206f6620626f756e6473000000000000000000000000000000000000000000606482015260840161057f565b506001600160a01b03919091166000908152600660209081526040808320938352929052205490565b61062083838360405180602001604052806000815250610f54565b600061077a60085490565b82106107ee5760405162461bcd60e51b815260206004820152602c60248201527f455243373231456e756d657261626c653a20676c6f62616c20696e646578206f60448201527f7574206f6620626f756e64730000000000000000000000000000000000000000606482015260840161057f565b6008828154811061080157610801612828565b90600052602060002001549050919050565b600c546001600160a01b031615806108ae5750600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610888573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906108ac9190612857565b115b8061094f5750600d546001600160a01b0316158061094f5750600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610929573d6000803e3d6000fd5b505050506040513d601f19601f8201168201806040525081019061094d9190612857565b115b61099b5760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161057f565b600d5474010000000000000000000000000000000000000000900460ff16610a055760405162461bcd60e51b815260206004820152601360248201527f4e4f545f52454d4f54455f4255524e41424c4500000000000000000000000000604482015260640161057f565b60005b8151811015610a4557610a33828281518110610a2657610a26612828565b60200260200101516117bf565b80610a3d8161289f565b915050610a08565b5050565b600f8054610a56906127d5565b80601f0160208091040260200160405190810160405280929190818152602001828054610a82906127d5565b8015610acf5780601f10610aa457610100808354040283529160200191610acf565b820191906000526020600020905b815481529060010190602001808311610ab257829003601f168201915b505050505081565b6000818152600260205260408120546001600160a01b0316806104305760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161057f565b600c546001600160a01b03161580610bd75750600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610bb1573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610bd59190612857565b115b80610c785750600d546001600160a01b03161580610c785750600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610c52573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610c769190612857565b115b610cc45760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161057f565b60405162461bcd60e51b815260206004820152601160248201527f6d617820737570706c79206c6f636b6564000000000000000000000000000000604482015260640161057f565b60006001600160a01b038216610d8a5760405162461bcd60e51b815260206004820152602960248201527f4552433732313a2061646472657373207a65726f206973206e6f74206120766160448201527f6c6964206f776e65720000000000000000000000000000000000000000000000606482015260840161057f565b506001600160a01b031660009081526003602052604090205490565b600c546001600160a01b03161580610e415750600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610e1b573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610e3f9190612857565b115b80610ee25750600d546001600160a01b03161580610ee25750600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa158015610ebc573d6000803e3d6000fd5b505050506040513d601f19601f82011682018060405250810190610ee09190612857565b115b610f2e5760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161057f565b600f610a458282612907565b606060018054610445906127d5565b610a4533838361187a565b610f5e33836114f2565b610fd05760405162461bcd60e51b815260206004820152602d60248201527f4552433732313a2063616c6c6572206973206e6f7420746f6b656e206f776e6560448201527f72206f7220617070726f76656400000000000000000000000000000000000000606482015260840161057f565b610fdc84848484611966565b50505050565b6060610fed82611408565b6000610ff76119ef565b905060008151116110175760405180602001604052806000815250611042565b80611021846119fe565b6040516020016110329291906129e5565b6040516020818303038152906040525b9392505050565b600c546001600160a01b031615806110e45750600c546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa1580156110be573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906110e29190612857565b115b806111855750600d546001600160a01b031615806111855750600d546040517f70a082310000000000000000000000000000000000000000000000000000000081523360048201526000916001600160a01b0316906370a0823190602401602060405180830381865afa15801561115f573d6000803e3d6000fd5b505050506040513d601f19601f820116820180604052508101906111839190612857565b115b6111d15760405162461bcd60e51b815260206004820152600e60248201527f4e6f7420617574686f72697a6564000000000000000000000000000000000000604482015260640161057f565b600b548151600a546111e39190612a14565b11156112315760405162461bcd60e51b815260206004820152601260248201527f4d41585f535550504c595f524541434845440000000000000000000000000000604482015260640161057f565b61123a81611a9e565b50565b6000611248600a5490565b905090565b600e8054610a56906127d5565b5490565b80546001019055565b6001600160a01b03163b151590565b60018111156112ed5760405162461bcd60e51b815260206004820152603560248201527f455243373231456e756d657261626c653a20636f6e736563757469766520747260448201527f616e7366657273206e6f7420737570706f727465640000000000000000000000606482015260840161057f565b816001600160a01b0385166113495761134481600880546000838152600960205260408120829055600182018355919091527ff3f7a9fe364faab93b216da50a3214154f22a0a2b415b23a84c8169e8b636ee30155565b61136c565b836001600160a01b0316856001600160a01b03161461136c5761136c8582611b05565b6001600160a01b0384166113885761138381611ba2565b6113ab565b846001600160a01b0316846001600160a01b0316146113ab576113ab8482611c51565b5050505050565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f780e9d63000000000000000000000000000000000000000000000000000000001480610430575061043082611c95565b6000818152600260205260409020546001600160a01b031661123a5760405162461bcd60e51b815260206004820152601860248201527f4552433732313a20696e76616c696420746f6b656e2049440000000000000000604482015260640161057f565b600081815260046020526040902080547fffffffffffffffffffffffff0000000000000000000000000000000000000000166001600160a01b03841690811790915581906114b982610ad7565b6001600160a01b03167f8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b92560405160405180910390a45050565b6000806114fe83610ad7565b9050806001600160a01b0316846001600160a01b0316148061154557506001600160a01b0380821660009081526005602090815260408083209388168352929052205460ff165b806115695750836001600160a01b031661155e846104c8565b6001600160a01b0316145b949350505050565b826001600160a01b031661158482610ad7565b6001600160a01b0316146116005760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161057f565b6001600160a01b03821661167b5760405162461bcd60e51b8152602060048201526024808201527f4552433732313a207472616e7366657220746f20746865207a65726f2061646460448201527f7265737300000000000000000000000000000000000000000000000000000000606482015260840161057f565b6116888383836001611d78565b826001600160a01b031661169b82610ad7565b6001600160a01b0316146117175760405162461bcd60e51b815260206004820152602560248201527f4552433732313a207472616e736665722066726f6d20696e636f72726563742060448201527f6f776e6572000000000000000000000000000000000000000000000000000000606482015260840161057f565b600081815260046020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169091556001600160a01b0387811680865260038552838620805460001901905590871680865283862080546001019055868652600290945282852080549092168417909155905184937fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef91a4505050565b60006117ca82610ad7565b90506117da816000846001611d78565b6117e382610ad7565b600083815260046020908152604080832080547fffffffffffffffffffffffff00000000000000000000000000000000000000009081169091556001600160a01b0385168085526003845282852080546000190190558785526002909352818420805490911690555192935084927fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908390a45050565b816001600160a01b0316836001600160a01b0316036118db5760405162461bcd60e51b815260206004820152601960248201527f4552433732313a20617070726f766520746f2063616c6c657200000000000000604482015260640161057f565b6001600160a01b0383811660008181526005602090815260408083209487168084529482529182902080547fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff001686151590811790915591519182527f17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31910160405180910390a3505050565b611971848484611571565b61197d84848484611e19565b610fdc5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161057f565b6060600e8054610445906127d5565b60606000611a0b83611fd8565b600101905060008167ffffffffffffffff811115611a2b57611a2b61245b565b6040519080825280601f01601f191660200182016040528015611a55576020820181803683370190505b5090508181016020015b600019017f3031323334353637383961626364656600000000000000000000000000000000600a86061a8153600a8504945084611a5f57509392505050565b60005b8151811015610a4557611ae5828281518110611abf57611abf612828565b6020026020010151611ad0600a5490565b604051806020016040528060008152506120ba565b611af3600a80546001019055565b80611afd8161289f565b915050611aa1565b60006001611b1284610d0c565b611b1c9190612a27565b600083815260076020526040902054909150808214611b6f576001600160a01b03841660009081526006602090815260408083208584528252808320548484528184208190558352600790915290208190555b5060009182526007602090815260408084208490556001600160a01b039094168352600681528383209183525290812055565b600854600090611bb490600190612a27565b60008381526009602052604081205460088054939450909284908110611bdc57611bdc612828565b906000526020600020015490508060088381548110611bfd57611bfd612828565b6000918252602080832090910192909255828152600990915260408082208490558582528120556008805480611c3557611c35612a3a565b6001900381819060005260206000200160009055905550505050565b6000611c5c83610d0c565b6001600160a01b039093166000908152600660209081526040808320868452825280832085905593825260079052919091209190915550565b60007fffffffff0000000000000000000000000000000000000000000000000000000082167f80ac58cd000000000000000000000000000000000000000000000000000000001480611d2857507fffffffff0000000000000000000000000000000000000000000000000000000082167f5b5e139f00000000000000000000000000000000000000000000000000000000145b8061043057507f01ffc9a7000000000000000000000000000000000000000000000000000000007fffffffff00000000000000000000000000000000000000000000000000000000831614610430565b6001600160a01b03841615801590611d9857506001600160a01b03831615155b8015611dc05750600d547501000000000000000000000000000000000000000000900460ff16155b15611e0d5760405162461bcd60e51b815260206004820152601060248201527f6e6f74207472616e7366657261626c6500000000000000000000000000000000604482015260640161057f565b610fdc84848484611276565b60006001600160a01b0384163b15611fcd576040517f150b7a020000000000000000000000000000000000000000000000000000000081526001600160a01b0385169063150b7a0290611e76903390899088908890600401612a69565b6020604051808303816000875af1925050508015611ecf575060408051601f3d9081017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0168201909252611ecc91810190612aa5565b60015b611f82573d808015611efd576040519150601f19603f3d011682016040523d82523d6000602084013e611f02565b606091505b508051600003611f7a5760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161057f565b805181602001fd5b7fffffffff00000000000000000000000000000000000000000000000000000000167f150b7a0200000000000000000000000000000000000000000000000000000000149050611569565b506001949350505050565b6000807a184f03e93ff9f4daa797ed6e38ed64bf6a1f0100000000000000008310612021577a184f03e93ff9f4daa797ed6e38ed64bf6a1f010000000000000000830492506040015b6d04ee2d6d415b85acef8100000000831061204d576d04ee2d6d415b85acef8100000000830492506020015b662386f26fc10000831061206b57662386f26fc10000830492506010015b6305f5e1008310612083576305f5e100830492506008015b612710831061209757612710830492506004015b606483106120a9576064830492506002015b600a83106104305760010192915050565b6120c48383612143565b6120d16000848484611e19565b6106205760405162461bcd60e51b815260206004820152603260248201527f4552433732313a207472616e7366657220746f206e6f6e20455243373231526560448201527f63656976657220696d706c656d656e7465720000000000000000000000000000606482015260840161057f565b6001600160a01b0382166121995760405162461bcd60e51b815260206004820181905260248201527f4552433732313a206d696e7420746f20746865207a65726f2061646472657373604482015260640161057f565b6000818152600260205260409020546001600160a01b0316156121fe5760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161057f565b61220c600083836001611d78565b6000818152600260205260409020546001600160a01b0316156122715760405162461bcd60e51b815260206004820152601c60248201527f4552433732313a20746f6b656e20616c7265616479206d696e74656400000000604482015260640161057f565b6001600160a01b038216600081815260036020908152604080832080546001019055848352600290915280822080547fffffffffffffffffffffffff0000000000000000000000000000000000000000168417905551839291907fddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef908290a45050565b7fffffffff000000000000000000000000000000000000000000000000000000008116811461123a57600080fd5b60006020828403121561233457600080fd5b8135611042816122f4565b60005b8381101561235a578181015183820152602001612342565b50506000910152565b6000815180845261237b81602086016020860161233f565b601f017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0169290920160200192915050565b6020815260006110426020830184612363565b6000602082840312156123d257600080fd5b5035919050565b80356001600160a01b03811681146123f057600080fd5b919050565b6000806040838503121561240857600080fd5b612411836123d9565b946020939093013593505050565b60008060006060848603121561243457600080fd5b61243d846123d9565b925061244b602085016123d9565b9150604084013590509250925092565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b604051601f82017fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe016810167ffffffffffffffff811182821017156124d1576124d161245b565b604052919050565b600067ffffffffffffffff8211156124f3576124f361245b565b5060051b60200190565b6000602080838503121561251057600080fd5b823567ffffffffffffffff81111561252757600080fd5b8301601f8101851361253857600080fd5b803561254b612546826124d9565b61248a565b81815260059190911b8201830190838101908783111561256a57600080fd5b928401925b828410156125885783358252928401929084019061256f565b979650505050505050565b6000602082840312156125a557600080fd5b611042826123d9565b600082601f8301126125bf57600080fd5b813567ffffffffffffffff8111156125d9576125d961245b565b61260a60207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe0601f8401160161248a565b81815284602083860101111561261f57600080fd5b816020850160208301376000918101602001919091529392505050565b60006020828403121561264e57600080fd5b813567ffffffffffffffff81111561266557600080fd5b611569848285016125ae565b6000806040838503121561268457600080fd5b61268d836123d9565b9150602083013580151581146126a257600080fd5b809150509250929050565b600080600080608085870312156126c357600080fd5b6126cc856123d9565b93506126da602086016123d9565b925060408501359150606085013567ffffffffffffffff8111156126fd57600080fd5b612709878288016125ae565b91505092959194509250565b6000602080838503121561272857600080fd5b823567ffffffffffffffff81111561273f57600080fd5b8301601f8101851361275057600080fd5b803561275e612546826124d9565b81815260059190911b8201830190838101908783111561277d57600080fd5b928401925b8284101561258857612793846123d9565b82529284019290840190612782565b600080604083850312156127b557600080fd5b6127be836123d9565b91506127cc602084016123d9565b90509250929050565b600181811c908216806127e957607f821691505b602082108103612822577f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b50919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b60006020828403121561286957600080fd5b5051919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600060001982036128b2576128b2612870565b5060010190565b601f82111561062057600081815260208120601f850160051c810160208610156128e05750805b601f850160051c820191505b818110156128ff578281556001016128ec565b505050505050565b815167ffffffffffffffff8111156129215761292161245b565b6129358161292f84546127d5565b846128b9565b602080601f83116001811461296a57600084156129525750858301515b600019600386901b1c1916600185901b1785556128ff565b6000858152602081207fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffe08616915b828110156129b757888601518255948401946001909101908401612998565b50858210156129d55787850151600019600388901b60f8161c191681555b5050505050600190811b01905550565b600083516129f781846020880161233f565b835190830190612a0b81836020880161233f565b01949350505050565b8082018082111561043057610430612870565b8181038181111561043057610430612870565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603160045260246000fd5b60006001600160a01b03808716835280861660208401525083604083015260806060830152612a9b6080830184612363565b9695505050505050565b600060208284031215612ab757600080fd5b8151611042816122f456fea164736f6c6343000811000a4552433732313a207472616e7366657220746f206e6f6e204552433732315265",
}

// OwnerTokenABI is the input ABI used to generate the binding from.
// Deprecated: Use OwnerTokenMetaData.ABI instead.
var OwnerTokenABI = OwnerTokenMetaData.ABI

// OwnerTokenBin is the compiled bytecode used for deploying new contracts.
// Deprecated: Use OwnerTokenMetaData.Bin instead.
var OwnerTokenBin = OwnerTokenMetaData.Bin

// DeployOwnerToken deploys a new Ethereum contract, binding an instance of OwnerToken to it.
func DeployOwnerToken(auth *bind.TransactOpts, backend bind.ContractBackend, _name string, _symbol string, _baseTokenURI string, _receiver common.Address, _signerPublicKey []byte) (common.Address, *types.Transaction, *OwnerToken, error) {
	parsed, err := OwnerTokenMetaData.GetAbi()
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	if parsed == nil {
		return common.Address{}, nil, nil, errors.New("GetABI returned nil")
	}

	address, tx, contract, err := bind.DeployContract(auth, *parsed, common.FromHex(OwnerTokenBin), backend, _name, _symbol, _baseTokenURI, _receiver, _signerPublicKey)
	if err != nil {
		return common.Address{}, nil, nil, err
	}
	return address, tx, &OwnerToken{OwnerTokenCaller: OwnerTokenCaller{contract: contract}, OwnerTokenTransactor: OwnerTokenTransactor{contract: contract}, OwnerTokenFilterer: OwnerTokenFilterer{contract: contract}}, nil
}

// OwnerToken is an auto generated Go binding around an Ethereum contract.
type OwnerToken struct {
	OwnerTokenCaller     // Read-only binding to the contract
	OwnerTokenTransactor // Write-only binding to the contract
	OwnerTokenFilterer   // Log filterer for contract events
}

// OwnerTokenCaller is an auto generated read-only Go binding around an Ethereum contract.
type OwnerTokenCaller struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnerTokenTransactor is an auto generated write-only Go binding around an Ethereum contract.
type OwnerTokenTransactor struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnerTokenFilterer is an auto generated log filtering Go binding around an Ethereum contract events.
type OwnerTokenFilterer struct {
	contract *bind.BoundContract // Generic contract wrapper for the low level calls
}

// OwnerTokenSession is an auto generated Go binding around an Ethereum contract,
// with pre-set call and transact options.
type OwnerTokenSession struct {
	Contract     *OwnerToken       // Generic contract binding to set the session for
	CallOpts     bind.CallOpts     // Call options to use throughout this session
	TransactOpts bind.TransactOpts // Transaction auth options to use throughout this session
}

// OwnerTokenCallerSession is an auto generated read-only Go binding around an Ethereum contract,
// with pre-set call options.
type OwnerTokenCallerSession struct {
	Contract *OwnerTokenCaller // Generic contract caller binding to set the session for
	CallOpts bind.CallOpts     // Call options to use throughout this session
}

// OwnerTokenTransactorSession is an auto generated write-only Go binding around an Ethereum contract,
// with pre-set transact options.
type OwnerTokenTransactorSession struct {
	Contract     *OwnerTokenTransactor // Generic contract transactor binding to set the session for
	TransactOpts bind.TransactOpts     // Transaction auth options to use throughout this session
}

// OwnerTokenRaw is an auto generated low-level Go binding around an Ethereum contract.
type OwnerTokenRaw struct {
	Contract *OwnerToken // Generic contract binding to access the raw methods on
}

// OwnerTokenCallerRaw is an auto generated low-level read-only Go binding around an Ethereum contract.
type OwnerTokenCallerRaw struct {
	Contract *OwnerTokenCaller // Generic read-only contract binding to access the raw methods on
}

// OwnerTokenTransactorRaw is an auto generated low-level write-only Go binding around an Ethereum contract.
type OwnerTokenTransactorRaw struct {
	Contract *OwnerTokenTransactor // Generic write-only contract binding to access the raw methods on
}

// NewOwnerToken creates a new instance of OwnerToken, bound to a specific deployed contract.
func NewOwnerToken(address common.Address, backend bind.ContractBackend) (*OwnerToken, error) {
	contract, err := bindOwnerToken(address, backend, backend, backend)
	if err != nil {
		return nil, err
	}
	return &OwnerToken{OwnerTokenCaller: OwnerTokenCaller{contract: contract}, OwnerTokenTransactor: OwnerTokenTransactor{contract: contract}, OwnerTokenFilterer: OwnerTokenFilterer{contract: contract}}, nil
}

// NewOwnerTokenCaller creates a new read-only instance of OwnerToken, bound to a specific deployed contract.
func NewOwnerTokenCaller(address common.Address, caller bind.ContractCaller) (*OwnerTokenCaller, error) {
	contract, err := bindOwnerToken(address, caller, nil, nil)
	if err != nil {
		return nil, err
	}
	return &OwnerTokenCaller{contract: contract}, nil
}

// NewOwnerTokenTransactor creates a new write-only instance of OwnerToken, bound to a specific deployed contract.
func NewOwnerTokenTransactor(address common.Address, transactor bind.ContractTransactor) (*OwnerTokenTransactor, error) {
	contract, err := bindOwnerToken(address, nil, transactor, nil)
	if err != nil {
		return nil, err
	}
	return &OwnerTokenTransactor{contract: contract}, nil
}

// NewOwnerTokenFilterer creates a new log filterer instance of OwnerToken, bound to a specific deployed contract.
func NewOwnerTokenFilterer(address common.Address, filterer bind.ContractFilterer) (*OwnerTokenFilterer, error) {
	contract, err := bindOwnerToken(address, nil, nil, filterer)
	if err != nil {
		return nil, err
	}
	return &OwnerTokenFilterer{contract: contract}, nil
}

// bindOwnerToken binds a generic wrapper to an already deployed contract.
func bindOwnerToken(address common.Address, caller bind.ContractCaller, transactor bind.ContractTransactor, filterer bind.ContractFilterer) (*bind.BoundContract, error) {
	parsed, err := OwnerTokenMetaData.GetAbi()
	if err != nil {
		return nil, err
	}
	return bind.NewBoundContract(address, *parsed, caller, transactor, filterer), nil
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OwnerToken *OwnerTokenRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OwnerToken.Contract.OwnerTokenCaller.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OwnerToken *OwnerTokenRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OwnerToken.Contract.OwnerTokenTransactor.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OwnerToken *OwnerTokenRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OwnerToken.Contract.OwnerTokenTransactor.contract.Transact(opts, method, params...)
}

// Call invokes the (constant) contract method with params as input values and
// sets the output to result. The result type might be a single field for simple
// returns, a slice of interfaces for anonymous returns and a struct for named
// returns.
func (_OwnerToken *OwnerTokenCallerRaw) Call(opts *bind.CallOpts, result *[]interface{}, method string, params ...interface{}) error {
	return _OwnerToken.Contract.contract.Call(opts, result, method, params...)
}

// Transfer initiates a plain transaction to move funds to the contract, calling
// its default method if one is available.
func (_OwnerToken *OwnerTokenTransactorRaw) Transfer(opts *bind.TransactOpts) (*types.Transaction, error) {
	return _OwnerToken.Contract.contract.Transfer(opts)
}

// Transact invokes the (paid) contract method with params as input values.
func (_OwnerToken *OwnerTokenTransactorRaw) Transact(opts *bind.TransactOpts, method string, params ...interface{}) (*types.Transaction, error) {
	return _OwnerToken.Contract.contract.Transact(opts, method, params...)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_OwnerToken *OwnerTokenCaller) BalanceOf(opts *bind.CallOpts, owner common.Address) (*big.Int, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "balanceOf", owner)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_OwnerToken *OwnerTokenSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _OwnerToken.Contract.BalanceOf(&_OwnerToken.CallOpts, owner)
}

// BalanceOf is a free data retrieval call binding the contract method 0x70a08231.
//
// Solidity: function balanceOf(address owner) view returns(uint256)
func (_OwnerToken *OwnerTokenCallerSession) BalanceOf(owner common.Address) (*big.Int, error) {
	return _OwnerToken.Contract.BalanceOf(&_OwnerToken.CallOpts, owner)
}

// BaseTokenURI is a free data retrieval call binding the contract method 0xd547cfb7.
//
// Solidity: function baseTokenURI() view returns(string)
func (_OwnerToken *OwnerTokenCaller) BaseTokenURI(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "baseTokenURI")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// BaseTokenURI is a free data retrieval call binding the contract method 0xd547cfb7.
//
// Solidity: function baseTokenURI() view returns(string)
func (_OwnerToken *OwnerTokenSession) BaseTokenURI() (string, error) {
	return _OwnerToken.Contract.BaseTokenURI(&_OwnerToken.CallOpts)
}

// BaseTokenURI is a free data retrieval call binding the contract method 0xd547cfb7.
//
// Solidity: function baseTokenURI() view returns(string)
func (_OwnerToken *OwnerTokenCallerSession) BaseTokenURI() (string, error) {
	return _OwnerToken.Contract.BaseTokenURI(&_OwnerToken.CallOpts)
}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_OwnerToken *OwnerTokenCaller) GetApproved(opts *bind.CallOpts, tokenId *big.Int) (common.Address, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "getApproved", tokenId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_OwnerToken *OwnerTokenSession) GetApproved(tokenId *big.Int) (common.Address, error) {
	return _OwnerToken.Contract.GetApproved(&_OwnerToken.CallOpts, tokenId)
}

// GetApproved is a free data retrieval call binding the contract method 0x081812fc.
//
// Solidity: function getApproved(uint256 tokenId) view returns(address)
func (_OwnerToken *OwnerTokenCallerSession) GetApproved(tokenId *big.Int) (common.Address, error) {
	return _OwnerToken.Contract.GetApproved(&_OwnerToken.CallOpts, tokenId)
}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_OwnerToken *OwnerTokenCaller) IsApprovedForAll(opts *bind.CallOpts, owner common.Address, operator common.Address) (bool, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "isApprovedForAll", owner, operator)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_OwnerToken *OwnerTokenSession) IsApprovedForAll(owner common.Address, operator common.Address) (bool, error) {
	return _OwnerToken.Contract.IsApprovedForAll(&_OwnerToken.CallOpts, owner, operator)
}

// IsApprovedForAll is a free data retrieval call binding the contract method 0xe985e9c5.
//
// Solidity: function isApprovedForAll(address owner, address operator) view returns(bool)
func (_OwnerToken *OwnerTokenCallerSession) IsApprovedForAll(owner common.Address, operator common.Address) (bool, error) {
	return _OwnerToken.Contract.IsApprovedForAll(&_OwnerToken.CallOpts, owner, operator)
}

// MasterToken is a free data retrieval call binding the contract method 0x2bb5e31e.
//
// Solidity: function masterToken() view returns(address)
func (_OwnerToken *OwnerTokenCaller) MasterToken(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "masterToken")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// MasterToken is a free data retrieval call binding the contract method 0x2bb5e31e.
//
// Solidity: function masterToken() view returns(address)
func (_OwnerToken *OwnerTokenSession) MasterToken() (common.Address, error) {
	return _OwnerToken.Contract.MasterToken(&_OwnerToken.CallOpts)
}

// MasterToken is a free data retrieval call binding the contract method 0x2bb5e31e.
//
// Solidity: function masterToken() view returns(address)
func (_OwnerToken *OwnerTokenCallerSession) MasterToken() (common.Address, error) {
	return _OwnerToken.Contract.MasterToken(&_OwnerToken.CallOpts)
}

// MaxSupply is a free data retrieval call binding the contract method 0xd5abeb01.
//
// Solidity: function maxSupply() view returns(uint256)
func (_OwnerToken *OwnerTokenCaller) MaxSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "maxSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MaxSupply is a free data retrieval call binding the contract method 0xd5abeb01.
//
// Solidity: function maxSupply() view returns(uint256)
func (_OwnerToken *OwnerTokenSession) MaxSupply() (*big.Int, error) {
	return _OwnerToken.Contract.MaxSupply(&_OwnerToken.CallOpts)
}

// MaxSupply is a free data retrieval call binding the contract method 0xd5abeb01.
//
// Solidity: function maxSupply() view returns(uint256)
func (_OwnerToken *OwnerTokenCallerSession) MaxSupply() (*big.Int, error) {
	return _OwnerToken.Contract.MaxSupply(&_OwnerToken.CallOpts)
}

// MintedCount is a free data retrieval call binding the contract method 0xcf721b15.
//
// Solidity: function mintedCount() view returns(uint256)
func (_OwnerToken *OwnerTokenCaller) MintedCount(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "mintedCount")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// MintedCount is a free data retrieval call binding the contract method 0xcf721b15.
//
// Solidity: function mintedCount() view returns(uint256)
func (_OwnerToken *OwnerTokenSession) MintedCount() (*big.Int, error) {
	return _OwnerToken.Contract.MintedCount(&_OwnerToken.CallOpts)
}

// MintedCount is a free data retrieval call binding the contract method 0xcf721b15.
//
// Solidity: function mintedCount() view returns(uint256)
func (_OwnerToken *OwnerTokenCallerSession) MintedCount() (*big.Int, error) {
	return _OwnerToken.Contract.MintedCount(&_OwnerToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_OwnerToken *OwnerTokenCaller) Name(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "name")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_OwnerToken *OwnerTokenSession) Name() (string, error) {
	return _OwnerToken.Contract.Name(&_OwnerToken.CallOpts)
}

// Name is a free data retrieval call binding the contract method 0x06fdde03.
//
// Solidity: function name() view returns(string)
func (_OwnerToken *OwnerTokenCallerSession) Name() (string, error) {
	return _OwnerToken.Contract.Name(&_OwnerToken.CallOpts)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_OwnerToken *OwnerTokenCaller) OwnerOf(opts *bind.CallOpts, tokenId *big.Int) (common.Address, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "ownerOf", tokenId)

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_OwnerToken *OwnerTokenSession) OwnerOf(tokenId *big.Int) (common.Address, error) {
	return _OwnerToken.Contract.OwnerOf(&_OwnerToken.CallOpts, tokenId)
}

// OwnerOf is a free data retrieval call binding the contract method 0x6352211e.
//
// Solidity: function ownerOf(uint256 tokenId) view returns(address)
func (_OwnerToken *OwnerTokenCallerSession) OwnerOf(tokenId *big.Int) (common.Address, error) {
	return _OwnerToken.Contract.OwnerOf(&_OwnerToken.CallOpts, tokenId)
}

// OwnerToken is a free data retrieval call binding the contract method 0x65371883.
//
// Solidity: function ownerToken() view returns(address)
func (_OwnerToken *OwnerTokenCaller) OwnerToken(opts *bind.CallOpts) (common.Address, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "ownerToken")

	if err != nil {
		return *new(common.Address), err
	}

	out0 := *abi.ConvertType(out[0], new(common.Address)).(*common.Address)

	return out0, err

}

// OwnerToken is a free data retrieval call binding the contract method 0x65371883.
//
// Solidity: function ownerToken() view returns(address)
func (_OwnerToken *OwnerTokenSession) OwnerToken() (common.Address, error) {
	return _OwnerToken.Contract.OwnerToken(&_OwnerToken.CallOpts)
}

// OwnerToken is a free data retrieval call binding the contract method 0x65371883.
//
// Solidity: function ownerToken() view returns(address)
func (_OwnerToken *OwnerTokenCallerSession) OwnerToken() (common.Address, error) {
	return _OwnerToken.Contract.OwnerToken(&_OwnerToken.CallOpts)
}

// RemoteBurnable is a free data retrieval call binding the contract method 0x101639f5.
//
// Solidity: function remoteBurnable() view returns(bool)
func (_OwnerToken *OwnerTokenCaller) RemoteBurnable(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "remoteBurnable")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// RemoteBurnable is a free data retrieval call binding the contract method 0x101639f5.
//
// Solidity: function remoteBurnable() view returns(bool)
func (_OwnerToken *OwnerTokenSession) RemoteBurnable() (bool, error) {
	return _OwnerToken.Contract.RemoteBurnable(&_OwnerToken.CallOpts)
}

// RemoteBurnable is a free data retrieval call binding the contract method 0x101639f5.
//
// Solidity: function remoteBurnable() view returns(bool)
func (_OwnerToken *OwnerTokenCallerSession) RemoteBurnable() (bool, error) {
	return _OwnerToken.Contract.RemoteBurnable(&_OwnerToken.CallOpts)
}

// SignerPublicKey is a free data retrieval call binding the contract method 0x549a95ea.
//
// Solidity: function signerPublicKey() view returns(bytes)
func (_OwnerToken *OwnerTokenCaller) SignerPublicKey(opts *bind.CallOpts) ([]byte, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "signerPublicKey")

	if err != nil {
		return *new([]byte), err
	}

	out0 := *abi.ConvertType(out[0], new([]byte)).(*[]byte)

	return out0, err

}

// SignerPublicKey is a free data retrieval call binding the contract method 0x549a95ea.
//
// Solidity: function signerPublicKey() view returns(bytes)
func (_OwnerToken *OwnerTokenSession) SignerPublicKey() ([]byte, error) {
	return _OwnerToken.Contract.SignerPublicKey(&_OwnerToken.CallOpts)
}

// SignerPublicKey is a free data retrieval call binding the contract method 0x549a95ea.
//
// Solidity: function signerPublicKey() view returns(bytes)
func (_OwnerToken *OwnerTokenCallerSession) SignerPublicKey() ([]byte, error) {
	return _OwnerToken.Contract.SignerPublicKey(&_OwnerToken.CallOpts)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_OwnerToken *OwnerTokenCaller) SupportsInterface(opts *bind.CallOpts, interfaceId [4]byte) (bool, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "supportsInterface", interfaceId)

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_OwnerToken *OwnerTokenSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _OwnerToken.Contract.SupportsInterface(&_OwnerToken.CallOpts, interfaceId)
}

// SupportsInterface is a free data retrieval call binding the contract method 0x01ffc9a7.
//
// Solidity: function supportsInterface(bytes4 interfaceId) view returns(bool)
func (_OwnerToken *OwnerTokenCallerSession) SupportsInterface(interfaceId [4]byte) (bool, error) {
	return _OwnerToken.Contract.SupportsInterface(&_OwnerToken.CallOpts, interfaceId)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_OwnerToken *OwnerTokenCaller) Symbol(opts *bind.CallOpts) (string, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "symbol")

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_OwnerToken *OwnerTokenSession) Symbol() (string, error) {
	return _OwnerToken.Contract.Symbol(&_OwnerToken.CallOpts)
}

// Symbol is a free data retrieval call binding the contract method 0x95d89b41.
//
// Solidity: function symbol() view returns(string)
func (_OwnerToken *OwnerTokenCallerSession) Symbol() (string, error) {
	return _OwnerToken.Contract.Symbol(&_OwnerToken.CallOpts)
}

// TokenByIndex is a free data retrieval call binding the contract method 0x4f6ccce7.
//
// Solidity: function tokenByIndex(uint256 index) view returns(uint256)
func (_OwnerToken *OwnerTokenCaller) TokenByIndex(opts *bind.CallOpts, index *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "tokenByIndex", index)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TokenByIndex is a free data retrieval call binding the contract method 0x4f6ccce7.
//
// Solidity: function tokenByIndex(uint256 index) view returns(uint256)
func (_OwnerToken *OwnerTokenSession) TokenByIndex(index *big.Int) (*big.Int, error) {
	return _OwnerToken.Contract.TokenByIndex(&_OwnerToken.CallOpts, index)
}

// TokenByIndex is a free data retrieval call binding the contract method 0x4f6ccce7.
//
// Solidity: function tokenByIndex(uint256 index) view returns(uint256)
func (_OwnerToken *OwnerTokenCallerSession) TokenByIndex(index *big.Int) (*big.Int, error) {
	return _OwnerToken.Contract.TokenByIndex(&_OwnerToken.CallOpts, index)
}

// TokenOfOwnerByIndex is a free data retrieval call binding the contract method 0x2f745c59.
//
// Solidity: function tokenOfOwnerByIndex(address owner, uint256 index) view returns(uint256)
func (_OwnerToken *OwnerTokenCaller) TokenOfOwnerByIndex(opts *bind.CallOpts, owner common.Address, index *big.Int) (*big.Int, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "tokenOfOwnerByIndex", owner, index)

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TokenOfOwnerByIndex is a free data retrieval call binding the contract method 0x2f745c59.
//
// Solidity: function tokenOfOwnerByIndex(address owner, uint256 index) view returns(uint256)
func (_OwnerToken *OwnerTokenSession) TokenOfOwnerByIndex(owner common.Address, index *big.Int) (*big.Int, error) {
	return _OwnerToken.Contract.TokenOfOwnerByIndex(&_OwnerToken.CallOpts, owner, index)
}

// TokenOfOwnerByIndex is a free data retrieval call binding the contract method 0x2f745c59.
//
// Solidity: function tokenOfOwnerByIndex(address owner, uint256 index) view returns(uint256)
func (_OwnerToken *OwnerTokenCallerSession) TokenOfOwnerByIndex(owner common.Address, index *big.Int) (*big.Int, error) {
	return _OwnerToken.Contract.TokenOfOwnerByIndex(&_OwnerToken.CallOpts, owner, index)
}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_OwnerToken *OwnerTokenCaller) TokenURI(opts *bind.CallOpts, tokenId *big.Int) (string, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "tokenURI", tokenId)

	if err != nil {
		return *new(string), err
	}

	out0 := *abi.ConvertType(out[0], new(string)).(*string)

	return out0, err

}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_OwnerToken *OwnerTokenSession) TokenURI(tokenId *big.Int) (string, error) {
	return _OwnerToken.Contract.TokenURI(&_OwnerToken.CallOpts, tokenId)
}

// TokenURI is a free data retrieval call binding the contract method 0xc87b56dd.
//
// Solidity: function tokenURI(uint256 tokenId) view returns(string)
func (_OwnerToken *OwnerTokenCallerSession) TokenURI(tokenId *big.Int) (string, error) {
	return _OwnerToken.Contract.TokenURI(&_OwnerToken.CallOpts, tokenId)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_OwnerToken *OwnerTokenCaller) TotalSupply(opts *bind.CallOpts) (*big.Int, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "totalSupply")

	if err != nil {
		return *new(*big.Int), err
	}

	out0 := *abi.ConvertType(out[0], new(*big.Int)).(**big.Int)

	return out0, err

}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_OwnerToken *OwnerTokenSession) TotalSupply() (*big.Int, error) {
	return _OwnerToken.Contract.TotalSupply(&_OwnerToken.CallOpts)
}

// TotalSupply is a free data retrieval call binding the contract method 0x18160ddd.
//
// Solidity: function totalSupply() view returns(uint256)
func (_OwnerToken *OwnerTokenCallerSession) TotalSupply() (*big.Int, error) {
	return _OwnerToken.Contract.TotalSupply(&_OwnerToken.CallOpts)
}

// Transferable is a free data retrieval call binding the contract method 0x92ff0d31.
//
// Solidity: function transferable() view returns(bool)
func (_OwnerToken *OwnerTokenCaller) Transferable(opts *bind.CallOpts) (bool, error) {
	var out []interface{}
	err := _OwnerToken.contract.Call(opts, &out, "transferable")

	if err != nil {
		return *new(bool), err
	}

	out0 := *abi.ConvertType(out[0], new(bool)).(*bool)

	return out0, err

}

// Transferable is a free data retrieval call binding the contract method 0x92ff0d31.
//
// Solidity: function transferable() view returns(bool)
func (_OwnerToken *OwnerTokenSession) Transferable() (bool, error) {
	return _OwnerToken.Contract.Transferable(&_OwnerToken.CallOpts)
}

// Transferable is a free data retrieval call binding the contract method 0x92ff0d31.
//
// Solidity: function transferable() view returns(bool)
func (_OwnerToken *OwnerTokenCallerSession) Transferable() (bool, error) {
	return _OwnerToken.Contract.Transferable(&_OwnerToken.CallOpts)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenTransactor) Approve(opts *bind.TransactOpts, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "approve", to, tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenSession) Approve(to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.Approve(&_OwnerToken.TransactOpts, to, tokenId)
}

// Approve is a paid mutator transaction binding the contract method 0x095ea7b3.
//
// Solidity: function approve(address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenTransactorSession) Approve(to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.Approve(&_OwnerToken.TransactOpts, to, tokenId)
}

// MintTo is a paid mutator transaction binding the contract method 0xce7c8b49.
//
// Solidity: function mintTo(address[] addresses) returns()
func (_OwnerToken *OwnerTokenTransactor) MintTo(opts *bind.TransactOpts, addresses []common.Address) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "mintTo", addresses)
}

// MintTo is a paid mutator transaction binding the contract method 0xce7c8b49.
//
// Solidity: function mintTo(address[] addresses) returns()
func (_OwnerToken *OwnerTokenSession) MintTo(addresses []common.Address) (*types.Transaction, error) {
	return _OwnerToken.Contract.MintTo(&_OwnerToken.TransactOpts, addresses)
}

// MintTo is a paid mutator transaction binding the contract method 0xce7c8b49.
//
// Solidity: function mintTo(address[] addresses) returns()
func (_OwnerToken *OwnerTokenTransactorSession) MintTo(addresses []common.Address) (*types.Transaction, error) {
	return _OwnerToken.Contract.MintTo(&_OwnerToken.TransactOpts, addresses)
}

// RemoteBurn is a paid mutator transaction binding the contract method 0x4fb95e02.
//
// Solidity: function remoteBurn(uint256[] tokenIds) returns()
func (_OwnerToken *OwnerTokenTransactor) RemoteBurn(opts *bind.TransactOpts, tokenIds []*big.Int) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "remoteBurn", tokenIds)
}

// RemoteBurn is a paid mutator transaction binding the contract method 0x4fb95e02.
//
// Solidity: function remoteBurn(uint256[] tokenIds) returns()
func (_OwnerToken *OwnerTokenSession) RemoteBurn(tokenIds []*big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.RemoteBurn(&_OwnerToken.TransactOpts, tokenIds)
}

// RemoteBurn is a paid mutator transaction binding the contract method 0x4fb95e02.
//
// Solidity: function remoteBurn(uint256[] tokenIds) returns()
func (_OwnerToken *OwnerTokenTransactorSession) RemoteBurn(tokenIds []*big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.RemoteBurn(&_OwnerToken.TransactOpts, tokenIds)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenTransactor) SafeTransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "safeTransferFrom", from, to, tokenId)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenSession) SafeTransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.SafeTransferFrom(&_OwnerToken.TransactOpts, from, to, tokenId)
}

// SafeTransferFrom is a paid mutator transaction binding the contract method 0x42842e0e.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenTransactorSession) SafeTransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.SafeTransferFrom(&_OwnerToken.TransactOpts, from, to, tokenId)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes data) returns()
func (_OwnerToken *OwnerTokenTransactor) SafeTransferFrom0(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int, data []byte) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "safeTransferFrom0", from, to, tokenId, data)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes data) returns()
func (_OwnerToken *OwnerTokenSession) SafeTransferFrom0(from common.Address, to common.Address, tokenId *big.Int, data []byte) (*types.Transaction, error) {
	return _OwnerToken.Contract.SafeTransferFrom0(&_OwnerToken.TransactOpts, from, to, tokenId, data)
}

// SafeTransferFrom0 is a paid mutator transaction binding the contract method 0xb88d4fde.
//
// Solidity: function safeTransferFrom(address from, address to, uint256 tokenId, bytes data) returns()
func (_OwnerToken *OwnerTokenTransactorSession) SafeTransferFrom0(from common.Address, to common.Address, tokenId *big.Int, data []byte) (*types.Transaction, error) {
	return _OwnerToken.Contract.SafeTransferFrom0(&_OwnerToken.TransactOpts, from, to, tokenId, data)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_OwnerToken *OwnerTokenTransactor) SetApprovalForAll(opts *bind.TransactOpts, operator common.Address, approved bool) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "setApprovalForAll", operator, approved)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_OwnerToken *OwnerTokenSession) SetApprovalForAll(operator common.Address, approved bool) (*types.Transaction, error) {
	return _OwnerToken.Contract.SetApprovalForAll(&_OwnerToken.TransactOpts, operator, approved)
}

// SetApprovalForAll is a paid mutator transaction binding the contract method 0xa22cb465.
//
// Solidity: function setApprovalForAll(address operator, bool approved) returns()
func (_OwnerToken *OwnerTokenTransactorSession) SetApprovalForAll(operator common.Address, approved bool) (*types.Transaction, error) {
	return _OwnerToken.Contract.SetApprovalForAll(&_OwnerToken.TransactOpts, operator, approved)
}

// SetMaxSupply is a paid mutator transaction binding the contract method 0x6f8b44b0.
//
// Solidity: function setMaxSupply(uint256 _newMaxSupply) returns()
func (_OwnerToken *OwnerTokenTransactor) SetMaxSupply(opts *bind.TransactOpts, _newMaxSupply *big.Int) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "setMaxSupply", _newMaxSupply)
}

// SetMaxSupply is a paid mutator transaction binding the contract method 0x6f8b44b0.
//
// Solidity: function setMaxSupply(uint256 _newMaxSupply) returns()
func (_OwnerToken *OwnerTokenSession) SetMaxSupply(_newMaxSupply *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.SetMaxSupply(&_OwnerToken.TransactOpts, _newMaxSupply)
}

// SetMaxSupply is a paid mutator transaction binding the contract method 0x6f8b44b0.
//
// Solidity: function setMaxSupply(uint256 _newMaxSupply) returns()
func (_OwnerToken *OwnerTokenTransactorSession) SetMaxSupply(_newMaxSupply *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.SetMaxSupply(&_OwnerToken.TransactOpts, _newMaxSupply)
}

// SetSignerPublicKey is a paid mutator transaction binding the contract method 0x9404c91a.
//
// Solidity: function setSignerPublicKey(bytes _newSignerPublicKey) returns()
func (_OwnerToken *OwnerTokenTransactor) SetSignerPublicKey(opts *bind.TransactOpts, _newSignerPublicKey []byte) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "setSignerPublicKey", _newSignerPublicKey)
}

// SetSignerPublicKey is a paid mutator transaction binding the contract method 0x9404c91a.
//
// Solidity: function setSignerPublicKey(bytes _newSignerPublicKey) returns()
func (_OwnerToken *OwnerTokenSession) SetSignerPublicKey(_newSignerPublicKey []byte) (*types.Transaction, error) {
	return _OwnerToken.Contract.SetSignerPublicKey(&_OwnerToken.TransactOpts, _newSignerPublicKey)
}

// SetSignerPublicKey is a paid mutator transaction binding the contract method 0x9404c91a.
//
// Solidity: function setSignerPublicKey(bytes _newSignerPublicKey) returns()
func (_OwnerToken *OwnerTokenTransactorSession) SetSignerPublicKey(_newSignerPublicKey []byte) (*types.Transaction, error) {
	return _OwnerToken.Contract.SetSignerPublicKey(&_OwnerToken.TransactOpts, _newSignerPublicKey)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenTransactor) TransferFrom(opts *bind.TransactOpts, from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.contract.Transact(opts, "transferFrom", from, to, tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenSession) TransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.TransferFrom(&_OwnerToken.TransactOpts, from, to, tokenId)
}

// TransferFrom is a paid mutator transaction binding the contract method 0x23b872dd.
//
// Solidity: function transferFrom(address from, address to, uint256 tokenId) returns()
func (_OwnerToken *OwnerTokenTransactorSession) TransferFrom(from common.Address, to common.Address, tokenId *big.Int) (*types.Transaction, error) {
	return _OwnerToken.Contract.TransferFrom(&_OwnerToken.TransactOpts, from, to, tokenId)
}

// OwnerTokenApprovalIterator is returned from FilterApproval and is used to iterate over the raw logs and unpacked data for Approval events raised by the OwnerToken contract.
type OwnerTokenApprovalIterator struct {
	Event *OwnerTokenApproval // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OwnerTokenApprovalIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OwnerTokenApproval)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OwnerTokenApproval)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OwnerTokenApprovalIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OwnerTokenApprovalIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OwnerTokenApproval represents a Approval event raised by the OwnerToken contract.
type OwnerTokenApproval struct {
	Owner    common.Address
	Approved common.Address
	TokenId  *big.Int
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterApproval is a free log retrieval operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_OwnerToken *OwnerTokenFilterer) FilterApproval(opts *bind.FilterOpts, owner []common.Address, approved []common.Address, tokenId []*big.Int) (*OwnerTokenApprovalIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var approvedRule []interface{}
	for _, approvedItem := range approved {
		approvedRule = append(approvedRule, approvedItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _OwnerToken.contract.FilterLogs(opts, "Approval", ownerRule, approvedRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return &OwnerTokenApprovalIterator{contract: _OwnerToken.contract, event: "Approval", logs: logs, sub: sub}, nil
}

// WatchApproval is a free log subscription operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_OwnerToken *OwnerTokenFilterer) WatchApproval(opts *bind.WatchOpts, sink chan<- *OwnerTokenApproval, owner []common.Address, approved []common.Address, tokenId []*big.Int) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var approvedRule []interface{}
	for _, approvedItem := range approved {
		approvedRule = append(approvedRule, approvedItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _OwnerToken.contract.WatchLogs(opts, "Approval", ownerRule, approvedRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OwnerTokenApproval)
				if err := _OwnerToken.contract.UnpackLog(event, "Approval", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApproval is a log parse operation binding the contract event 0x8c5be1e5ebec7d5bd14f71427d1e84f3dd0314c0f7b2291e5b200ac8c7c3b925.
//
// Solidity: event Approval(address indexed owner, address indexed approved, uint256 indexed tokenId)
func (_OwnerToken *OwnerTokenFilterer) ParseApproval(log types.Log) (*OwnerTokenApproval, error) {
	event := new(OwnerTokenApproval)
	if err := _OwnerToken.contract.UnpackLog(event, "Approval", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// OwnerTokenApprovalForAllIterator is returned from FilterApprovalForAll and is used to iterate over the raw logs and unpacked data for ApprovalForAll events raised by the OwnerToken contract.
type OwnerTokenApprovalForAllIterator struct {
	Event *OwnerTokenApprovalForAll // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OwnerTokenApprovalForAllIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OwnerTokenApprovalForAll)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OwnerTokenApprovalForAll)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OwnerTokenApprovalForAllIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OwnerTokenApprovalForAllIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OwnerTokenApprovalForAll represents a ApprovalForAll event raised by the OwnerToken contract.
type OwnerTokenApprovalForAll struct {
	Owner    common.Address
	Operator common.Address
	Approved bool
	Raw      types.Log // Blockchain specific contextual infos
}

// FilterApprovalForAll is a free log retrieval operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_OwnerToken *OwnerTokenFilterer) FilterApprovalForAll(opts *bind.FilterOpts, owner []common.Address, operator []common.Address) (*OwnerTokenApprovalForAllIterator, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _OwnerToken.contract.FilterLogs(opts, "ApprovalForAll", ownerRule, operatorRule)
	if err != nil {
		return nil, err
	}
	return &OwnerTokenApprovalForAllIterator{contract: _OwnerToken.contract, event: "ApprovalForAll", logs: logs, sub: sub}, nil
}

// WatchApprovalForAll is a free log subscription operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_OwnerToken *OwnerTokenFilterer) WatchApprovalForAll(opts *bind.WatchOpts, sink chan<- *OwnerTokenApprovalForAll, owner []common.Address, operator []common.Address) (event.Subscription, error) {

	var ownerRule []interface{}
	for _, ownerItem := range owner {
		ownerRule = append(ownerRule, ownerItem)
	}
	var operatorRule []interface{}
	for _, operatorItem := range operator {
		operatorRule = append(operatorRule, operatorItem)
	}

	logs, sub, err := _OwnerToken.contract.WatchLogs(opts, "ApprovalForAll", ownerRule, operatorRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OwnerTokenApprovalForAll)
				if err := _OwnerToken.contract.UnpackLog(event, "ApprovalForAll", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseApprovalForAll is a log parse operation binding the contract event 0x17307eab39ab6107e8899845ad3d59bd9653f200f220920489ca2b5937696c31.
//
// Solidity: event ApprovalForAll(address indexed owner, address indexed operator, bool approved)
func (_OwnerToken *OwnerTokenFilterer) ParseApprovalForAll(log types.Log) (*OwnerTokenApprovalForAll, error) {
	event := new(OwnerTokenApprovalForAll)
	if err := _OwnerToken.contract.UnpackLog(event, "ApprovalForAll", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}

// OwnerTokenTransferIterator is returned from FilterTransfer and is used to iterate over the raw logs and unpacked data for Transfer events raised by the OwnerToken contract.
type OwnerTokenTransferIterator struct {
	Event *OwnerTokenTransfer // Event containing the contract specifics and raw log

	contract *bind.BoundContract // Generic contract to use for unpacking event data
	event    string              // Event name to use for unpacking event data

	logs chan types.Log        // Log channel receiving the found contract events
	sub  ethereum.Subscription // Subscription for errors, completion and termination
	done bool                  // Whether the subscription completed delivering logs
	fail error                 // Occurred error to stop iteration
}

// Next advances the iterator to the subsequent event, returning whether there
// are any more events found. In case of a retrieval or parsing error, false is
// returned and Error() can be queried for the exact failure.
func (it *OwnerTokenTransferIterator) Next() bool {
	// If the iterator failed, stop iterating
	if it.fail != nil {
		return false
	}
	// If the iterator completed, deliver directly whatever's available
	if it.done {
		select {
		case log := <-it.logs:
			it.Event = new(OwnerTokenTransfer)
			if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
				it.fail = err
				return false
			}
			it.Event.Raw = log
			return true

		default:
			return false
		}
	}
	// Iterator still in progress, wait for either a data or an error event
	select {
	case log := <-it.logs:
		it.Event = new(OwnerTokenTransfer)
		if err := it.contract.UnpackLog(it.Event, it.event, log); err != nil {
			it.fail = err
			return false
		}
		it.Event.Raw = log
		return true

	case err := <-it.sub.Err():
		it.done = true
		it.fail = err
		return it.Next()
	}
}

// Error returns any retrieval or parsing error occurred during filtering.
func (it *OwnerTokenTransferIterator) Error() error {
	return it.fail
}

// Close terminates the iteration process, releasing any pending underlying
// resources.
func (it *OwnerTokenTransferIterator) Close() error {
	it.sub.Unsubscribe()
	return nil
}

// OwnerTokenTransfer represents a Transfer event raised by the OwnerToken contract.
type OwnerTokenTransfer struct {
	From    common.Address
	To      common.Address
	TokenId *big.Int
	Raw     types.Log // Blockchain specific contextual infos
}

// FilterTransfer is a free log retrieval operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_OwnerToken *OwnerTokenFilterer) FilterTransfer(opts *bind.FilterOpts, from []common.Address, to []common.Address, tokenId []*big.Int) (*OwnerTokenTransferIterator, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _OwnerToken.contract.FilterLogs(opts, "Transfer", fromRule, toRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return &OwnerTokenTransferIterator{contract: _OwnerToken.contract, event: "Transfer", logs: logs, sub: sub}, nil
}

// WatchTransfer is a free log subscription operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_OwnerToken *OwnerTokenFilterer) WatchTransfer(opts *bind.WatchOpts, sink chan<- *OwnerTokenTransfer, from []common.Address, to []common.Address, tokenId []*big.Int) (event.Subscription, error) {

	var fromRule []interface{}
	for _, fromItem := range from {
		fromRule = append(fromRule, fromItem)
	}
	var toRule []interface{}
	for _, toItem := range to {
		toRule = append(toRule, toItem)
	}
	var tokenIdRule []interface{}
	for _, tokenIdItem := range tokenId {
		tokenIdRule = append(tokenIdRule, tokenIdItem)
	}

	logs, sub, err := _OwnerToken.contract.WatchLogs(opts, "Transfer", fromRule, toRule, tokenIdRule)
	if err != nil {
		return nil, err
	}
	return event.NewSubscription(func(quit <-chan struct{}) error {
		defer sub.Unsubscribe()
		for {
			select {
			case log := <-logs:
				// New log arrived, parse the event and forward to the user
				event := new(OwnerTokenTransfer)
				if err := _OwnerToken.contract.UnpackLog(event, "Transfer", log); err != nil {
					return err
				}
				event.Raw = log

				select {
				case sink <- event:
				case err := <-sub.Err():
					return err
				case <-quit:
					return nil
				}
			case err := <-sub.Err():
				return err
			case <-quit:
				return nil
			}
		}
	}), nil
}

// ParseTransfer is a log parse operation binding the contract event 0xddf252ad1be2c89b69c2b068fc378daa952ba7f163c4a11628f55a4df523b3ef.
//
// Solidity: event Transfer(address indexed from, address indexed to, uint256 indexed tokenId)
func (_OwnerToken *OwnerTokenFilterer) ParseTransfer(log types.Log) (*OwnerTokenTransfer, error) {
	event := new(OwnerTokenTransfer)
	if err := _OwnerToken.contract.UnpackLog(event, "Transfer", log); err != nil {
		return nil, err
	}
	event.Raw = log
	return event, nil
}
